# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, WANG Hailin
# This file is distributed under the same license as the abqpy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abqpy \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-05-13 03:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../../reference/session/display.md:1
msgid "Display Group"
msgstr ""

#: ../../../reference/session/display.md:3
msgid ""
"Display group commands are used to select a subset of the entities "
"displayed in the viewport."
msgstr ""

#: ../../../reference/session/display.md:5
msgid "Create display groups"
msgstr ""

#: ../../../reference/session/display.md:16
msgid "Other Classes"
msgstr ""

#~ msgid "Bases: :py:class:`~abaqus.Session.SessionBase.SessionBase`"
#~ msgstr ""

#~ msgid "Public Data Attributes:"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`attachedToGui "
#~ "<abaqus.Session.SessionBase.SessionBase.attachedToGui>`\\"
#~ msgstr ""

#~ msgid "A Boolean specifying whether an Abaqus interactive session is running."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`replayInProgress "
#~ "<abaqus.Session.SessionBase.SessionBase.replayInProgress>`\\"
#~ msgstr ""

#~ msgid "A Boolean specifying whether Abaqus is executing a replay file."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`kernelMemoryFootprint "
#~ "<abaqus.Session.SessionBase.SessionBase.kernelMemoryFootprint>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the memory usage "
#~ "value for the Abaqus/CAE kernel process"
#~ " in megabytes."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`kernelMemoryMaxFootprint "
#~ "<abaqus.Session.SessionBase.SessionBase.kernelMemoryMaxFootprint>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the maximum value "
#~ "for the memory usage for the "
#~ "Abaqus/CAE kernel process in megabytes."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`kernelMemoryLimit "
#~ "<abaqus.Session.SessionBase.SessionBase.kernelMemoryLimit>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the limit for "
#~ "the memory use for the Abaqus/CAE "
#~ "kernel process in megabytes."
#~ msgstr ""

#~ msgid ":py:obj:`colors <abaqus.Session.SessionBase.SessionBase.colors>`\\"
#~ msgstr ""

#~ msgid "A repository of Color objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`journalOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.journalOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A JournalOptions object specifying how "
#~ "to record selection of geometry in "
#~ "the journal and replay files."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`memoryReductionOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.memoryReductionOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A MemoryReductionOptions object specifying "
#~ "options for running in reduced memory"
#~ " mode."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`nodeQuery "
#~ "<abaqus.Session.SessionBase.SessionBase.nodeQuery>`\\"
#~ msgstr ""

#~ msgid "A NodeQuery object specifying nodes and their coordinates in a path."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`sketcherOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.sketcherOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A ConstrainedSketcherOptions object specifying "
#~ "common options for all sketches."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`viewerOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.viewerOptions>`\\"
#~ msgstr ""

#~ msgid "A ViewerOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`animationOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.animationOptions>`\\"
#~ msgstr ""

#~ msgid "An AnimationOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`aviOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.aviOptions>`\\"
#~ msgstr ""

#~ msgid "An AVIOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`imageAnimationOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.imageAnimationOptions>`\\"
#~ msgstr ""

#~ msgid "An ImageAnimationOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`imageAnimation "
#~ "<abaqus.Session.SessionBase.SessionBase.imageAnimation>`\\"
#~ msgstr ""

#~ msgid "An ImageAnimation object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`quickTimeOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.quickTimeOptions>`\\"
#~ msgstr ""

#~ msgid "A QuickTimeOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`viewports "
#~ "<abaqus.Session.SessionBase.SessionBase.viewports>`\\"
#~ msgstr ""

#~ msgid "A repository of Viewport objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`customData "
#~ "<abaqus.Session.SessionBase.SessionBase.customData>`\\"
#~ msgstr ""

#~ msgid "A RepositorySupport object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultFieldReportOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.defaultFieldReportOptions>`\\"
#~ msgstr ""

#~ msgid "A FieldReportOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultFreeBodyReportOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.defaultFreeBodyReportOptions>`\\"
#~ msgstr ""

#~ msgid "A FreeBodyReportOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`fieldReportOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.fieldReportOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`freeBodyReportOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.freeBodyReportOptions>`\\"
#~ msgstr ""

#~ msgid ":py:obj:`odbs <abaqus.Session.SessionBase.SessionBase.odbs>`\\"
#~ msgstr ""

#~ msgid "A repository of Odb objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`scratchOdbs "
#~ "<abaqus.Session.SessionBase.SessionBase.scratchOdbs>`\\"
#~ msgstr ""

#~ msgid "A repository of ScratchOdb objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultOdbDisplay "
#~ "<abaqus.Session.SessionBase.SessionBase.defaultOdbDisplay>`\\"
#~ msgstr ""

#~ msgid "A DefaultOdbDisplay object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultPlot "
#~ "<abaqus.Session.SessionBase.SessionBase.defaultPlot>`\\"
#~ msgstr ""

#~ msgid "A DefaultPlot object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultChartOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.defaultChartOptions>`\\"
#~ msgstr ""

#~ msgid "A DefaultChartOptions object."
#~ msgstr ""

#~ msgid ":py:obj:`odbData <abaqus.Session.SessionBase.SessionBase.odbData>`\\"
#~ msgstr ""

#~ msgid "A repository of OdbData objects."
#~ msgstr ""

#~ msgid ":py:obj:`mdbData <abaqus.Session.SessionBase.SessionBase.mdbData>`\\"
#~ msgstr ""

#~ msgid "A repository of MdbData objects."
#~ msgstr ""

#~ msgid ":py:obj:`paths <abaqus.Session.SessionBase.SessionBase.paths>`\\"
#~ msgstr ""

#~ msgid "A repository of Path objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`freeBodies "
#~ "<abaqus.Session.SessionBase.SessionBase.freeBodies>`\\"
#~ msgstr ""

#~ msgid "A repository of FreeBody objects."
#~ msgstr ""

#~ msgid ":py:obj:`streams <abaqus.Session.SessionBase.SessionBase.streams>`\\"
#~ msgstr ""

#~ msgid "A repository of Stream objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`spectrums "
#~ "<abaqus.Session.SessionBase.SessionBase.spectrums>`\\"
#~ msgstr ""

#~ msgid "A repository of Spectrum objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`currentProbeValues "
#~ "<abaqus.Session.SessionBase.SessionBase.currentProbeValues>`\\"
#~ msgstr ""

#~ msgid "A CurrentProbeValues object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultProbeOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.defaultProbeOptions>`\\"
#~ msgstr ""

#~ msgid "A ProbeOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`probeOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.probeOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`probeReport "
#~ "<abaqus.Session.SessionBase.SessionBase.probeReport>`\\"
#~ msgstr ""

#~ msgid "A ProbeReport object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultProbeReport "
#~ "<abaqus.Session.SessionBase.SessionBase.defaultProbeReport>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`selectedProbeValues "
#~ "<abaqus.Session.SessionBase.SessionBase.selectedProbeValues>`\\"
#~ msgstr ""

#~ msgid "A SelectedProbeValues object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`printOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.printOptions>`\\"
#~ msgstr ""

#~ msgid "A PrintOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`epsOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.epsOptions>`\\"
#~ msgstr ""

#~ msgid "An EpsOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`pageSetupOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.pageSetupOptions>`\\"
#~ msgstr ""

#~ msgid "A PageSetupOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`pngOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.pngOptions>`\\"
#~ msgstr ""

#~ msgid "A PngOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`psOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.psOptions>`\\"
#~ msgstr ""

#~ msgid "A PsOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`svgOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.svgOptions>`\\"
#~ msgstr ""

#~ msgid "A SvgOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`tiffOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.tiffOptions>`\\"
#~ msgstr ""

#~ msgid "A TiffOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`autoColors "
#~ "<abaqus.Session.SessionBase.SessionBase.autoColors>`\\"
#~ msgstr ""

#~ msgid ""
#~ "An AutoColors object specifying the "
#~ "color palette to be used for color"
#~ " coding."
#~ msgstr ""

#~ msgid ":py:obj:`xyColors <abaqus.Session.SessionBase.SessionBase.xyColors>`\\"
#~ msgstr ""

#~ msgid ""
#~ "An AutoColors object specifying the "
#~ "color palette to be used forXYCurve "
#~ "objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`xyDataObjects "
#~ "<abaqus.Session.SessionBase.SessionBase.xyDataObjects>`\\"
#~ msgstr ""

#~ msgid "A repository of XYData objects."
#~ msgstr ""

#~ msgid ":py:obj:`curves <abaqus.Session.SessionBase.SessionBase.curves>`\\"
#~ msgstr ""

#~ msgid "A repository of XYCurve objects."
#~ msgstr ""

#~ msgid ":py:obj:`xyPlots <abaqus.Session.SessionBase.SessionBase.xyPlots>`\\"
#~ msgstr ""

#~ msgid "A repository of XYPlot objects."
#~ msgstr ""

#~ msgid ":py:obj:`charts <abaqus.Session.SessionBase.SessionBase.charts>`\\"
#~ msgstr ""

#~ msgid "A repository of Chart objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultXYReportOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.defaultXYReportOptions>`\\"
#~ msgstr ""

#~ msgid "An XYReportOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`xyReportOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.xyReportOptions>`\\"
#~ msgstr ""

#~ msgid ":py:obj:`views <abaqus.Session.SessionBase.SessionBase.views>`\\"
#~ msgstr ""

#~ msgid "A repository of View objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`networkDatabaseConnectors "
#~ "<abaqus.Session.SessionBase.SessionBase.networkDatabaseConnectors>`\\"
#~ msgstr ""

#~ msgid "A repository of NetworkDatabaseConnector objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`displayGroups "
#~ "<abaqus.Session.SessionBase.SessionBase.displayGroups>`\\"
#~ msgstr ""

#~ msgid "A repository of DisplayGroup objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`graphicsInfo "
#~ "<abaqus.Session.SessionBase.SessionBase.graphicsInfo>`\\"
#~ msgstr ""

#~ msgid "A GraphicsInfo object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultGraphicsOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.defaultGraphicsOptions>`\\"
#~ msgstr ""

#~ msgid "A GraphicsOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`graphicsOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.graphicsOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultViewportAnnotationOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.defaultViewportAnnotationOptions>`\\"
#~ msgstr ""

#~ msgid "A ViewportAnnotationOptions object."
#~ msgstr ""

#~ msgid ":py:obj:`queues <abaqus.Session.SessionBase.SessionBase.queues>`\\"
#~ msgstr ""

#~ msgid "A repository of Queue objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`currentViewportName "
#~ "<abaqus.Session.SessionBase.SessionBase.currentViewportName>`\\"
#~ msgstr ""

#~ msgid "A String specifying the name of the current viewport."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`sessionState "
#~ "<abaqus.Session.SessionBase.SessionBase.sessionState>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A Dictionary object specifying the "
#~ "viewports and their associated models."
#~ msgstr ""

#~ msgid ":py:obj:`images <abaqus.Session.SessionBase.SessionBase.images>`\\"
#~ msgstr ""

#~ msgid "A repository of Image objects."
#~ msgstr ""

#~ msgid ":py:obj:`movies <abaqus.Session.SessionBase.SessionBase.movies>`\\"
#~ msgstr ""

#~ msgid "A repository of Movie objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultLightOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.defaultLightOptions>`\\"
#~ msgstr ""

#~ msgid "A LightOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`drawingArea "
#~ "<abaqus.Session.SessionBase.SessionBase.drawingArea>`\\"
#~ msgstr ""

#~ msgid "A DrawingArea object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultMesherOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.defaultMesherOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A MesherOptions object specifying how to"
#~ " control default settings in the Mesh"
#~ " module."
#~ msgstr ""

#~ msgid ":py:obj:`drawings <abaqus.Session.SessionBase.SessionBase.drawings>`\\"
#~ msgstr ""

#~ msgid "A repository of Drawing objects."
#~ msgstr ""

#~ msgid "Public Methods:"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DisplayGroup "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.DisplayGroup>`\\"
#~ " \\(name\\, leaf\\)"
#~ msgstr ""

#~ msgid "This method creates a DisplayGroup object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`setValues "
#~ "<abaqus.Session.SessionBase.SessionBase.setValues>`\\ "
#~ "\\(\\[kernelMemoryLimit\\]\\)"
#~ msgstr ""

#~ msgid "This method modifies the Session object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`enableCADConnection "
#~ "<abaqus.Session.SessionBase.SessionBase.enableCADConnection>`\\ "
#~ "\\(CADName\\[\\, portNum\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method enables the Abaqus/CAE "
#~ "listening port for the specified **CAD**"
#~ " system."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`isCADConnectionEnabled "
#~ "<abaqus.Session.SessionBase.SessionBase.isCADConnectionEnabled>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid "This method checks the status of CAD Connection."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`disableCADConnection "
#~ "<abaqus.Session.SessionBase.SessionBase.disableCADConnection>`\\ "
#~ "\\(CADName\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method disables an associative "
#~ "import CAD connection that was enabled."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`enableParameterUpdate "
#~ "<abaqus.Session.SessionBase.SessionBase.enableParameterUpdate>`\\ "
#~ "\\(CADName\\, CADVersion\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method enables parameter updates "
#~ "for ProE and NX by establishing a"
#~ " connection with the listening port "
#~ "previously setup by the CAD application."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`setCADPortNumber "
#~ "<abaqus.Session.SessionBase.SessionBase.setCADPortNumber>`\\ "
#~ "\\(CADName\\, Port\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method enables parameter updates "
#~ "for CATIA V5 and CATIA V6 by "
#~ "establishing a connection with the "
#~ "listening port previously setup by the"
#~ " CAD application."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`updateCADParameters "
#~ "<abaqus.Session.SessionBase.SessionBase.updateCADParameters>`\\ "
#~ "\\(modelName\\, CADName\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method updates the parameters for"
#~ " the specified model using the "
#~ "specified parameter file."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`disableParameterUpdate "
#~ "<abaqus.Session.SessionBase.SessionBase.disableParameterUpdate>`\\ "
#~ "\\(CADName\\)"
#~ msgstr ""

#~ msgid "This method disables an associative CAD connection using parameters."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`printToFile "
#~ "<abaqus.Session.SessionBase.SessionBase.printToFile>`\\ "
#~ "\\(fileName\\[\\, format\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method prints canvas objects to "
#~ "a file using the attributes stored "
#~ "in the PrintOptions object and the "
#~ "appropriate format options object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`printToPrinter "
#~ "<abaqus.Session.SessionBase.SessionBase.printToPrinter>`\\ "
#~ "\\(\\[printCommand\\, numCopies\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method prints canvas objects to "
#~ "a Windows printer or to a "
#~ "PostScript printer."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`saveOptions "
#~ "<abaqus.Session.SessionBase.SessionBase.saveOptions>`\\ "
#~ "\\(directory\\)"
#~ msgstr ""

#~ msgid "This method saves your customized display settings."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`writeVrmlFile "
#~ "<abaqus.Session.SessionBase.SessionBase.writeVrmlFile>`\\ "
#~ "\\(fileName\\[\\, format\\, canvasObjects\\]\\)"
#~ msgstr ""

#~ msgid "This method exports the current viewport objects to a file."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`write3DXMLFile "
#~ "<abaqus.Session.SessionBase.SessionBase.write3DXMLFile>`\\ "
#~ "\\(fileName\\[\\, format\\, canvasObjects\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`writeOBJFile "
#~ "<abaqus.Session.SessionBase.SessionBase.writeOBJFile>`\\ "
#~ "\\(fileName\\[\\, canvasObjects\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`openOdb "
#~ "<abaqus.Session.SessionBase.SessionBase.openOdb>`\\ "
#~ "\\(name\\[\\, path\\, readOnly\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method opens an existing output "
#~ "database (`.odb`) file and creates a "
#~ "new Odb object. This method is "
#~ "accessed only via the session object "
#~ "inside Abaqus/CAE and adds the new "
#~ "Odb object to the session.odbs "
#~ "repository. This method allows you to"
#~ " open multiple output databases at "
#~ "the same time and to use the "
#~ "repository key to specify a particular"
#~ " output database. For example::."
#~ msgstr ""

#~ msgid "Member Details:"
#~ msgstr ""

#~ msgid "This function can be accessed by::"
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroup on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

#~ msgid "A String specifying the repository key."
#~ msgstr ""

#~ msgid "A Leaf object specifying the items in the display group."
#~ msgstr ""

#~ msgid "Returns"
#~ msgstr ""

#~ msgid "A DisplayGroup object."
#~ msgstr ""

#~ msgid "Return type"
#~ msgstr ""

#~ msgid ":class:`DisplayGroup`"
#~ msgstr ""

#~ msgid "Bases: :py:class:`object`"
#~ msgstr ""

#~ msgid ""
#~ "DisplayGroup objects are used to select"
#~ " a subset of the entities displayed"
#~ " in the viewport."
#~ msgstr ""

#~ msgid "This object can be accessed by::"
#~ msgstr ""

#~ msgid "This method adds the specified items to the display group."
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroup.add on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all"
#~ "#simaker-displaygroupaddpyc>`__."
#~ msgstr ""

#~ msgid "A Leaf object specifying the items to add to the display group."
#~ msgstr ""

#~ msgid "A Boolean specifying whether Redo is possible or not."
#~ msgstr ""

#~ msgid "A Boolean specifying whether Undo is possible or not."
#~ msgstr ""

#~ msgid ""
#~ "This method redefines the display group"
#~ " to be only those items that "
#~ "are not shared by the **leaf** "
#~ "argument and by the display group."
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroup.either on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all"
#~ "#simaker-displaygroupeitherpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Leaf object specifying the items "
#~ "to be excluded from the display "
#~ "group."
#~ msgstr ""

#~ msgid ""
#~ "This method redefines the display group"
#~ " to be only those items that "
#~ "are shared by the **leaf** argument "
#~ "and the display group."
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroup.intersect on help.3ds.com/2019"
#~ " "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all"
#~ "#simaker-displaygroupintersectpyc>`__."
#~ msgstr ""

#~ msgid "A Leaf object specifying the items to be included in the display group."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the name of "
#~ "the model to which the display "
#~ "group belongs when the module is "
#~ "part- or assembly-based."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the module "
#~ "in which the display group has "
#~ "been created. The possible values are"
#~ " PART, ASSEMBLY, PART_ASSEMBLY, ODB, and"
#~ " ALL."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the name of "
#~ "the part to which the display "
#~ "group belongs when the module is "
#~ "part-based."
#~ msgstr ""

#~ msgid "This method redoes the last undone operation on the display group."
#~ msgstr ""

#~ msgid "This method removes the specified items from the display group."
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroup.remove on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all"
#~ "#simaker-displaygroupremovepyc>`__."
#~ msgstr ""

#~ msgid "A Leaf object specifying the items to remove from the display group."
#~ msgstr ""

#~ msgid ""
#~ "This method replaces the contents of "
#~ "the display group with the specified "
#~ "items."
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroup.replace on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all"
#~ "#simaker-displaygroupreplacepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Leaf object specifying the items "
#~ "with which to replace the current "
#~ "display group contents."
#~ msgstr ""

#~ msgid "This method undoes the last operation performed on the display group."
#~ msgstr ""

#~ msgid ""
#~ "Leaf objects are used to specify "
#~ "the items in a display group. Leaf"
#~ " objects are constructed as temporary "
#~ "objects, which are then used as "
#~ "arguments to DisplayGroup commands. Leaf "
#~ "objects have similarities to Set "
#~ "objects; however, Leaf objects are "
#~ "evaluated when the DisplayGroup expression "
#~ "is evaluated, and they can have "
#~ "SymbolicConstant values (which are also "
#~ "evaluated when the DisplayGroup expression "
#~ "is evaluated)."
#~ msgstr ""

#~ msgid ""
#~ "Check `Leaf on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leafpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "This method creates a Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the leaf "
#~ "type. Possible values are EMPTY_LEAF, "
#~ "DEFAULT_MODEL, ALL_ELEMENTS, ALL_NODES, and "
#~ "ALL_SURFACES."
#~ msgstr ""

#~ msgid "A Leaf object."
#~ msgstr ""

#~ msgid ":class:`Leaf`"
#~ msgstr ""

#~ msgid ""
#~ "A DisplayGroupInstance object stores the "
#~ "IDs of the entities displayed in a"
#~ " viewport. The DisplayGroupInstance object "
#~ "has no constructor. When you set a"
#~ " display group to be plotted in "
#~ "a viewport, Abaqus/CAE creates a "
#~ "DisplayGroupInstance object for each display"
#~ " group and places it in the "
#~ "DisplayGroupInstanceRepository object."
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroupInstance on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygroupinstancepyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method returns the list of "
#~ "elements present in the DisplayGroupInstance"
#~ " object. The elements method returns "
#~ "a Dictionary object that uses part "
#~ "instance names for the keys. The "
#~ "value of the items in the "
#~ "Dictionary object is a List of "
#~ "user element labels that belong to "
#~ "the part instance and are contained "
#~ "in the DisplayGroupInstance object. This "
#~ "method is available only for "
#~ "DisplayGroupInstance objects that are members"
#~ " of the DisplayGroupInstance repository "
#~ "member of the OdbDisplay object."
#~ msgstr ""

#~ msgid "A Dictionary object."
#~ msgstr ""

#~ msgid ":class:`dict`"
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether the display"
#~ " options stored on the DisplayGroupInstance"
#~ " object should be synchronized with "
#~ "changes to the viewport display options."
#~ " This member is available only for"
#~ " DisplayGroupInstance objects that are "
#~ "members of the DisplayGroupInstance repository"
#~ " member of the OdbDisplay object. The"
#~ " default value is OFF."
#~ msgstr ""

#~ msgid ""
#~ "This method is used to obtain the"
#~ " list of nodes present in the "
#~ "DisplayGroupInstance object. It returns a "
#~ "Dictionary object keyed by part instance"
#~ " names, the value of which is a"
#~ " list of user node labels belonging"
#~ " to the part instance and contained"
#~ " in the DisplayGroupInstance object. This"
#~ " method is available only for "
#~ "DisplayGroupInstance objects that are members"
#~ " of the DisplayGroupInstance repository "
#~ "member of OdbDisplay object."
#~ msgstr ""

#~ msgid ""
#~ "An OdbDisplayOptions object specifying this"
#~ " member is available only for "
#~ "DisplayGroupInstance objects that are members"
#~ " of the DisplayGroupInstance repository "
#~ "member of the OdbDisplay object."
#~ msgstr ""

#~ msgid ""
#~ "This method modifies the DisplayGroupInstance"
#~ " object. The setValues method is "
#~ "available only for DisplayGroupInstance "
#~ "objects that are members of the "
#~ "DisplayGroupInstance repository member of the"
#~ " OdbDisplay object."
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroupInstance.setValues on "
#~ "help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygroupinstancepyc.htm?contextscope=all"
#~ "#simaker-displaygroupinstancesetvaluespyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "The DisplayGroupInstanceRepository object stores "
#~ "DisplayGroupInstance objects. In addition to"
#~ " all the standard Python repository "
#~ "methods, the DisplayGroupInstance repository "
#~ "defines additional methods as described "
#~ "below."
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroupInstanceRepository on "
#~ "help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygroupinstancerepositorypyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method synchronizes the display "
#~ "options stored on the OdbDisplay object"
#~ " with the display options stored on"
#~ " the DisplayGroupInstance object."
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroupInstanceRepository.syncOptions on "
#~ "help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygroupinstancerepositorypyc.htm?contextscope=all"
#~ "#simaker-displaygroupinstancerepositorysyncoptionspyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether to "
#~ "synchronize the display options on all"
#~ " the DisplayGroupInstance objects stored in"
#~ " the DisplayGroupInstanceRepository for which "
#~ "**lockOptions** is OFF. The default "
#~ "value of **updateInstances** is ON."
#~ msgstr ""

#~ msgid "Bases: :py:class:`~abaqus.DisplayGroup.Leaf.Leaf`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromConstraintNames object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. A Leaf "
#~ "object is used used to specify the"
#~ " items in a display group. Leaf "
#~ "objects are constructed as temporary "
#~ "objects that are used as arguments "
#~ "to DisplayGroup (DisplayGroup object) "
#~ "commands. The LeafFromConstraintNames object "
#~ "is derived from the Leaf object."
#~ msgstr ""

#~ msgid "The ``LeafFromConstraintNames`` class was added."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromConstraintNames on help.3ds.com/2019"
#~ " "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromconstraintnamespyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of constraint objects."
#~ " Leaf objects specify the items in"
#~ " a display group."
#~ msgstr ""

#~ msgid "A sequence of tuples of name objects."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the Leaf "
#~ "type. Possible values are TIE, "
#~ "SHELL_TO_SOLID_COUPLING, DISTRIBUTING_COUPLING, "
#~ "KINEMATIC_COUPLING, RIGID_BODY, and MPC."
#~ msgstr ""

#~ msgid ":class:`A LeafFromConstraintNames object.`"
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the leaf "
#~ "type. Possible values are TIE, "
#~ "SHELL_TO_SOLID_COUPLING, DISTRIBUTING_COUPLING, "
#~ "KINEMATIC_COUPLING, RIGID_BODY, and MPC."
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromDatums object can be used"
#~ " whenever a Leaf object is expected"
#~ " as an argument. Leaf objects are "
#~ "used to specify the items in a "
#~ "display group. Leaf objects are "
#~ "constructed as temporary objects, which "
#~ "are then used as arguments to "
#~ "DisplayGroup commands. The LeafFromDatums "
#~ "object is derived from the Leaf "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromDatums on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromdatumspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of datum objects. "
#~ "Leaf objects specify the items in "
#~ "a display group."
#~ msgstr ""

#~ msgid "A sequence of datum objects."
#~ msgstr ""

#~ msgid "A LeafFromDatums object."
#~ msgstr ""

#~ msgid ":class:`LeafFromDatums`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromDisplayGroup object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands.The LeafFromDisplayGroup"
#~ " object is derived from the Leaf "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromDisplayGroup on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromdisplaygrouppyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of Display Group "
#~ "objects."
#~ msgstr ""

#~ msgid "A DisplayGroupArray object."
#~ msgstr ""

#~ msgid "A LeafFromDisplayGroup object."
#~ msgstr ""

#~ msgid ":class:`LeafFromDisplayGroup`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromElementLabels object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromElementLabels object is derived from"
#~ " the Leaf object. This page "
#~ "discusses:"
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromElementLabels on help.3ds.com/2019"
#~ " "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromelementlabelspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of element labels "
#~ "that belong to a single part "
#~ "instance."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the name of "
#~ "the part instance to which "
#~ "**elementLabels** refers."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Strings specifying "
#~ "expressions that denote element labels. "
#~ "The expression can be any of the"
#~ " following:An Int specifying a single "
#~ "element label; for example, `1`.A String"
#~ " specifying a single element label; "
#~ "for example, `'7'`.A String specifying a"
#~ " sequence of element labels; for "
#~ "example, `'3:5'` and `'3:15:3'`."
#~ msgstr ""

#~ msgid "A LeafFromElementLabels object."
#~ msgstr ""

#~ msgid ":class:`LeafFromElementLabels`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromElementSets object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromElementSets object is derived from "
#~ "the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromElementSets on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromelementsetspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "This method creates a Leaf object from a sequence of element sets."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Strings specifying element"
#~ " sets or a String specifying a "
#~ "single element set."
#~ msgstr ""

#~ msgid "A LeafFromElementSets object."
#~ msgstr ""

#~ msgid ":class:`LeafFromElementSets`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromElementVarRange object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromElementVarRange object is derived from"
#~ " the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromElementVarRange on help.3ds.com/2019"
#~ " "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromelementvarrangepyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from elements with values lying in "
#~ "a variable range."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the minimum value "
#~ "for the variable range. The default "
#~ "value is −3.40282346639E38."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the maximum value "
#~ "for the variable range. The default "
#~ "value is 3.40282346639e+038."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying the method used "
#~ "to evaluate the range. If "
#~ "**insideRange** = ON, the range falls"
#~ " inside the specified minimum and "
#~ "maximum values. The default value is "
#~ "ON."
#~ msgstr ""

#~ msgid "A LeafFromElementVarRange object."
#~ msgstr ""

#~ msgid ":class:`LeafFromElementVarRange`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromGeometry object can be used"
#~ " whenever a Leaf object is expected"
#~ " as an argument. Leaf objects are "
#~ "used to specify the items in a "
#~ "display group. Leaf objects are "
#~ "constructed as temporary objects, which "
#~ "are then used as arguments to "
#~ "DisplayGroup commands. The LeafFromGeometry "
#~ "object is derived from the Leaf "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromGeometry on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromgeometrypyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of edge, face and"
#~ " cell geometry objects. Any combination "
#~ "of edge, face or cell arguments is"
#~ " allowed however the arguments must "
#~ "specify at least one object--it is"
#~ " not permissible to create an empty"
#~ " leaf."
#~ msgstr ""

#~ msgid "A sequence of geometry edges."
#~ msgstr ""

#~ msgid "A sequence of geometry faces."
#~ msgstr ""

#~ msgid "A sequence of geometry cells."
#~ msgstr ""

#~ msgid "A LeafFromGeometry object."
#~ msgstr ""

#~ msgid ":class:`LeafFromGeometry`"
#~ msgstr ""

#~ msgid "Raises"
#~ msgstr ""

#~ msgid "If at least one of the sequences is not passed to this method."
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromInstance object can be used"
#~ " whenever a Leaf object is expected"
#~ " as an argument. Leaf objects are "
#~ "used to specify the items in a "
#~ "display group. Leaf objects are "
#~ "constructed as temporary objects, which "
#~ "are then used as arguments to "
#~ "DisplayGroup commands. The LeafFromInstance "
#~ "object is derived from the Leaf "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromInstance on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrominstancepyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of part instance "
#~ "objects."
#~ msgstr ""

#~ msgid "A PartInstance object or a Sequence of PartInstance objects."
#~ msgstr ""

#~ msgid "A LeafFromInstance object."
#~ msgstr ""

#~ msgid ":class:`LeafFromInstance`"
#~ msgstr ""

#~ msgid "If an invalid argument is passed to this method."
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromInstanceElementLabels object can "
#~ "be used whenever a Leaf object is"
#~ " expected as an argument. Leaf "
#~ "objects are used to specify the "
#~ "items in a display group. Leaf "
#~ "objects are constructed as temporary "
#~ "objects, which are then used as "
#~ "arguments to DisplayGroup commands. The "
#~ "LeafFromInstanceElementLabels object is derived "
#~ "from the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromInstanceElementLabels on "
#~ "help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrominstanceelementlabelspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of Strings specifying"
#~ " the element labels. Leaf objects "
#~ "specify the items in a display "
#~ "group."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of sequences specifying "
#~ "element labels. Each inner sequence "
#~ "consists of a PartInstance object "
#~ "followed by a sequence of Strings "
#~ "specifying element labels."
#~ msgstr ""

#~ msgid "A LeafFromInstanceElementLabels object."
#~ msgstr ""

#~ msgid ":class:`LeafFromInstanceElementLabels`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromInstanceNodeLabels object can be"
#~ " used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromInstanceNodeLabels object is derived "
#~ "from the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromInstanceNodeLabels on "
#~ "help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrominstancenodelabelspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of Strings specifying"
#~ " the node labels. Leaf objects "
#~ "specify the items in a display "
#~ "group."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of sequences specifying node"
#~ " labels. Each inner sequence consists "
#~ "of a PartInstance object followed by "
#~ "a sequence of Strings specifying node"
#~ " labels."
#~ msgstr ""

#~ msgid "A LeafFromInstanceNodeLabels object."
#~ msgstr ""

#~ msgid ":class:`LeafFromInstanceNodeLabels`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromMeshElementLabels object can be"
#~ " used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromMeshElementLabels object is derived "
#~ "from the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromMeshElementLabels on "
#~ "help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommeshelementlabelspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of mesh element "
#~ "objects. Leaf objects specify the items"
#~ " in a display group."
#~ msgstr ""

#~ msgid "A sequence of MeshElement objects specifying elements."
#~ msgstr ""

#~ msgid "A LeafFromMeshElementLabels object."
#~ msgstr ""

#~ msgid ":class:`LeafFromMeshElementLabels`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromMeshNodeLabels object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromMeshNodeLabels object is derived from"
#~ " the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromMeshNodeLabels on help.3ds.com/2019"
#~ " "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommeshnodelabelspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of mesh node "
#~ "objects. Leaf objects specify the items"
#~ " in a display group."
#~ msgstr ""

#~ msgid "A sequence of MeshNode objects specifying nodes."
#~ msgstr ""

#~ msgid "A LeafFromMeshNodeLabels object."
#~ msgstr ""

#~ msgid ":class:`LeafFromMeshNodeLabels`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromMeshSurfaceSets object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromMeshSurfaceSets object is derived from"
#~ " the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromMeshSurfaceSets on help.3ds.com/2019"
#~ " "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommeshsurfacesetspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "This method creates a Leaf object from a sequence of surface sets."
#~ msgstr ""

#~ msgid "A sequence of Surface objects."
#~ msgstr ""

#~ msgid "A LeafFromMeshSurfaceSets object."
#~ msgstr ""

#~ msgid ":class:`LeafFromMeshSurfaceSets`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromModelElemLabels object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromModelElemLabels object is derived from"
#~ " the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromModelElemLabels on help.3ds.com/2019"
#~ " "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommodelelemlabelspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of element labels "
#~ "spanning several part instances."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Strings specifying "
#~ "expressions that denote element labels "
#~ "per part instance in the model. "
#~ "Each part instance element expression is"
#~ " a sequence of a String specifying"
#~ " the part instance name and a "
#~ "sequence of element expressions; for "
#~ "example, `(('partInstance1',(1,'7','3:15;3'),), "
#~ "('partInstance2','8'),))`. The element expressions"
#~ " can be any of the following:An "
#~ "Int specifying a single element label;"
#~ " for example, `1`.A String specifying "
#~ "a single element label; for example, "
#~ "`'7'`.A String specifying a sequence of"
#~ " element labels; for example, `'3:5'` "
#~ "and `'3:15:3'`."
#~ msgstr ""

#~ msgid "A LeafFromModelElemLabels object."
#~ msgstr ""

#~ msgid ":class:`LeafFromModelElemLabels`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromModelNodeLabels object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromModelNodeLabels object is derived from"
#~ " the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromModelNodeLabels on help.3ds.com/2019"
#~ " "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommodelnodelabelspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of node labels "
#~ "spanning several part instances."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Strings specifying "
#~ "expressions that denote node labels per"
#~ " part instance in the model. Each "
#~ "part instance node expression is a "
#~ "sequence of a String specifying the "
#~ "part instance name and a sequence "
#~ "of node expressions; for example, "
#~ "`(('partInstance1',(1,'7','3:15;3'),), "
#~ "('partInstance2','8'),))`. The node expressions "
#~ "can be any of the following:An Int"
#~ " specifying a single node label; for"
#~ " example, `1`.A String specifying a "
#~ "single node label; for example, `'7'`.A"
#~ " String specifying a sequence of node"
#~ " labels; for example, `'3:5'` and "
#~ "`'3:15:3'`."
#~ msgstr ""

#~ msgid "A LeafFromModelNodeLabels object."
#~ msgstr ""

#~ msgid ":class:`LeafFromModelNodeLabels`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromNodeLabels object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromNodeLabels object is derived from "
#~ "the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromNodeLabels on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromnodelabelspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of node labels "
#~ "that belong to a single part "
#~ "instance."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the name of "
#~ "the part instance to which "
#~ "**nodeLabels** refers."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Strings specifying "
#~ "expressions that denote node labels. The"
#~ " expression can be any of the "
#~ "following:An Int specifying a single "
#~ "node label; for example, `1`.A String"
#~ " specifying a single node label; for"
#~ " example, `'7'`.A String specifying a "
#~ "sequence of node labels; for example,"
#~ " `'3:5'` and `'3:15:3'`."
#~ msgstr ""

#~ msgid "A LeafFromNodeLabels object."
#~ msgstr ""

#~ msgid ":class:`LeafFromNodeLabels`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromNodeSets object can be used"
#~ " whenever a Leaf object is expected"
#~ " as an argument. Leaf objects are "
#~ "used to specify the items in a "
#~ "display group. Leaf objects are "
#~ "constructed as temporary objects, which "
#~ "are then used as arguments to "
#~ "DisplayGroup commands. The LeafFromNodeSets "
#~ "object is derived from the Leaf "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromNodeSets on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromnodesetspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "This method creates a Leaf object from a sequence of node sets."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Strings specifying node"
#~ " sets or a String specifying a "
#~ "single node set."
#~ msgstr ""

#~ msgid "A LeafFromNodeSets object."
#~ msgstr ""

#~ msgid ":class:`LeafFromNodeSets`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromNodeVarRange object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromNodeVarRange object is derived from"
#~ " the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromNodeVarRange on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromnodevarrangepyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from nodes with values lying in a"
#~ " variable range."
#~ msgstr ""

#~ msgid "A LeafFromNodeVarRange object."
#~ msgstr ""

#~ msgid ":class:`LeafFromNodeVarRange`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromOdbEdgePick object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromOdbEdgePick object is derived from "
#~ "the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromOdbEdgePick on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbedgepickpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a tuple containing machine "
#~ "readable, compact strings defining the "
#~ "edges picked for each part instance. "
#~ "Leaf objects specify the items in "
#~ "a display group."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of tuples of the form"
#~ " [part name, entity count, machine "
#~ "readable pick strings]."
#~ msgstr ""

#~ msgid "A LeafFromOdbEdgePick object."
#~ msgstr ""

#~ msgid ":class:`LeafFromOdbEdgePick`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromOdbElementLayups object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromOdbElementLayups object is derived "
#~ "from the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromOdbElementLayups on help.3ds.com/2019"
#~ " "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementlayupspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of Strings specifying"
#~ " layup names. Leaf objects specify "
#~ "the items in a display group."
#~ msgstr ""

#~ msgid "A sequence of Strings specifying element layups."
#~ msgstr ""

#~ msgid "A LeafFromOdbElementLayups object."
#~ msgstr ""

#~ msgid ":class:`LeafFromOdbElementLayups`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromOdbElementMaterials object can be"
#~ " used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromOdbElementMaterials object is derived "
#~ "from the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromOdbElementMaterials on "
#~ "help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementmaterialspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of Strings specifying"
#~ " material names. Leaf objects specify "
#~ "the items in a display group."
#~ msgstr ""

#~ msgid "A sequence of Strings specifying element materials."
#~ msgstr ""

#~ msgid "A LeafFromOdbElementMaterials object."
#~ msgstr ""

#~ msgid ":class:`LeafFromOdbElementMaterials`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromOdbElementPick object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromOdbElementPick object is derived from"
#~ " the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromOdbElementPick on help.3ds.com/2019"
#~ " "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementpickpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a tuple containing machine "
#~ "readable, compact strings defining the "
#~ "elements picked for each part instance."
#~ " Leaf objects specify the items in"
#~ " a display group."
#~ msgstr ""

#~ msgid "A LeafFromOdbElementPick object."
#~ msgstr ""

#~ msgid ":class:`LeafFromOdbElementPick`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromOdbElementPlies object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromOdbElementPlies object is derived from"
#~ " the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromOdbElementPlies on help.3ds.com/2019"
#~ " "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementpliespyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of Strings specifying"
#~ " ply names. Leaf objects specify the"
#~ " items in a display group."
#~ msgstr ""

#~ msgid "A sequence of Strings specifying element plies."
#~ msgstr ""

#~ msgid "A LeafFromOdbElementPlies object."
#~ msgstr ""

#~ msgid ":class:`LeafFromOdbElementPlies`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromOdbElementSections object can be"
#~ " used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromOdbElementSections object is derived "
#~ "from the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromOdbElementSections on "
#~ "help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementsectionspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of Strings specifying"
#~ " section names. Leaf objects specify "
#~ "the items in a display group."
#~ msgstr ""

#~ msgid "A sequence of Strings specifying element Sections."
#~ msgstr ""

#~ msgid "A LeafFromOdbElementSections object."
#~ msgstr ""

#~ msgid ":class:`LeafFromOdbElementSections`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromOdbElementTypes object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromOdbElementTypes object is derived from"
#~ " the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromOdbElementTypes on help.3ds.com/2019"
#~ " "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementtypespyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of Strings specifying"
#~ " element names. Leaf objects specify "
#~ "the items in a display group."
#~ msgstr ""

#~ msgid "A sequence of Strings specifying element Types."
#~ msgstr ""

#~ msgid "A LeafFromOdbElementTypes object."
#~ msgstr ""

#~ msgid ":class:`LeafFromOdbElementTypes`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromOdbNodePick object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromOdbNodePick object is derived from "
#~ "the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromOdbNodePick on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbnodepickpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a tuple containing machine "
#~ "readable, compact strings defining the "
#~ "nodes picked for each part instance. "
#~ "Leaf objects specify the items in "
#~ "a display group."
#~ msgstr ""

#~ msgid "A LeafFromOdbNodePick object."
#~ msgstr ""

#~ msgid ":class:`LeafFromOdbNodePick`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromPartElementLabels object can be"
#~ " used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromPartElementLabels object is derived "
#~ "from the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromPartElementLabels on "
#~ "help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrompartelementlabelspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of Strings specifying"
#~ " element labels. Leaf objects specify "
#~ "the items in a display group."
#~ msgstr ""

#~ msgid "A Part object."
#~ msgstr ""

#~ msgid "A sequence of Strings specifying element labels."
#~ msgstr ""

#~ msgid "A LeafFromPartElementLabels object."
#~ msgstr ""

#~ msgid ":class:`LeafFromPartElementLabels`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromPartInstance object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromPartInstance object is derived from"
#~ " the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromPartInstance on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrompartinstancepyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "This method creates a Leaf object from a list of part instance names."
#~ msgstr ""

#~ msgid "A sequence of Strings specifying the names of the part instances."
#~ msgstr ""

#~ msgid "A LeafFromPartInstance object."
#~ msgstr ""

#~ msgid ":class:`LeafFromPartInstance`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromPartNodeLabels object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromPartNodeLabels object is derived from"
#~ " the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromPartNodeLabels on help.3ds.com/2019"
#~ " "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrompartnodelabelspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of Strings specifying"
#~ " node labels. Leaf objects specify "
#~ "the items in a display group."
#~ msgstr ""

#~ msgid "A sequence of Strings specifying node labels."
#~ msgstr ""

#~ msgid "A LeafFromPartNodeLabels object."
#~ msgstr ""

#~ msgid ":class:`LeafFromPartNodeLabels`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromReferencePoint object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromReferencePoint object is derived from"
#~ " the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromReferencePoint on help.3ds.com/2019"
#~ " "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromreferencepointpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from a sequence of ReferencePoint "
#~ "objects."
#~ msgstr ""

#~ msgid "A sequence of Reference Point objects."
#~ msgstr ""

#~ msgid "A LeafFromReferencePoint object."
#~ msgstr ""

#~ msgid ":class:`LeafFromReferencePoint`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromSets object can be used "
#~ "whenever a Leaf object is expected "
#~ "as an argument. Leaf objects are "
#~ "used to specify the items in a "
#~ "display group. Leaf objects are "
#~ "constructed as temporary objects, which "
#~ "are then used as arguments to "
#~ "DisplayGroup commands. The LeafFromSets object"
#~ " is derived from the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromSets on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromsetspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "This method creates a Leaf object from a sequence of Set objects."
#~ msgstr ""

#~ msgid "A sequence of Set objects."
#~ msgstr ""

#~ msgid "A LeafFromSets object."
#~ msgstr ""

#~ msgid ":class:`LeafFromSets`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromSurfaceSets object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromSurfaceSets object is derived from "
#~ "the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromSurfaceSets on help.3ds.com/2019 "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromsurfacesetspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Strings specifying surface"
#~ " sets, or a String specifying a "
#~ "single surface set."
#~ msgstr ""

#~ msgid "A LeafFromSurfaceSets object."
#~ msgstr ""

#~ msgid ":class:`LeafFromSurfaceSets`"
#~ msgstr ""

#~ msgid ""
#~ "The LeafFromSurfaceVarRange object can be "
#~ "used whenever a Leaf object is "
#~ "expected as an argument. Leaf objects"
#~ " are used to specify the items "
#~ "in a display group. Leaf objects "
#~ "are constructed as temporary objects, "
#~ "which are then used as arguments "
#~ "to DisplayGroup commands. The "
#~ "LeafFromSurfaceVarRange object is derived from"
#~ " the Leaf object."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromSurfaceVarRange on help.3ds.com/2019"
#~ " "
#~ "<https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromsurfacevarrangepyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Leaf object "
#~ "from surfaces with values lying in "
#~ "a variable range."
#~ msgstr ""

#~ msgid "A LeafFromSurfaceVarRange object."
#~ msgstr ""

#~ msgid ":class:`LeafFromSurfaceVarRange`"
#~ msgstr ""

