msgid ""
msgstr ""
"Project-Id-Version: abqpy-locale\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-14 01:59+0000\n"
"PO-Revision-Date: 2023-09-15 12:19\n"
"Last-Translator: \n"
"Language-Team: Chinese Simplified\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: abqpy-locale\n"
"X-Crowdin-Project-ID: 587413\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /main/2019/pot/getting_started.pot\n"
"X-Crowdin-File-ID: 3197\n"
"Language: zh_CN\n"

#: ../../../getting_started.md:1
msgid "Getting Started"
msgstr "入门指南"

#: ../../../getting_started.md:3
msgid "Introduction"
msgstr "简介"

#: ../../../getting_started.md:5
msgid ""
"`abqpy` is a Python package providing type hints for Python scripting of "
"Abaqus, you can use it to write you Python script of Abaqus fluently, even"
" without doing anything in Abaqus. It also provides some simple APIs to "
"execute the Abaqus commands so that you can run your Python script to "
"build the model, submit the job and extract the output data in just one "
"Python script, even without opening the Abaqus/CAE."
msgstr ""
"`abqpy` 是一个 Python 包，提供了一些类型提示，用于快速编写你的 Abaqus/Python "
"脚本，即便不打开 Abaqus/CAE。它还提供了一些简单的 API 用于调用 Abaqus 命令执行你的"
" Python 脚本，以便使用 Python 脚本快速构建 Abaqus 模型，并提交作业给 Abaqus "
"进行计算，并从计算结果中提取数据。"

#: ../../../getting_started.md:11
msgid "Installation"
msgstr "安装"

#: ../../../getting_started.md:13
msgid ""
"Make sure <a href=\"https://www.python.org/downloads/\"> <img "
"src=\"https://img.shields.io/badge/Python-3.7%2B-brightgreen\" "
"align=center /> </a> and <a href=\"https://www.3ds.com/products-"
"services/simulia/products/abaqus/\"> <img "
"src=\"https://img.shields.io/badge/Abaqus-2016%2B-brightgreen\" "
"align=center /> </a> are installed on your computer before installing "
"`abqpy`."
msgstr ""
"在安装 `abqpy` 之前，请确保 <a href=\"https://www.python.org/downloads/\"> "
"<img src=\"https://img.shields.io/badge/Python-3.7%2B-brightgreen\" "
"align=center /> </a> 和 <a href=\"https://www.3ds.com/products-"
"services/simulia/products/abaqus/\"> <img "
"src=\"https://img.shields.io/badge/Abaqus-2016%2B-brightgreen\" "
"align=center /> </a> 已安装到您的计算机上。"

#: ../../../getting_started.md:17
msgid "You can install `abqpy` with the following commands."
msgstr "你可以使用以下命令安装 `abqpy`。"

#: ../../../getting_started.md:45
msgid "Note"
msgstr "备注"

#: ../../../getting_started.md:46
msgid ""
"You are recommended to install the corresponding version of Abaqus and "
"`abqpy` to avoid any compatibility issues."
msgstr "建议您安装相应版本的 Abaqus 和 `abqpy`，以避免兼容性问题。"

#: ../../../getting_started.md:49
msgid "Two Python interpreters"
msgstr "两个 Python 解释器"

#: ../../../getting_started.md:51
msgid ""
"Before we go any further, it is necessary for us to understand two Python "
"interpreters."
msgstr "在我们进一步讨论之前，我们有必要了解两个 Python 解释器。"

#: ../../../getting_started.md:53
msgid ""
"When we use the Abaqus/CAE graphical user interface (GUI) to create a "
"model and to visualize the results, commands are issued internally by "
"Abaqus/CAE after every operation. These commands reflect the geometry you "
"created along with the options and settings you selected from each dialog "
"box. The GUI generates commands in an object-oriented programming language"
" called Python. The commands issued by the GUI are sent to the Abaqus/CAE "
"kernel. The kernel interprets the commands and uses the options and "
"settings to create an internal representation of our model. The kernel is "
"the brains behind Abaqus/CAE. The GUI is the interface between the user "
"and the kernel."
msgstr ""
"当我们使用 Abaqus/CAE 图形用户界面（GUI）创建模型并可视化结果时，命令由 Abaqus/CAE"
" 在每次操作后在内部发出。"
"这些命令反映您创建的几何图形以及从每个对话框中选择的选项和设置。GUI 使用名为 "
"Python 的面向对象编程语言生成命令。GUI 发出的命令将发送到 Abaqus/CAE 内核。"
"内核解释命令，并使用选项和设置来创建模型的内部表示。内核是 Abaqus/CAE 背后的大脑。"
"GUI 是用户和内核之间的接口。"

#: ../../../getting_started.md:62
msgid ""
"In a word, Abaqus use Python language to interact with the Abaqus kernel, "
"everything that can be done in Abaqus/CAE, can also be done using Python "
"script. Abaqus has already installed a Python interpreter so that "
"Abaqus/CAE can use it to interact with the Abaqus kernel."
msgstr ""
"总之，Abaqus 使用 Python 语言与 Abaqus 内核进行交互，所有可以在 Abaqus/CAE 中 "
"完成的事情，也可以使用 Python 脚本完成。Abaqus  已经安装了一个 Python 解释器，以便"
" Abaqus/CAE 可以使用它与 Abaqus 内核进行交互。"

#: ../../../getting_started.md:66
msgid ""
"For some reasons, we cannot directly use the Python interpreter inside "
"Abaqus to build an Abaqus model. But fortunately, we can use the commands "
"provided by Abaqus to access it. i.e."
msgstr ""
"由于某些原因，我们不能直接使用 Abaqus 内部的 Python 解释器来构建 Abaqus 模型。"
"但幸运的是，我们可以使用 Abaqus 提供的命令来访问它。即："

#: ../../../getting_started.md:87
msgid ""
"Usually, we can use the noGUI-file or script-file to execute our Python "
"script in Abaqus."
msgstr ""
"通常，我们可以使用 noGUI-file 或 script-file 选项在 Abaqu 中执行我们的 Python "
"脚本。"

#: ../../../getting_started.md:89
msgid ""
"Another Python interpreter, is the Python interpreter installed by "
"ourselves, where `abqpy` is installed. `abqpy` provides a bridge to "
"connect our Python script to Abaqus Python interpreter, it provides type "
"hints for Python scripting for Abaqus, enabling us to write a Abaqus "
"Python script quickly."
msgstr ""
"另一个 Python 解释器是我们自己安装的 Python 解释器，其中安装了 `abqpy`。`abqpy` "
"提供了一个将我们的 Python 脚本连接到 Abaqus Python 解释器的桥梁，它为 Abaqus 的 "
"Python 脚本提供了类型提示，使我们能够快速编写 Abaqus Python 脚本。"

#: ../../../getting_started.md:94
msgid "How does this package work?"
msgstr "这个包是如何工作的？"

#: ../../../getting_started.md:96
msgid ""
"`abqpy` is just a package to provide type hints for Abaqus/Python "
"scripting, it is installed outside Abaqus/Python environment, you can use "
"`abqpy` to write your Abaqus/Python scripts, and run the scripts inside "
"Abaqus on your own. However, with the help of Abaqus command, an easier "
"way can be achieved: **you can actually run the script using your own "
"Python interpreter without opening Abaqus**, which is achieved via the "
"**abaqus** command like this:"
msgstr ""
"`abqpy` 只是一个为 Abaqus/Python 脚本提供类型提示的包，它安装在 Abaqus/Python "
"环境之外，你可以使用 `abqpy` 来编写你的 Abaqus/Python 脚本，并自己在 Abaqus "
"里面运行脚本。但是，在 Abaqus 命令的帮助下，可以实现一种更简单的方法：** "
"您实际上可以使用自己的 Python 解释器运行脚本而无需打开 Abaqus**，这是通过 "
"**abaqus** 命令实现的，如下所示："

#: ../../../getting_started.md:105
msgid "The secret is hided in the {py:func}`~abqpy.run.run` function:"
msgstr "秘密隐藏在 {py:func}`~abqpy.run.run` 函数中："

#: ../../../getting_started.md:121
msgid ""
"In this package, the {py:mod}`~abaqus` module is reimplemented to "
"automatically call this function. If you import this module in the top of "
"your script (i.e., `from abaqus import *`), your Python interpreter (not "
"Abaqus Python interpreter) will call this function and use the **abaqus** "
"command to submit the script to Abaqus. After it is submitted to Abaqus, "
"{py:func}`~abqpy.run.run` will exit the interpreter, because the script "
"will already run in Abaqus Python interpreter."
msgstr ""
"在这个包中，{py:mod}`~abaqus` 模块被重新实现以自动调用这个函数。 "
"如果您在脚本导入此模块（如 `from abaqus import *`），您的 Python 解释器（而非 "
"Abaqus Python 解释器）将调用此函数并使用 **abaqus** 命令将脚本提交给 Abaqus。 "
"提交给 Abaqus 后，{py:func}`~abqpy.run.run` 函数将退出解释器，因为脚本已经在 "
"Abaqus Python 解释器中运行。"

#: ../../../getting_started.md:126
msgid ""
"In the output script, we might not want to always use the "
"{py:mod}`~abaqus` module, because it needs the Abaqus/CAE kernel (and its "
"license). Instead, we use the module {py:mod}`~odbAccess` (i.e., `from "
"odbAccess import *`), which requires only the Abaqus Python interpreter. "
"Then, another similar **abaqus** command line is needed:"
msgstr ""
"在输出脚本中，我们可能不想总是使用 {py:mod}`~abaqus` 模块，因为它需要 Abaqus/CAE"
" 内核（和它的许可证）。 这时，我们使用模块 {py:mod}`~odbAccess` (例如，`from "
"odbAccess import *`）, 它只需要 Abaqus Python 解释器而不需要 Abaqus/CAE 内核。"
"这时，我们需要另一个类似的 **abaqus** 命令："

#: ../../../getting_started.md:134
msgid ""
"So, the {py:mod}`~odbAccess` module is also reimplemented to call the "
"{py:func}`~abqpy.run.run` function with the argument `cae = False`."
msgstr ""
"因此，{py:mod}`~odbAccess` 模块也被重新实现以调用带有参数 `cae = False` 的 "
"{py:func}`~abqpy.run.run` 函数。"

#: ../../../getting_started.md:136
msgid ""
"In summary, the {py:func}`~abqpy.run.run` function will be called when you"
" import one of the two modules ({py:mod}`~abaqus` or "
"{py:mod}`~odbAccess`). It will pass the argument `cae = True` in "
"{py:mod}`~abaqus` module and `cae = False` in {py:mod}`~odbAccess` module."
" Therefore, if you want to run your Python script in Abaqus Python "
"environment, please make sure to import one of these modules on the top of"
" your script."
msgstr ""
"总之，当您导入两个模块之一（{py:mod}`~abaqus` 或 {py:mod}`~odbAccess`）时，将调用 "
"{py:func}`~abqpy.run.run` 函数。 它将在 {py:mod}`~abaqus` 模块中传入参数 `cae "
"= True`，在 {py:mod}`~odbAccess` 模块中传入参数 `cae = False`。 因此，"
"如果您想在外部 Python 环境中运行您的 Python 脚本，"
"请确保在您的脚本导入这些模块之一。"

#: ../../../getting_started.md:141
msgid "Write your Abaqus/Python script"
msgstr "编写你的 Abaqus/Python 脚本"

#: ../../../getting_started.md:143
msgid ""
"After installing the `abqpy` package, you can start writing your own "
"Abaqus/Python script to build your model. You can refer [abqpy/examples at"
" main · "
"haiiliin/abqpy](https://github.com/haiiliin/abqpy/tree/main/examples) for "
"some script examples. Or you may go {doc}`/tutorials` for a simple "
"tutorial. For more documentation about Abaqus/Python scripting, please "
"check {doc}`/reference/index` for more detailed API references."
msgstr ""
"安装 `abqpy` 包后，您可以开始编写自己的 Abaqus/Python 脚本来构建模型。 您可以参考"
" [abqpy/examples at "
"main・hailiin/abqpy](https://github.com/hailiin/abqpy/tree/main/examples) "
"获取一些脚本示例。 或者你可以去 {doc}`/tutorials` 看一个简单的教程。 有关 "
"Abaqus/Python 脚本的更多文档，请查看 {doc}`/reference/index` 以获取更详细的 API"
" 参考。"

#: ../../../getting_started.md:149
msgid "Setup your Abaqus Environment"
msgstr "配置 Abaqus 环境"

#: ../../../getting_started.md:151
msgid ""
"Make sure the `abaqus` command is available in the command line (i.e., you"
" can run `abaqus` in the command line), otherwise, add a new system "
"variable named `ABAQUS_BAT_PATH`, and set the value to the file path of "
"the Abaqus command, for example, `C:/SIMULIA/Commands/abaqus.bat`."
msgstr ""
"请确保命令行中的 `abaqus` 命令是可用的（即您可以在命令行运行 `abaqus`），"
"否则你需要添加一个名为 `ABAQUS_BAT_PATH` 的系统环境变量， 并将其设置为 Abaqus "
"批处理文件的文件路径，例如 `C:/SIMULIA/Commands/abaqus.bat`。"

#: ../../../getting_started.md:155
msgid "Run your Abaqus/Python script"
msgstr "运行你的 Abaqus/Python 脚本"

#: ../../../getting_started.md:157
msgid ""
"Now you can run your Abaqus/Python script with the following methods:"
msgstr "现在您可以使用以下方法运行您的 Abaqus/Python 脚本："

#: ../../../getting_started.md:159
msgid ""
"Open Abaqus/CAE and click `Run Script` in the menu bar, then select your "
"script file, which is the most common way to run a Python script in "
"Abaqus/CAE."
msgstr ""
"打开 Abaqus/CAE 并点击菜单栏中的 `运行脚本`，然后选择您的脚本文件， 它是在 "
"Abaqus/CAE 中运行 Python 脚本的最常见方式。"

#: ../../../getting_started.md:161
msgid "Use the `abaqus` command in the command line:"
msgstr "在命令行中使用 `abaqus` 命令："

#: ../../../getting_started.md:165
msgid ""
"See [here](https://help.3ds.com/2019/English/DSSIMULIA_Established/SIMACAE"
"EXCRefMap/simaexc-c-caeproc.htm?contextscope=all) for more information "
"about the `abaqus` command."
msgstr ""
"更多关于 `abaqus` 命令的信息，请访问 [这里](https://help.3ds.com/2019/English/DS"
"SIMULIA_Established/SIMACEEXCRefMap/simagec-c-c-"
"caeproc.htm?contextscope=all)。"

#: ../../../getting_started.md:167
msgid "Use the `abqpy` command in the command line:"
msgstr "在命令行中使用 `abaqus` 命令："

#: ../../../getting_started.md:171
msgid ""
"The advantage using `abqpy` command instead of using `abaqus` command "
"directly is that you are able to customize the default python launch "
"command. See {doc}`cli` for more information about the `abqpy` command."
msgstr ""
"使用 `abqpy` 命令而不是直接使用 `abaqus` 命令的好处是，您可以自定义默认的 Python "
"启动命令。有关 `abqpy` 命令的更多信息，请参见 {doc}`cli`。"

#: ../../../getting_started.md:173
msgid "Use the Python 3 interpreter to run the script directly:"
msgstr "使用 Python 3 解释器直接运行脚本："

#: ../../../getting_started.md:177
msgid ""
"This is the most convenient way to run the script, it is equivalent to the"
" `abqpy` command with some default predefined arguments."
msgstr ""
"这是运行脚本的最方便的方式，它等效于 `abqpy` 命令，并带有一些默认的预定义参数。"

#: ../../../getting_started.md:179
msgid ""
"Use the {py:obj}`abqpy.cli.abaqus` object (an {py:obj}`abqpy.cli.AbqpyCLI`"
" object) to run the script:"
msgstr ""
"使用 {py:obj}`abqpy.cli.abaqus` 变量 ({py:obj}`abqpy.cli.AbqpyCLI` 对象) "
"运行脚本："

#: ../../../getting_started.md:184
msgid ""
"The {py:obj}`abqpy.cli.abaqus` object is the object used for the `abqpy` "
"command, you can call the methods in this object directly to run the "
"script. This method is convenient when you want to call the Abaqus/Python "
"script in another Python script since typing annotations are provided for "
"the methods, so you can check the docstring of the methods for more "
"information."
msgstr ""
"`abqpy` 命令使用 {py:obj}`abqpy.cli.abaqus` 变量调用命令行，"
"你可以直接调用此变量中的方法来运行脚本。 当您想要在另一个 Python 脚本中调用 "
"Abaqus/Python 脚本时，这个方法是十分方便的，"
"因为代码编辑器会为这些方法提供类型提示。 "
"您可以检查变量方法的文档字符串以获取更多信息。"

#: ../../../getting_started.md:189
msgid "Warning"
msgstr "警告"

#: ../../../getting_started.md:190
msgid ""
"`abqpy` does not support debugging since Abaqus does not provide a "
"debugger for Python scripting outside Abaqus/CAE. If you run the script "
"under the debug mode, the script will not be submitted to Abaqus, but it "
"will run in the Python interpreter where `abqpy` is installed. Since "
"`abqpy` does not implement the whole Abaqus/Python APIs, the script may "
"not (and most likely) run correctly. However, for some simple scripts, it "
"may work, in this way you can use the debugger to check the variables in "
"the Abaqus API roughly. But still, the script will not be submitted to "
"Abaqus."
msgstr ""
"`abqpy` 不支持调试，因为 Abaqus 没有为 Abaqus/CAE 之外的 Python "
"脚本提供一个调试器。 如果您在调试模式下运行脚本，脚本将不会提交给 Abaqus。 "
"但它将在安装了 `abqpy` 的外部 Python 解释器中运行 。 由于 `abqpy` 没有实现全部的 "
"Abaqus/Python 接口，脚本可能无法（而且很可能）正常运行。 然而，对于一些简单的脚本，"
"脚本可能可以正常工作，你可以使用调试器来粗略检查 Abaqus 中的变量。 "
"但脚本仍然不会提交给 Abaqus。"

#: ../../../getting_started.md:198
#: ../../../getting_started.md:200
msgid "Create an Abaqus Model"
msgstr "创建一个 Abaqus 模型"

#: ../../../getting_started.md:206
#: ../../../getting_started.md:208
msgid "Extract Output Data"
msgstr "提取输出数据"

#: ../../../getting_started.md:214
msgid "Comments"
msgstr "评论"

