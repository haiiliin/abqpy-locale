# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, WANG Hailin
# This file is distributed under the same license as the abqpy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abqpy \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-05-13 03:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../../reference/mdb/edit_mesh.md:1
msgid "Edit Mesh"
msgstr ""

#: ../../../reference/mdb/edit_mesh.md:3
msgid ""
"Edit mesh commands are used to edit an orphan mesh part or part instance "
"or an Abaqus native mesh."
msgstr ""

#: ../../../reference/mdb/edit_mesh.md:5
msgid "Classes"
msgstr ""

#: ../../../reference/mdb/edit_mesh.md:7
msgid "Edit mesh features of Assembly"
msgstr ""

#: ../../../reference/mdb/edit_mesh.md:18
msgid "Edit mesh features of Part"
msgstr ""

#: ../../../reference/mdb/edit_mesh.md:29
msgid "Other Classes"
msgstr ""

#~ msgid "Bases: :py:class:`~abaqus.Assembly.AssemblyBase.AssemblyBase`"
#~ msgstr ""

#~ msgid ""
#~ "An Assembly object is a container "
#~ "for instances of parts. The Assembly "
#~ "object has no constructor command. "
#~ "Abaqus creates the **rootAssembly** member "
#~ "when a Model object is created."
#~ msgstr ""

#~ msgid "This object can be accessed by::"
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditAssembly on help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-assemblypyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "Public Data Attributes:"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`isOutOfDate "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.isOutOfDate>`\\"
#~ msgstr ""

#~ msgid ""
#~ "An Int specifying that feature "
#~ "parameters have been modified but that"
#~ " the assembly has not been "
#~ "regenerated."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`timeStamp "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.timeStamp>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying which gives an "
#~ "indication when the assembly was last"
#~ " modified."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`isLocked "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.isLocked>`\\"
#~ msgstr ""

#~ msgid "An Int specifying whether the assembly is locked or not."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`regenerateConstraintsTogether "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.regenerateConstraintsTogether>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether the "
#~ "positioning constraints in the assembly "
#~ "should be regenerated together before "
#~ "regenerating other assembly features."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`vertices "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.vertices>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A VertexArray object specifying all the"
#~ " vertices existing at the assembly "
#~ "level."
#~ msgstr ""

#~ msgid ":py:obj:`edges <abaqus.Assembly.AssemblyBase.AssemblyBase.edges>`\\"
#~ msgstr ""

#~ msgid ""
#~ "An EdgeArray object specifying all the"
#~ " edges existing at the assembly "
#~ "level."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`elements "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.elements>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A MeshElementArray object specifying all "
#~ "the elements existing at the assembly"
#~ " level."
#~ msgstr ""

#~ msgid ":py:obj:`nodes <abaqus.Assembly.AssemblyBase.AssemblyBase.nodes>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A MeshNodeArray object specifying all "
#~ "the nodes existing at the assembly "
#~ "level."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`instances "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.instances>`\\"
#~ msgstr ""

#~ msgid "A repository of PartInstance objects."
#~ msgstr ""

#~ msgid ":py:obj:`datums <abaqus.Assembly.AssemblyBase.AssemblyBase.datums>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Datum objects specifying"
#~ " all Datum objects in the assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`features "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.features>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Feature objects "
#~ "specifying all Feature objects in the"
#~ " assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`featuresById "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.featuresById>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Feature objects "
#~ "specifying all Feature objects in the"
#~ " assembly.The Feature objects in the "
#~ "featuresById repository are the same as"
#~ " the Feature objects in the features"
#~ " repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`surfaces "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.surfaces>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Surface objects "
#~ "specifying for more information, see "
#~ "[Region "
#~ "commands](https://help.3ds.com/2022/english/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-m"
#~ "-RegPyc-sb.htm?ContextScope=all)."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`allSurfaces "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.allSurfaces>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`allInternalSurfaces "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.allInternalSurfaces>`\\"
#~ msgstr ""

#~ msgid "A repository of Surface objects specifying picked regions."
#~ msgstr ""

#~ msgid ":py:obj:`sets <abaqus.Assembly.AssemblyBase.AssemblyBase.sets>`\\"
#~ msgstr ""

#~ msgid "A repository of Set objects."
#~ msgstr ""

#~ msgid ":py:obj:`allSets <abaqus.Assembly.AssemblyBase.AssemblyBase.allSets>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Set objects specifying"
#~ " for more information, see [Region "
#~ "commands](https://help.3ds.com/2022/english/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-m"
#~ "-RegPyc-sb.htm?ContextScope=all)."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`allInternalSets "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.allInternalSets>`\\"
#~ msgstr ""

#~ msgid "A repository of Set objects specifying picked regions."
#~ msgstr ""

#~ msgid ":py:obj:`skins <abaqus.Assembly.AssemblyBase.AssemblyBase.skins>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Skin objects specifying"
#~ " the skins created on the assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`stringers "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.stringers>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Stringer objects "
#~ "specifying the stringers created on the"
#~ " assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`referencePoints "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.referencePoints>`\\"
#~ msgstr ""

#~ msgid "A repository of ReferencePoint objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`modelInstances "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.modelInstances>`\\"
#~ msgstr ""

#~ msgid "A repository of ModelInstance objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`allInstances "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.allInstances>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A PartInstance object specifying the "
#~ "PartInstances and A ModelInstance object "
#~ "specifying the ModelInstances."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`engineeringFeatures "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.engineeringFeatures>`\\"
#~ msgstr ""

#~ msgid "An EngineeringFeature object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`modelName "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.modelName>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the name of "
#~ "the model to which the assembly "
#~ "belongs."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`connectorOrientations "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.connectorOrientations>`\\"
#~ msgstr ""

#~ msgid "A ConnectorOrientationArray object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`sectionAssignments "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.sectionAssignments>`\\"
#~ msgstr ""

#~ msgid "A SectionAssignmentArray object."
#~ msgstr ""

#~ msgid ":py:obj:`name <abaqus.Assembly.AssemblyBase.AssemblyBase.name>`\\"
#~ msgstr ""

#~ msgid "A String specifying the repository key."
#~ msgstr ""

#~ msgid ":py:obj:`id <abaqus.Assembly.AssemblyBase.AssemblyBase.id>`\\"
#~ msgstr ""

#~ msgid "An Int specifying the ID of the feature."
#~ msgstr ""

#~ msgid ":py:obj:`name <abaqus.Feature.Feature.Feature.name>`\\"
#~ msgstr ""

#~ msgid ":py:obj:`id <abaqus.Feature.Feature.Feature.id>`\\"
#~ msgstr ""

#~ msgid "Public Methods:"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`collapseMeshEdge "
#~ "<abaqus.EditMesh.MeshEditAssembly.MeshEditAssembly.collapseMeshEdge>`\\"
#~ " \\(edge\\, collapseMethod\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method collapses an edge of a"
#~ " quadrilateral or triangular element of "
#~ "a part instance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`combineElement "
#~ "<abaqus.EditMesh.MeshEditAssembly.MeshEditAssembly.combineElement>`\\"
#~ " \\(elements\\)"
#~ msgstr ""

#~ msgid "This method combines two triangular elements of a part instance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`deleteElement "
#~ "<abaqus.EditMesh.MeshEditAssembly.MeshEditAssembly.deleteElement>`\\"
#~ " \\(elements\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method deletes the given elements from a part instance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`projectNode "
#~ "<abaqus.EditMesh.MeshEditAssembly.MeshEditAssembly.projectNode>`\\ "
#~ "\\(nodes\\, projectionReference\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method projects the given nodes "
#~ "of a part instance onto a mesh "
#~ "entity, geometric entity, or a datum "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`editNode "
#~ "<abaqus.EditMesh.MeshEditAssembly.MeshEditAssembly.editNode>`\\ "
#~ "\\(nodes\\[\\, coordinate1\\, coordinate2\\, "
#~ "...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method changes the coordinates of"
#~ " the given nodes on a part "
#~ "instance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`mergeNodes "
#~ "<abaqus.EditMesh.MeshEditAssembly.MeshEditAssembly.mergeNodes>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`splitElement "
#~ "<abaqus.EditMesh.MeshEditAssembly.MeshEditAssembly.splitElement>`\\"
#~ " \\(elements\\)"
#~ msgstr ""

#~ msgid "This method splits quadrilateral elements into triangular elements."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`splitMeshEdge "
#~ "<abaqus.EditMesh.MeshEditAssembly.MeshEditAssembly.splitMeshEdge>`\\"
#~ " \\(edge\\[\\, parameter\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method splits an edge of a"
#~ " quadrilateral or triangular element of "
#~ "a part instance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`swapMeshEdge "
#~ "<abaqus.EditMesh.MeshEditAssembly.MeshEditAssembly.swapMeshEdge>`\\"
#~ " \\(edge\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method swaps the diagonal of "
#~ "two adjacent triangular elements of a"
#~ " part instance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`generateMeshByOffset "
#~ "<abaqus.EditMesh.MeshEditAssembly.MeshEditAssembly.generateMeshByOffset>`\\"
#~ " \\(region\\, meshType\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method generates a solid or "
#~ "shell mesh from an orphan mesh "
#~ "surface by generating layers of elements"
#~ " that propagate out normal to the "
#~ "surface boundary."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`redoMeshEdit "
#~ "<abaqus.EditMesh.MeshEditAssembly.MeshEditAssembly.redoMeshEdit>`\\"
#~ " \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method executes the edit mesh "
#~ "or the bottom-up meshing operation "
#~ "most recently undone by the undoMeshEdit"
#~ " method on an assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`undoMeshEdit "
#~ "<abaqus.EditMesh.MeshEditAssembly.MeshEditAssembly.undoMeshEdit>`\\"
#~ " \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method undoes the most recent "
#~ "edit mesh or the bottom-up meshing"
#~ " operation on an assembly and "
#~ "restores the mesh on the affected "
#~ "part instance to its previous state."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Instance "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.Instance>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a PartInstance "
#~ "object and puts it into the "
#~ "instances repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`backup "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.backup>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method makes a backup copy of the features in the assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`clearGeometryCache "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.clearGeometryCache>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid "This method deletes the geometry cache."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`deleteAllFeatures "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.deleteAllFeatures>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid "This method deletes all the features in the assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`deleteFeatures "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.deleteFeatures>`\\ "
#~ "\\(featureNames\\)"
#~ msgstr ""

#~ msgid "This method deletes specified features from the assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`excludeFromSimulation "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.excludeFromSimulation>`\\"
#~ " \\(instances\\, exclude\\)"
#~ msgstr ""

#~ msgid "This method excludes the specified part instances from the analysis."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`featurelistInfo "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.featurelistInfo>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method prints the name and "
#~ "status of all the features in the"
#~ " feature lists."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getMassProperties "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.getMassProperties>`\\ "
#~ "\\(\\[regions\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns the mass properties"
#~ " of the assembly, or instances or "
#~ "regions."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getAngle "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.getAngle>`\\ "
#~ "\\(plane1\\, plane2\\, line1\\, line2\\[\\, "
#~ "...\\]\\)"
#~ msgstr ""

#~ msgid "This method returns the angle between the specified entities."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getCoordinates "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.getCoordinates>`\\ "
#~ "\\(entity\\)"
#~ msgstr ""

#~ msgid "This method returns the coordinates of a specified point."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getDistance "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.getDistance>`\\ "
#~ "\\(entity1\\, entity2\\[\\, printResults\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Depending on the arguments provided, "
#~ "this method returns one of the "
#~ "following:"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getFacesAndVerticesOfAttachmentLines "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.getFacesAndVerticesOfAttachmentLines>`\\"
#~ " \\(edges\\)"
#~ msgstr ""

#~ msgid ""
#~ "Given an array of edge objects, "
#~ "this method returns a tuple of "
#~ "dictionary objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getSurfaceSections "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.getSurfaceSections>`\\ "
#~ "\\(surface\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a list of the"
#~ " sections assigned to the regions "
#~ "encompassed by the specified surface."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`importEafFile "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.importEafFile>`\\ "
#~ "\\(filename\\[\\, ids\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method imports an assembly from "
#~ "an EAF file into the root "
#~ "assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`importParasolidFile "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.importParasolidFile>`\\ "
#~ "\\(filename\\[\\, ids\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method imports an assembly from "
#~ "the Parasolid file into the root "
#~ "assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`importCatiaV5File "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.importCatiaV5File>`\\ "
#~ "\\(filename\\[\\, ids\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method imports an assembly from "
#~ "a CATIA V5 Elysium Neutral file "
#~ "into the root assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`importEnfFile "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.importEnfFile>`\\ "
#~ "\\(filename\\[\\, ids\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method imports an assembly from "
#~ "an Elysium Neutral file created by "
#~ "Pro/ENGINEER, I-DEAS, or CATIA V5 into"
#~ " the root assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`importIdeasFile "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.importIdeasFile>`\\ "
#~ "\\(filename\\[\\, ids\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method imports an assembly from "
#~ "an I-DEAS Elysium Neutral file into "
#~ "the root assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`importProEFile "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.importProEFile>`\\ "
#~ "\\(filename\\[\\, ids\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method imports an assembly from "
#~ "a Pro/ENGINEER Elysium Neutral file into"
#~ " the root assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`makeDependent "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.makeDependent>`\\ "
#~ "\\(instances\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method converts the specified part"
#~ " instances from independent to dependent"
#~ " part instances."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`makeIndependent "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.makeIndependent>`\\ "
#~ "\\(instances\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method converts the specified part"
#~ " instances from dependent to independent"
#~ " part instances."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`printAssignedSections "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.printAssignedSections>`\\"
#~ " \\(\\)"
#~ msgstr ""

#~ msgid "This method prints a summary of assigned connector sections."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`printConnectorOrientations "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.printConnectorOrientations>`\\"
#~ " \\(\\)"
#~ msgstr ""

#~ msgid "This method prints a summary of connector orientations."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`projectReferencesOntoSketch "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.projectReferencesOntoSketch>`\\"
#~ " \\(sketch\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method projects the specified "
#~ "edges, vertices, and datum points from"
#~ " the assembly onto the specified "
#~ "ConstrainedSketch object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`queryCachedStates "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.queryCachedStates>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method displays the position of "
#~ "geometric states relative to the "
#~ "sequence of features in the assembly "
#~ "cache."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`regenerate "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.regenerate>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method regenerates the assembly and"
#~ " brings it up to date with the"
#~ " latest values of the assembly "
#~ "parameters."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`regenerationWarnings "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.regenerationWarnings>`\\"
#~ " \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method prints any regeneration "
#~ "warnings associated with the features."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`restore "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.restore>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method restores the parameters of"
#~ " all features in the assembly to "
#~ "the value they had before a failed"
#~ " regeneration."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`resumeAllFeatures "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.resumeAllFeatures>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method resumes all the suppressed"
#~ " features in the part or assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`resumeFeatures "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.resumeFeatures>`\\ "
#~ "\\(featureNames\\)"
#~ msgstr ""

#~ msgid "This method resumes the specified suppressed features in the assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`resumeLastSetFeatures "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.resumeLastSetFeatures>`\\"
#~ " \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method resumes the last set "
#~ "of features to be suppressed in "
#~ "the assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`rotate "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.rotate>`\\ "
#~ "\\(instanceList\\, axisPoint\\, ...\\)"
#~ msgstr ""

#~ msgid "This method rotates given instances by the specified amount."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`translate "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.translate>`\\ "
#~ "\\(instanceList\\, vector\\)"
#~ msgstr ""

#~ msgid "This method translates given instances by the specified amount."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`saveGeometryCache "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.saveGeometryCache>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method caches the current geometry,"
#~ " which improves regeneration performance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`setValues "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.setValues>`\\ "
#~ "\\(regenerateConstraintsTogether\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method modifies the behavior "
#~ "associated with the specified assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`suppressFeatures "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.suppressFeatures>`\\ "
#~ "\\(featureNames\\)"
#~ msgstr ""

#~ msgid "This method suppresses specified features."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`unlinkInstances "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.unlinkInstances>`\\ "
#~ "\\(instances\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method converts the specified "
#~ "PartInstance objects from linked child "
#~ "instances to regular instances."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`writeAcisFile "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.writeAcisFile>`\\ "
#~ "\\(fileName\\[\\, version\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method exports the assembly to "
#~ "a named file in ACIS part (SAT)"
#~ " or assembly (ASAT) format."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`writeCADParameters "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.writeCADParameters>`\\ "
#~ "\\(paramFile\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method writes the parameters that"
#~ " were imported from the CAD system"
#~ " to a parameter file."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`lock "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.lock>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method locks the assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`unlock "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.unlock>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method unlocks the assembly."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`setMeshNumberingControl "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.setMeshNumberingControl>`\\"
#~ " \\(instances\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method changes the start node "
#~ "and/or element labels on the specified"
#~ " independent part instances before or "
#~ "after Abaqus/CAE generates the meshes."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`copyMeshPattern "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.copyMeshPattern>`\\ "
#~ "\\(\\[elements\\, faces\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method copies a mesh pattern "
#~ "from a source region consisting of "
#~ "a set of shell elements or element"
#~ " faces onto a target face, mapping"
#~ " nodes and elements in a one-"
#~ "one correspondence between source and "
#~ "target."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`smoothNodes "
#~ "<abaqus.Assembly.AssemblyBase.AssemblyBase.smoothNodes>`\\ "
#~ "\\(\\[nodes\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method smooths the given nodes "
#~ "of a native mesh, moving them "
#~ "locally to a more optimal location "
#~ "that improves the quality of the "
#~ "mesh."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AttachmentLines "
#~ "<abaqus.Assembly.AssemblyFeature.AssemblyFeature.AttachmentLines>`\\"
#~ " \\(name\\, points\\, sourceFaces\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "by creating attachment lines between the"
#~ " given set of source and target "
#~ "faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Coaxial "
#~ "<abaqus.Assembly.AssemblyFeature.AssemblyFeature.Coaxial>`\\ "
#~ "\\(movableAxis\\, fixedAxis\\, flip\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method moves an instance so "
#~ "that its selected face is coaxial "
#~ "with the selected face of a fixed"
#~ " instance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`CoincidentPoint "
#~ "<abaqus.Assembly.AssemblyFeature.AssemblyFeature.CoincidentPoint>`\\"
#~ " \\(movablePoint\\, fixedPoint\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method moves an instance so "
#~ "that a specified point is coincident "
#~ "with a specified point of a fixed"
#~ " instance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`EdgeToEdge "
#~ "<abaqus.Assembly.AssemblyFeature.AssemblyFeature.EdgeToEdge>`\\ "
#~ "\\(movableAxis\\, fixedAxis\\, flip\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method moves an instance so "
#~ "that its edge is parallel to an"
#~ " edge of a fixed instance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`FaceToFace "
#~ "<abaqus.Assembly.AssemblyFeature.AssemblyFeature.FaceToFace>`\\ "
#~ "\\(movablePlane\\, fixedPlane\\, flip\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method moves an instance so "
#~ "that its face is coincident with a"
#~ " face of a fixed instance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ParallelCsys "
#~ "<abaqus.Assembly.AssemblyFeature.AssemblyFeature.ParallelCsys>`\\ "
#~ "\\(movableCsys\\, fixedCsys\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method moves an instance so "
#~ "that its Datum coordinate system is "
#~ "parallel to a Datum coordinate system"
#~ " of a fixed instance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ParallelEdge "
#~ "<abaqus.Assembly.AssemblyFeature.AssemblyFeature.ParallelEdge>`\\ "
#~ "\\(movableAxis\\, fixedAxis\\, flip\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ParallelFace "
#~ "<abaqus.Assembly.AssemblyFeature.AssemblyFeature.ParallelFace>`\\ "
#~ "\\(movablePlane\\, fixedPlane\\, flip\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method moves an instance so "
#~ "that its face is parallel to a "
#~ "face of a fixed instance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AttachmentPoints "
#~ "<abaqus.Feature.Feature.Feature.AttachmentPoints>`\\ \\(name\\,"
#~ " points\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method creates an attachment points Feature."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AttachmentPointsAlongDirection "
#~ "<abaqus.Feature.Feature.Feature.AttachmentPointsAlongDirection>`\\ "
#~ "\\(name\\, ...\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "by creating attachment points along a"
#~ " direction or between two points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AttachmentPointsOffsetFromEdges "
#~ "<abaqus.Feature.Feature.Feature.AttachmentPointsOffsetFromEdges>`\\"
#~ " \\(name\\, edges\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "by creating attachment points along or"
#~ " offset from one or more connected"
#~ " edges."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumAxisByCylFace "
#~ "<abaqus.Feature.Feature.Feature.DatumAxisByCylFace>`\\ "
#~ "\\(face\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumAxis object along the "
#~ "axis of a cylinder or cone."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumAxisByNormalToPlane "
#~ "<abaqus.Feature.Feature.Feature.DatumAxisByNormalToPlane>`\\ "
#~ "\\(plane\\, point\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumAxis object normal to "
#~ "the specified plane and passing through"
#~ " the specified point."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumAxisByParToEdge "
#~ "<abaqus.Feature.Feature.Feature.DatumAxisByParToEdge>`\\ "
#~ "\\(edge\\, point\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumAxis object parallel to "
#~ "the specified edge and passing through"
#~ " the specified point."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumAxisByPrincipalAxis "
#~ "<abaqus.Feature.Feature.Feature.DatumAxisByPrincipalAxis>`\\ "
#~ "\\(principalAxis\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumAxis object along one "
#~ "of the three principal axes."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumAxisByRotation "
#~ "<abaqus.Feature.Feature.Feature.DatumAxisByRotation>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumAxisByThreePoint "
#~ "<abaqus.Feature.Feature.Feature.DatumAxisByThreePoint>`\\ "
#~ "\\(point1\\, point2\\, point3\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumAxis object normal to "
#~ "the circle described by three points "
#~ "and through its center."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumAxisByThruEdge "
#~ "<abaqus.Feature.Feature.Feature.DatumAxisByThruEdge>`\\ "
#~ "\\(edge\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumAxis object along the "
#~ "specified edge."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumAxisByTwoPlane "
#~ "<abaqus.Feature.Feature.Feature.DatumAxisByTwoPlane>`\\ "
#~ "\\(plane1\\, plane2\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumAxis object at the "
#~ "intersection of two planes."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumAxisByTwoPoint "
#~ "<abaqus.Feature.Feature.Feature.DatumAxisByTwoPoint>`\\ "
#~ "\\(point1\\, point2\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumAxis object along the "
#~ "line joining two points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumCsysByDefault "
#~ "<abaqus.Feature.Feature.Feature.DatumCsysByDefault>`\\ "
#~ "\\(coordSysType\\[\\, name\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumCsys object from the "
#~ "specified default coordinate system at "
#~ "the origin."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumCsysByOffset "
#~ "<abaqus.Feature.Feature.Feature.DatumCsysByOffset>`\\ "
#~ "\\(coordSysType\\, ...\\[\\, name\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumCsys object by offsetting "
#~ "the origin of an existing datum "
#~ "coordinate system to a specified point."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumCsysByThreePoints "
#~ "<abaqus.Feature.Feature.Feature.DatumCsysByThreePoints>`\\ "
#~ "\\(coordSysType\\, origin\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumCsys object from three "
#~ "points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumCsysByTwoLines "
#~ "<abaqus.Feature.Feature.Feature.DatumCsysByTwoLines>`\\ "
#~ "\\(coordSysType\\, line1\\, line2\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumCsys object from two "
#~ "orthogonal lines."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPlaneByPrincipalPlane "
#~ "<abaqus.Feature.Feature.Feature.DatumPlaneByPrincipalPlane>`\\ "
#~ "\\(principalPlane\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPlane object through the "
#~ "origin along one of the three "
#~ "principal planes."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPlaneByOffset "
#~ "<abaqus.Feature.Feature.Feature.DatumPlaneByOffset>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPlaneByRotation "
#~ "<abaqus.Feature.Feature.Feature.DatumPlaneByRotation>`\\ "
#~ "\\(plane\\, axis\\, angle\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPlane object by rotating "
#~ "a plane about the specified axis "
#~ "through the specified angle."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPlaneByThreePoints "
#~ "<abaqus.Feature.Feature.Feature.DatumPlaneByThreePoints>`\\ "
#~ "\\(point1\\, point2\\, point3\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPlane object defined by "
#~ "passing through three points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPlaneByLinePoint "
#~ "<abaqus.Feature.Feature.Feature.DatumPlaneByLinePoint>`\\ "
#~ "\\(line\\, point\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPlane object that pass "
#~ "through the specified line and through"
#~ " the specified point that does not"
#~ " lie on the line."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPlaneByPointNormal "
#~ "<abaqus.Feature.Feature.Feature.DatumPlaneByPointNormal>`\\ "
#~ "\\(point\\, normal\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPlane object normal to "
#~ "the specified line and running through"
#~ " the specified point."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPlaneByTwoPoint "
#~ "<abaqus.Feature.Feature.Feature.DatumPlaneByTwoPoint>`\\ "
#~ "\\(point1\\, point2\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPlane object midway between"
#~ " two points and normal to the "
#~ "line connecting the points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPointByCoordinate "
#~ "<abaqus.Feature.Feature.Feature.DatumPointByCoordinate>`\\ "
#~ "\\(coords\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPoint object at the "
#~ "point defined by the specified "
#~ "coordinates."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPointByOffset "
#~ "<abaqus.Feature.Feature.Feature.DatumPointByOffset>`\\ "
#~ "\\(point\\, vector\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPoint object offset from "
#~ "an existing point by a vector."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPointByMidPoint "
#~ "<abaqus.Feature.Feature.Feature.DatumPointByMidPoint>`\\ "
#~ "\\(point1\\, point2\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPoint object midway between"
#~ " two points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPointByOnFace "
#~ "<abaqus.Feature.Feature.Feature.DatumPointByOnFace>`\\ "
#~ "\\(face\\, edge1\\, offset1\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPoint object on the "
#~ "specified face, offset from two edges."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPointByEdgeParam "
#~ "<abaqus.Feature.Feature.Feature.DatumPointByEdgeParam>`\\ "
#~ "\\(edge\\, parameter\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPoint object along an "
#~ "edge at a selected distance from "
#~ "one end of the edge."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPointByProjOnEdge "
#~ "<abaqus.Feature.Feature.Feature.DatumPointByProjOnEdge>`\\ "
#~ "\\(point\\, edge\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPoint object along an "
#~ "edge by projecting an existing point "
#~ "along the normal to the edge."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPointByProjOnFace "
#~ "<abaqus.Feature.Feature.Feature.DatumPointByProjOnFace>`\\ "
#~ "\\(point\\, face\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPoint object on a "
#~ "specified face by projecting an existing"
#~ " point onto the face."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`MakeSketchTransform "
#~ "<abaqus.Feature.Feature.Feature.MakeSketchTransform>`\\ "
#~ "\\(sketchPlane\\[\\, origin\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method creates a Transform object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionCellByDatumPlane "
#~ "<abaqus.Feature.Feature.Feature.PartitionCellByDatumPlane>`\\ "
#~ "\\(cells\\, datumPlane\\)"
#~ msgstr ""

#~ msgid "This method partitions one or more cells using the given datum plane."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionCellByExtendFace "
#~ "<abaqus.Feature.Feature.Feature.PartitionCellByExtendFace>`\\ "
#~ "\\(cells\\, extendFace\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "cells by extending the underlying "
#~ "geometry of a given face to "
#~ "partition the target cells."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionCellByExtrudeEdge "
#~ "<abaqus.Feature.Feature.Feature.PartitionCellByExtrudeEdge>`\\ "
#~ "\\(cells\\, edges\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "cells by extruding selected edges in "
#~ "the given direction."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionCellByPatchNCorners "
#~ "<abaqus.Feature.Feature.Feature.PartitionCellByPatchNCorners>`\\ "
#~ "\\(cell\\, cornerPoints\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions a cell using "
#~ "an N-sided cutting patch defined by "
#~ "the given corner points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionCellByPatchNEdges "
#~ "<abaqus.Feature.Feature.Feature.PartitionCellByPatchNEdges>`\\ "
#~ "\\(cell\\, edges\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions a cell using "
#~ "an N-sided cutting patch defined by "
#~ "the given edges."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionCellByPlaneNormalToEdge "
#~ "<abaqus.Feature.Feature.Feature.PartitionCellByPlaneNormalToEdge>`\\"
#~ " \\(cells\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "cells using a plane normal to an"
#~ " edge at the given edge point."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionCellByPlanePointNormal "
#~ "<abaqus.Feature.Feature.Feature.PartitionCellByPlanePointNormal>`\\"
#~ " \\(cells\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "cells using a plane defined by a"
#~ " point and a normal direction."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionCellByPlaneThreePoints "
#~ "<abaqus.Feature.Feature.Feature.PartitionCellByPlaneThreePoints>`\\"
#~ " \\(cells\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "cells using a plane defined by "
#~ "three points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionCellBySweepEdge "
#~ "<abaqus.Feature.Feature.Feature.PartitionCellBySweepEdge>`\\ "
#~ "\\(cells\\, edges\\, sweepPath\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "cells by sweeping selected edges along"
#~ " the given sweep path."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionEdgeByDatumPlane "
#~ "<abaqus.Feature.Feature.Feature.PartitionEdgeByDatumPlane>`\\ "
#~ "\\(edges\\, datumPlane\\)"
#~ msgstr ""

#~ msgid "This method partitions an edge where it intersects with a datum plane."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionEdgeByParam "
#~ "<abaqus.Feature.Feature.Feature.PartitionEdgeByParam>`\\ "
#~ "\\(edges\\, parameter\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "edges at the given normalized edge "
#~ "parameter."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionEdgeByPoint "
#~ "<abaqus.Feature.Feature.Feature.PartitionEdgeByPoint>`\\ "
#~ "\\(edge\\, point\\)"
#~ msgstr ""

#~ msgid "This method partitions an edge at the given point."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceByAuto "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceByAuto>`\\ "
#~ "\\(face\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method automatically partitions a "
#~ "target face into simple regions that "
#~ "can be meshed using a structured "
#~ "meshing technique."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceByCurvedPathEdgeParams "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceByCurvedPathEdgeParams>`\\"
#~ " \\(face\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions a face normal "
#~ "to two edges, using a curved path"
#~ " between the two given edge points"
#~ " defined by the normalized edge "
#~ "parameters."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceByCurvedPathEdgePoints "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceByCurvedPathEdgePoints>`\\"
#~ " \\(face\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions a face normal "
#~ "to two edges, using a curved path"
#~ " between the two given edge points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceByDatumPlane "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceByDatumPlane>`\\ "
#~ "\\(faces\\, datumPlane\\)"
#~ msgstr ""

#~ msgid "This method partitions one or more faces using the given datum plane."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceByExtendFace "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceByExtendFace>`\\ "
#~ "\\(faces\\, extendFace\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "faces by extending the underlying "
#~ "geometry of another given face to "
#~ "partition the target faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceByIntersectFace "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceByIntersectFace>`\\ "
#~ "\\(faces\\, cuttingFaces\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "faces using the given cutting faces "
#~ "to partition the target faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceByProjectingEdges "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceByProjectingEdges>`\\ "
#~ "\\(faces\\, edges\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "faces by projecting the given edges "
#~ "on the target faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceByShortestPath "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceByShortestPath>`\\ "
#~ "\\(faces\\, point1\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "faces using a minimum distance path "
#~ "between the two given points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceBySketch "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceBySketch>`\\ "
#~ "\\(faces\\, sketch\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method partitions one or more planar faces by sketching on them."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceBySketchDistance "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceBySketchDistance>`\\ "
#~ "\\(faces\\, ...\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "faces by sketching on a sketch "
#~ "plane and then projecting the sketch "
#~ "toward the target faces through the "
#~ "given distance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceBySketchRefPoint "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceBySketchRefPoint>`\\ "
#~ "\\(faces\\, ...\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "faces by sketching on a sketch "
#~ "plane and then projecting the sketch "
#~ "toward the target faces through a "
#~ "distance governed by the reference "
#~ "point."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceBySketchThruAll "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceBySketchThruAll>`\\ "
#~ "\\(faces\\, ...\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "faces by sketching on a sketch "
#~ "plane and then projecting toward the "
#~ "target faces through an infinite "
#~ "distance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ReferencePoint "
#~ "<abaqus.Feature.Feature.Feature.ReferencePoint>`\\ "
#~ "\\(point\\[\\, instanceName\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a ReferencePoint object at the "
#~ "specified location."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RemoveWireEdges "
#~ "<abaqus.Feature.Feature.Feature.RemoveWireEdges>`\\ "
#~ "\\(wireEdgeList\\)"
#~ msgstr ""

#~ msgid "This method removes wire edges."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`WirePolyLine "
#~ "<abaqus.Feature.Feature.Feature.WirePolyLine>`\\ \\(points\\[\\,"
#~ " mergeType\\, meshable\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by creating a series "
#~ "of wires joining points in pairs."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`isSuppressed "
#~ "<abaqus.Feature.Feature.Feature.isSuppressed>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method queries the suppressed state of the feature."
#~ msgstr ""

#~ msgid ":py:obj:`restore <abaqus.Feature.Feature.Feature.restore>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method restores the parameters of"
#~ " a feature to the value they "
#~ "had when the backup method was "
#~ "invoked on the part or assembly."
#~ msgstr ""

#~ msgid ":py:obj:`resume <abaqus.Feature.Feature.Feature.resume>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method resumes suppressed features."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`setValues <abaqus.Feature.Feature.Feature.setValues>`\\"
#~ " \\(\\[parameter\\, parameter1\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method modifies the Feature object."
#~ msgstr ""

#~ msgid ":py:obj:`suppress <abaqus.Feature.Feature.Feature.suppress>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method suppresses features."
#~ msgstr ""

#~ msgid "Member Details:"
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditAssembly.collapseMeshEdge on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-assemblypyc.htm?contextscope=all"
#~ "#simaker-assemblycollapsemeshedgepyc>`__."
#~ msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

#~ msgid "A single MeshEdge object specifying the element edge to collapse."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the method "
#~ "used to collapse the edge. Possible "
#~ "values are FORWARD, REVERSE, and "
#~ "AVERAGE."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditAssembly.combineElement on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-assemblypyc.htm?contextscope=all"
#~ "#simaker-assemblycombineelementpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of triangular MeshElement "
#~ "objects specifying the elements to "
#~ "combine."
#~ msgstr ""

#~ msgid ""
#~ "This method deletes the given elements"
#~ " from a part instance. The elements"
#~ " must have been generated using the"
#~ " bottom-up meshing technique."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditAssembly.deleteElement on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-assemblypyc.htm?contextscope=all"
#~ "#simaker-assemblydeleteelementpyc>`__."
#~ msgstr ""

#~ msgid "A sequence of MeshElement objects or a Set object containing elements."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether to delete"
#~ " all those associated nodes that "
#~ "become unreferenced after the given "
#~ "elements are deleted. The default value"
#~ " is OFF."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditAssembly.editNode on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-assemblypyc.htm?contextscope=all"
#~ "#simaker-assemblyeditnodepyc>`__."
#~ msgstr ""

#~ msgid "A sequence of MeshNode objects or a Set object containing nodes."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the value of "
#~ "the first coordinate. If **coordinate1** "
#~ "and **offset1** are unspecified, the "
#~ "existing value does not change."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the value of "
#~ "the second coordinate. If **coordinate2** "
#~ "and **offset2** are unspecified, the "
#~ "existing value does not change."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the value of "
#~ "the third coordinate. If **coordinate3** "
#~ "and **offset3** are unspecified, the "
#~ "existing value does not change."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of three-dimensional "
#~ "coordinate tuples specifying the coordinates"
#~ " for each of the given nodes. "
#~ "When specified, the number of coordinate"
#~ " tuples must match the number of "
#~ "given nodes, and be ordered to "
#~ "correspond to the given nodes in "
#~ "**ascending order** according to index. "
#~ "Furthermore, **coordinate1**, **coordinate2**, "
#~ "**coordinate3**, **offset1**, **offset2**, or "
#~ "**offset3** may not be specified."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying an offset to "
#~ "apply to the value of the first"
#~ " coordinate of the specified nodes."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying an offset to "
#~ "apply to the value of the second"
#~ " coordinate of the specified nodes."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying an offset to "
#~ "apply to the value of the third"
#~ " coordinate of the specified nodes."
#~ msgstr ""

#~ msgid ""
#~ "A DatumCsys object specifying the local"
#~ " coordinate system. If unspecified, the "
#~ "global coordinate system will be used."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether to project"
#~ " nodes back to their original "
#~ "geometry. For example, if a node "
#~ "is on a face, this method first"
#~ " positions the node at the new "
#~ "location and then projects it back "
#~ "to the original face. The default "
#~ "value is ON."
#~ msgstr ""

#~ msgid "Raises"
#~ msgstr ""

#~ msgid ""
#~ "A coordinate and an offset may not"
#~ " both be specified for the same "
#~ "coordinate component"
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditAssembly.generateMeshByOffset on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-assemblypyc.htm?contextscope=all"
#~ "#simaker-assemblygeneratemeshbyoffsetpyc>`__."
#~ msgstr ""

#~ msgid "A Region object specifying the domain to be offset."
#~ msgstr ""

#~ msgid ""
#~ "A Symbolic Constant specifying the type"
#~ " of mesh to be generated. Possible"
#~ " values are SOLID or SHELL."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the total thickness"
#~ " of the solid layers. This argument"
#~ " applies only when **meshType** = "
#~ "SOLID."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the distance between"
#~ " shell layers. This argument applies "
#~ "only when **meshType** = SHELL."
#~ msgstr ""

#~ msgid "An Int specifying the number of element layers to be generated."
#~ msgstr ""

#~ msgid ""
#~ "A Symbolic Constant specifying the "
#~ "direction of the offset. This argument"
#~ " is required only when the given "
#~ "region relates to a shell mesh. "
#~ "Possible values are OUTWARD, INWARD, and"
#~ " BOTH. The default value is OUTWARD."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the magnitude of "
#~ "the initial offset. The default value"
#~ " is zero."
#~ msgstr ""

#~ msgid ""
#~ "Boolean specifying whether the first "
#~ "layer of nodes should be shared "
#~ "with nodes on the base surface. "
#~ "The default value is False."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether to delete"
#~ " the shell elements after the offset"
#~ " layers are generated. The default "
#~ "value is False. This argument applies"
#~ " only when **meshType** = SHELL."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether to use "
#~ "element-based thickness or nodal-based"
#~ " thickness. The default value is "
#~ "False."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether existing "
#~ "element sets that include base elements"
#~ " will be extended to include "
#~ "corresponding offset elements. The default "
#~ "value is False."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditAssembly.projectNode on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-assemblypyc.htm?contextscope=all"
#~ "#simaker-assemblyprojectnodepyc>`__."
#~ msgstr ""

#~ msgid "A sequence of MeshNode objects to be projected."
#~ msgstr ""

#~ msgid ""
#~ "An object specifying the target for "
#~ "the node projection operation. The "
#~ "**projectionReference** can be any one "
#~ "of the following objects: MeshNode, "
#~ "MeshEdge, MeshFace, ConstrainedSketchVertex, Edge,"
#~ " Face, DatumPoint, DatumAxis, or "
#~ "DatumPlane."
#~ msgstr ""

#~ msgid ""
#~ "A redo action must be currently "
#~ "available for the assembly. This implies"
#~ " that the user must have executed "
#~ "the undoMeshEdit method on the assembly"
#~ " and that the user has not "
#~ "subsequently executed any further edit "
#~ "mesh commands on the assembly. It "
#~ "also implies that the user provided "
#~ "a sufficient cache allowance to store"
#~ " the undo operation."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of quadrilateral MeshElement "
#~ "objects specifying the elements to "
#~ "split. Each quadrilateral element is "
#~ "split into two triangular elements by"
#~ " the shorter diagonal."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditAssembly.splitMeshEdge on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-assemblypyc.htm?contextscope=all"
#~ "#simaker-assemblysplitmeshedgepyc>`__."
#~ msgstr ""

#~ msgid "A single MeshEdge object specifying the element edge to split."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the normalized "
#~ "distance along the **edge** at which "
#~ "to split. Possible values are 0.0 "
#~ "< **parameter** < 1.0. The default "
#~ "value is 0.5."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditAssembly.swapMeshEdge on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-assemblypyc.htm?contextscope=all"
#~ "#simaker-assemblyswapmeshedgepyc>`__."
#~ msgstr ""

#~ msgid "A single MeshEdge object specifying the element edge to swap."
#~ msgstr ""

#~ msgid ""
#~ "An edit mesh undo action must be"
#~ " available for the assembly. This "
#~ "implies that prior to executing an "
#~ "edit mesh command on the assembly, "
#~ "the user enabled edit mesh undo "
#~ "with a sufficient cache allowance to "
#~ "store the edit mesh operation."
#~ msgstr ""

#~ msgid "Bases: :py:class:`~abaqus.Part.PartBase.PartBase`"
#~ msgstr ""

#~ msgid ""
#~ "The following commands operate on Part"
#~ " objects. For more information about "
#~ "the Part object, see Part object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`geometryValidity "
#~ "<abaqus.Part.PartBase.PartBase.geometryValidity>`\\"
#~ msgstr ""

#~ msgid "A Boolean specifying the validity of the geometry of the part."
#~ msgstr ""

#~ msgid ":py:obj:`isOutOfDate <abaqus.Part.PartBase.PartBase.isOutOfDate>`\\"
#~ msgstr ""

#~ msgid ""
#~ "An Int specifying that feature "
#~ "parameters have been modified but that"
#~ " the part has not been regenerated."
#~ msgstr ""

#~ msgid ":py:obj:`timeStamp <abaqus.Part.PartBase.PartBase.timeStamp>`\\"
#~ msgstr ""

#~ msgid "A Float specifying when the part was last modified."
#~ msgstr ""

#~ msgid ":py:obj:`vertices <abaqus.Part.PartBase.PartBase.vertices>`\\"
#~ msgstr ""

#~ msgid "A VertexArray object specifying all the vertices in the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ignoredVertices "
#~ "<abaqus.Part.PartBase.PartBase.ignoredVertices>`\\"
#~ msgstr ""

#~ msgid ""
#~ "An IgnoredVertexArray object specifying all"
#~ " the ignored vertices in the part."
#~ msgstr ""

#~ msgid ":py:obj:`edges <abaqus.Part.PartBase.PartBase.edges>`\\"
#~ msgstr ""

#~ msgid "An EdgeArray object specifying all the edges in the part."
#~ msgstr ""

#~ msgid ":py:obj:`ignoredEdges <abaqus.Part.PartBase.PartBase.ignoredEdges>`\\"
#~ msgstr ""

#~ msgid ""
#~ "An IgnoredEdgeArray object specifying all "
#~ "the ignored edges in the part."
#~ msgstr ""

#~ msgid ":py:obj:`faces <abaqus.Part.PartBase.PartBase.faces>`\\"
#~ msgstr ""

#~ msgid "A FaceArray object specifying all the faces in the part."
#~ msgstr ""

#~ msgid ":py:obj:`cells <abaqus.Part.PartBase.PartBase.cells>`\\"
#~ msgstr ""

#~ msgid "A CellArray object specifying all the cells in the part."
#~ msgstr ""

#~ msgid ":py:obj:`features <abaqus.Part.PartBase.PartBase.features>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Feature objects "
#~ "specifying all the features in the "
#~ "part."
#~ msgstr ""

#~ msgid ":py:obj:`featuresById <abaqus.Part.PartBase.PartBase.featuresById>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Feature objects "
#~ "specifying all Feature objects in the"
#~ " part."
#~ msgstr ""

#~ msgid ":py:obj:`datums <abaqus.Part.PartBase.PartBase.datums>`\\"
#~ msgstr ""

#~ msgid "A repository of Datum objects specifying all the datums in the part."
#~ msgstr ""

#~ msgid ":py:obj:`elements <abaqus.Part.PartBase.PartBase.elements>`\\"
#~ msgstr ""

#~ msgid "A MeshElementArray object specifying all the elements in the part."
#~ msgstr ""

#~ msgid ":py:obj:`elemFaces <abaqus.Part.PartBase.PartBase.elemFaces>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of MeshFace objects "
#~ "specifying all the element faces in "
#~ "the part."
#~ msgstr ""

#~ msgid ":py:obj:`elementFaces <abaqus.Part.PartBase.PartBase.elementFaces>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A MeshFaceArray object specifying all "
#~ "the unique element faces in the "
#~ "part."
#~ msgstr ""

#~ msgid ":py:obj:`nodes <abaqus.Part.PartBase.PartBase.nodes>`\\"
#~ msgstr ""

#~ msgid "A MeshNodeArray object specifying all the nodes in the part."
#~ msgstr ""

#~ msgid ":py:obj:`retainedNodes <abaqus.Part.PartBase.PartBase.retainedNodes>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A MeshNodeArray object specifying all "
#~ "the retained nodes in the substructure"
#~ " part."
#~ msgstr ""

#~ msgid ":py:obj:`sets <abaqus.Part.PartBase.PartBase.sets>`\\"
#~ msgstr ""

#~ msgid "A repository of Set objects specifying for more information, see Set."
#~ msgstr ""

#~ msgid ":py:obj:`allSets <abaqus.Part.PartBase.PartBase.allSets>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Set objects specifying"
#~ " the contents of the **allSets** "
#~ "repository is the same as the "
#~ "contents of the **sets** repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`allInternalSets "
#~ "<abaqus.Part.PartBase.PartBase.allInternalSets>`\\"
#~ msgstr ""

#~ msgid ":py:obj:`surfaces <abaqus.Part.PartBase.PartBase.surfaces>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Surface objects "
#~ "specifying for more information, see "
#~ "Surface."
#~ msgstr ""

#~ msgid ":py:obj:`allSurfaces <abaqus.Part.PartBase.PartBase.allSurfaces>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Surface objects "
#~ "specifying the contents of the "
#~ "**allSurfaces** repository is the same "
#~ "as the contents of the **surfaces** "
#~ "repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`allInternalSurfaces "
#~ "<abaqus.Part.PartBase.PartBase.allInternalSurfaces>`\\"
#~ msgstr ""

#~ msgid ":py:obj:`skins <abaqus.Part.PartBase.PartBase.skins>`\\"
#~ msgstr ""

#~ msgid "A repository of Skin objects specifying the skins created on the part."
#~ msgstr ""

#~ msgid ":py:obj:`stringers <abaqus.Part.PartBase.PartBase.stringers>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Stringer objects "
#~ "specifying the stringers created on the"
#~ " part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`referencePoints "
#~ "<abaqus.Part.PartBase.PartBase.referencePoints>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`engineeringFeatures "
#~ "<abaqus.Part.PartBase.PartBase.engineeringFeatures>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`sectionAssignments "
#~ "<abaqus.Part.PartBase.PartBase.sectionAssignments>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`materialOrientations "
#~ "<abaqus.Part.PartBase.PartBase.materialOrientations>`\\"
#~ msgstr ""

#~ msgid "A MaterialOrientationArray object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`compositeLayups "
#~ "<abaqus.Part.PartBase.PartBase.compositeLayups>`\\"
#~ msgstr ""

#~ msgid "A repository of CompositeLayup objects."
#~ msgstr ""

#~ msgid ":py:obj:`elemEdges <abaqus.Part.PartBase.PartBase.elemEdges>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of MeshEdge objects "
#~ "specifying all the element edges in "
#~ "the part."
#~ msgstr ""

#~ msgid ":py:obj:`elementEdges <abaqus.Part.PartBase.PartBase.elementEdges>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A MeshEdgeArray object specifying all "
#~ "the unique element edges in the "
#~ "part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`adjustMidsideNode "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.adjustMidsideNode>`\\ "
#~ "\\(cornerNodes\\, parameter\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method is used to adjust the"
#~ " midside node of second-order "
#~ "elements of an orphan mesh part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`cleanMesh "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.cleanMesh>`\\ "
#~ "\\(mergeTolerance\\[\\, growEdges\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method is used to collapse "
#~ "short element edges and delete collapsed"
#~ " elements, or grow short element "
#~ "edges, on an orphan mesh part "
#~ "composed of linear elements."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`collapseMeshEdge "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.collapseMeshEdge>`\\ "
#~ "\\(edge\\, collapseMethod\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method collapses an edge of a"
#~ " quadrilateral or triangular element of "
#~ "an orphan mesh part or part "
#~ "instance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`combineElement "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.combineElement>`\\ "
#~ "\\(elements\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method combines two triangular "
#~ "elements of an orphan mesh part or"
#~ " an Abaqus native mesh."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`convertSolidMeshToShell "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.convertSolidMeshToShell>`\\"
#~ " \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method removes all solid elements"
#~ " from an orphan mesh part and "
#~ "creates triangular or quadrilateral shell "
#~ "elements along their outer faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`deleteElement "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.deleteElement>`\\ "
#~ "\\(elements\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method deletes the given elements"
#~ " from an orphan mesh part or an"
#~ " Abaqus native mesh."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`deleteNode "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.deleteNode>`\\ "
#~ "\\(nodes\\[\\, deleteUnreferencedNodes\\]\\)"
#~ msgstr ""

#~ msgid "This method deletes the given nodes from an orphan mesh part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`editNode "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.editNode>`\\ "
#~ "\\(nodes\\[\\, coordinate1\\, coordinate2\\, "
#~ "...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method changes the coordinates of"
#~ " the given nodes on an orphan "
#~ "mesh part or on an Abaqus native"
#~ " mesh."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`projectNode "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.projectNode>`\\ "
#~ "\\(nodes\\, projectionReference\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method projects the given nodes "
#~ "onto a mesh entity, geometric entity,"
#~ " or a datum object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`generateMesh "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.generateMesh>`\\ "
#~ "\\(\\[elemShape\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method generates a new mesh "
#~ "on an orphan mesh part based on"
#~ " the original mesh."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`generateMeshByOffset "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.generateMeshByOffset>`\\"
#~ " \\(region\\, meshType\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`mergeElement "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.mergeElement>`\\ "
#~ "\\(edge\\, elements\\)"
#~ msgstr ""

#~ msgid ""
#~ "Merge a selection of elements arranged"
#~ " in layers on an orphan mesh "
#~ "part into a single layer."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`mergeNodes "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.mergeNodes>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`orientElements "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.orientElements>`\\ "
#~ "\\(pickedElements\\, referenceRegion\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method orients the stack direction"
#~ " of elements in a continuum shell "
#~ "or gasket mesh."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`removeElementSize "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.removeElementSize>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid "This method removes the global element size from an orphan mesh part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`renumberElement "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.renumberElement>`\\ "
#~ "\\(\\[elements\\, startLabel\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method assigns new labels to orphan mesh elements."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`renumberNode "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.renumberNode>`\\ "
#~ "\\(\\[nodes\\, startLabel\\, increment\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method assigns new labels to orphan mesh nodes."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`setElementSize "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.setElementSize>`\\ "
#~ "\\(size\\)"
#~ msgstr ""

#~ msgid "This method sets the global element size for an orphan mesh part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`splitElement "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.splitElement>`\\ "
#~ "\\(elements\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method splits quadrilateral elements "
#~ "of an orphan mesh part or a "
#~ "Abaqus native mesh into triangular "
#~ "elements."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`splitMeshEdge "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.splitMeshEdge>`\\ "
#~ "\\(edge\\[\\, parameter\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method splits an edge of a"
#~ " quadrilateral or triangular element of "
#~ "an orphan mesh part or an Abaqus"
#~ " native mesh."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`subdivideElement "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.subdivideElement>`\\ "
#~ "\\(\\[elements\\, divisionNumber\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Subdivide a selection of elements on "
#~ "an orphan mesh part in one or "
#~ "more directions."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`swapMeshEdge "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.swapMeshEdge>`\\ "
#~ "\\(edge\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method swaps the diagonal of "
#~ "two adjacent triangular elements of an"
#~ " orphan mesh part or an Abaqus "
#~ "native mesh."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`wrapMesh "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.wrapMesh>`\\ "
#~ "\\(radius\\)"
#~ msgstr ""

#~ msgid "This method wraps a planar orphan mesh part about the **Z** axis."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`redoMeshEdit "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.redoMeshEdit>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method executes the edit mesh "
#~ "or the bottom-up meshing operation "
#~ "most recently undone by the undoMeshEdit"
#~ " method on an part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`undoMeshEdit "
#~ "<abaqus.EditMesh.MeshEditPart.MeshEditPart.undoMeshEdit>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method undoes the most recent "
#~ "edit mesh or the bottom-up meshing"
#~ " operation on a part and restores "
#~ "the mesh to its previous state."
#~ msgstr ""

#~ msgid ":py:obj:`__init__ <abaqus.Part.PartBase.PartBase.__init__>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromBooleanCut "
#~ "<abaqus.Part.PartBase.PartBase.PartFromBooleanCut>`\\ \\(name\\,"
#~ " instanceToBeCut\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Part in the"
#~ " parts repository after subtracting or "
#~ "cutting the geometries of a group "
#~ "of part instances from that of a"
#~ " base part instance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromBooleanMerge "
#~ "<abaqus.Part.PartBase.PartBase.PartFromBooleanMerge>`\\ "
#~ "\\(name\\, instances\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Part in the"
#~ " parts repository after merging two "
#~ "or more part instances."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromExtrude2DMesh "
#~ "<abaqus.Part.PartBase.PartBase.PartFromExtrude2DMesh>`\\ "
#~ "\\(name\\, part\\, depth\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Part object "
#~ "by extruding an existing two-dimensional"
#~ " orphan mesh Part object in the "
#~ "positive **Z** direction and places it"
#~ " in the parts repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromGeometryFile "
#~ "<abaqus.Part.PartBase.PartBase.PartFromGeometryFile>`\\ "
#~ "\\(name\\, geometryFile\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Part object "
#~ "and places it in the parts "
#~ "repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromInstanceMesh "
#~ "<abaqus.Part.PartBase.PartBase.PartFromInstanceMesh>`\\ "
#~ "\\(name\\[\\, partInstances\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Part object "
#~ "containing the mesh found in the "
#~ "supplied PartInstance objects and places "
#~ "the new Part object in the parts"
#~ " repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromMesh "
#~ "<abaqus.Part.PartBase.PartBase.PartFromMesh>`\\ \\(name\\[\\,"
#~ " copySets\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Part object "
#~ "containing the mesh found in the "
#~ "part and places the new Part "
#~ "object in the parts repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromMeshMirror "
#~ "<abaqus.Part.PartBase.PartBase.PartFromMeshMirror>`\\ \\(name\\,"
#~ " part\\, point1\\, point2\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Part object "
#~ "by mirroring an existing orphan mesh "
#~ "Part object about a specified plane "
#~ "and places it in the parts "
#~ "repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromNodesAndElements "
#~ "<abaqus.Part.PartBase.PartBase.PartFromNodesAndElements>`\\ "
#~ "\\(name\\, ...\\[\\, twist\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Part object "
#~ "from nodes and elements and places "
#~ "it in the parts repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromOdb "
#~ "<abaqus.Part.PartBase.PartBase.PartFromOdb>`\\ \\(name\\, "
#~ "odb\\[\\, fileName\\, instance\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an orphan mesh "
#~ "Part object by reading an output "
#~ "database."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromSection3DMeshByPlane "
#~ "<abaqus.Part.PartBase.PartBase.PartFromSection3DMeshByPlane>`\\ "
#~ "\\(name\\, part\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Part object "
#~ "by cutting an existing three-dimensional"
#~ " orphan mesh Part object by a "
#~ "plane and places it in the parts"
#~ " repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromSubstructure "
#~ "<abaqus.Part.PartBase.PartBase.PartFromSubstructure>`\\ "
#~ "\\(name\\, substructureFile\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a substructure Part"
#~ " object by reading a substructure sim"
#~ " file and places it in the "
#~ "parts repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Part2DGeomFrom2DMesh "
#~ "<abaqus.Part.PartBase.PartBase.Part2DGeomFrom2DMesh>`\\ "
#~ "\\(name\\, part\\, featureAngle\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a geometric Part "
#~ "object from the outline of an "
#~ "existing two-dimensional orphan mesh "
#~ "Part object and places it in the"
#~ " parts repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`setValues <abaqus.Part.PartBase.PartBase.setValues>`\\"
#~ " \\(\\*args\\, \\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid "This method modifies the Part object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`addGeomToSketch "
#~ "<abaqus.Part.PartBase.PartBase.addGeomToSketch>`\\ \\(sketch\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method converts a part into a"
#~ " sketch by projecting all of the "
#~ "edges of the part onto the X-Y "
#~ "plane of the sketch."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`assignThickness "
#~ "<abaqus.Part.PartBase.PartBase.assignThickness>`\\ "
#~ "\\(faces\\[\\, thickness\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method assigns thickness data to shell faces."
#~ msgstr ""

#~ msgid ":py:obj:`backup <abaqus.Part.PartBase.PartBase.backup>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method makes a backup copy of the features in the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`checkGeometry "
#~ "<abaqus.Part.PartBase.PartBase.checkGeometry>`\\ "
#~ "\\(\\[detailed\\, reportFacetErrors\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method checks the validity of "
#~ "the geometry of the part and "
#~ "prints a count of all topological "
#~ "entities on the part (faces, edges, "
#~ "vertices, etc.)."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`clearGeometryCache "
#~ "<abaqus.Part.PartBase.PartBase.clearGeometryCache>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method clears the geometry cache."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`deleteAllFeatures "
#~ "<abaqus.Part.PartBase.PartBase.deleteAllFeatures>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method deletes all the features in the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`deleteFeatures "
#~ "<abaqus.Part.PartBase.PartBase.deleteFeatures>`\\ "
#~ "\\(featureNames\\)"
#~ msgstr ""

#~ msgid "This method deletes the given features."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getAngle <abaqus.Part.PartBase.PartBase.getAngle>`\\"
#~ " \\(plane1\\, plane2\\, line1\\, line2\\[\\, "
#~ "...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getArea <abaqus.Part.PartBase.PartBase.getArea>`\\ "
#~ "\\(faces\\[\\, relativeAccuracy\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns the total surface"
#~ " area of a given face or group"
#~ " of faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getAssociatedCADPaths "
#~ "<abaqus.Part.PartBase.PartBase.getAssociatedCADPaths>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method returns the paths to the associated CAD part and root file."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getCADParameters "
#~ "<abaqus.Part.PartBase.PartBase.getCADParameters>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns the names and "
#~ "values of the CAD parameters associated"
#~ " with the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getCentroid "
#~ "<abaqus.Part.PartBase.PartBase.getCentroid>`\\ \\(faces\\, "
#~ "cells\\[\\, relativeAccuracy\\]\\)"
#~ msgstr ""

#~ msgid "Location of the centroid of a given face/cell or group of faces/cells."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getCoordinates "
#~ "<abaqus.Part.PartBase.PartBase.getCoordinates>`\\ \\(entity\\)"
#~ msgstr ""

#~ msgid "This method returns the coordinates of specified point."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getCurvature "
#~ "<abaqus.Part.PartBase.PartBase.getCurvature>`\\ \\(edges\\[\\,"
#~ " samplePoints\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns the maximum "
#~ "curvature of a given edge or group"
#~ " of edges."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getDistance "
#~ "<abaqus.Part.PartBase.PartBase.getDistance>`\\ \\(entity1\\, "
#~ "entity2\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getLength <abaqus.Part.PartBase.PartBase.getLength>`\\"
#~ " \\(edges\\)"
#~ msgstr ""

#~ msgid "This method returns the length of a given edge or group of edges."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getPerimeter "
#~ "<abaqus.Part.PartBase.PartBase.getPerimeter>`\\ \\(faces\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns the total perimeter"
#~ " of a given face or group of"
#~ " faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getVolume <abaqus.Part.PartBase.PartBase.getVolume>`\\"
#~ " \\(cells\\[\\, relativeAccuracy\\]\\)"
#~ msgstr ""

#~ msgid "This method returns the volume area of a given cell or group of cells."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getMassProperties "
#~ "<abaqus.Part.PartBase.PartBase.getMassProperties>`\\ "
#~ "\\(\\[regions\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method returns the mass properties of a part or region."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getFeatureFaces "
#~ "<abaqus.Part.PartBase.PartBase.getFeatureFaces>`\\ \\(name\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a sequence of "
#~ "Face objects that are created by "
#~ "the given feature."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getFeatureEdges "
#~ "<abaqus.Part.PartBase.PartBase.getFeatureEdges>`\\ \\(name\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a sequence of "
#~ "Edge objects that are created by "
#~ "the given feature."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getFeatureCells "
#~ "<abaqus.Part.PartBase.PartBase.getFeatureCells>`\\ \\(name\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a sequence of "
#~ "Cell objects that are created by "
#~ "the given feature."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getFeatureVertices "
#~ "<abaqus.Part.PartBase.PartBase.getFeatureVertices>`\\ \\(name\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a sequence of "
#~ "ConstrainedSketchVertex objects that are "
#~ "created by the given feature."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`isAlignedWithSketch "
#~ "<abaqus.Part.PartBase.PartBase.isAlignedWithSketch>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method checks if the normal "
#~ "of an analytical rigid surface part "
#~ "is aligned with that of its "
#~ "sketch."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`printAssignedSections "
#~ "<abaqus.Part.PartBase.PartBase.printAssignedSections>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method prints information on each"
#~ " section that has been assigned to"
#~ " a region of the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`projectEdgesOntoSketch "
#~ "<abaqus.Part.PartBase.PartBase.projectEdgesOntoSketch>`\\ "
#~ "\\(sketch\\, edges\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method projects the selected edges"
#~ " of a part onto the specified "
#~ "ConstrainedSketch object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`projectReferencesOntoSketch "
#~ "<abaqus.Part.PartBase.PartBase.projectReferencesOntoSketch>`\\ "
#~ "\\(sketch\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method projects the vertices of "
#~ "specified edges, and datum points from"
#~ " the part onto the specified "
#~ "ConstrainedSketch object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`queryAttributes "
#~ "<abaqus.Part.PartBase.PartBase.queryAttributes>`\\ "
#~ "\\(\\[printResults\\]\\)"
#~ msgstr ""

#~ msgid "This method prints the following information about a part:"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`queryCachedStates "
#~ "<abaqus.Part.PartBase.PartBase.queryCachedStates>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method displays the position of "
#~ "geometric states relative to the "
#~ "sequence of features in the part "
#~ "cache."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`queryGeometry "
#~ "<abaqus.Part.PartBase.PartBase.queryGeometry>`\\ "
#~ "\\(\\[relativeAccuracy\\, printResults\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`queryRegionsMissingSections "
#~ "<abaqus.Part.PartBase.PartBase.queryRegionsMissingSections>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns all regions in "
#~ "the part that do not have a "
#~ "section assignment but require one for"
#~ " analysis."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`queryDisjointPlyRegions "
#~ "<abaqus.Part.PartBase.PartBase.queryDisjointPlyRegions>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method provides a list of all"
#~ " composite plys in the current part"
#~ " which have disjoint regions."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`regenerate "
#~ "<abaqus.Part.PartBase.PartBase.regenerate>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method regenerates a part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`regenerationWarnings "
#~ "<abaqus.Part.PartBase.PartBase.regenerationWarnings>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`removeInvalidGeometry "
#~ "<abaqus.Part.PartBase.PartBase.removeInvalidGeometry>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "Removes all invalid entities from the part, leaving a valid part."
#~ msgstr ""

#~ msgid ":py:obj:`restore <abaqus.Part.PartBase.PartBase.restore>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`resumeAllFeatures "
#~ "<abaqus.Part.PartBase.PartBase.resumeAllFeatures>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method resumes all the suppressed features in the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`resumeFeatures "
#~ "<abaqus.Part.PartBase.PartBase.resumeFeatures>`\\ "
#~ "\\(featureNames\\)"
#~ msgstr ""

#~ msgid "This method resumes the specified suppressed features in the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`resumeLastSetFeatures "
#~ "<abaqus.Part.PartBase.PartBase.resumeLastSetFeatures>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method resumes the last set "
#~ "of features to be suppressed in "
#~ "the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`saveGeometryCache "
#~ "<abaqus.Part.PartBase.PartBase.saveGeometryCache>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method caches the current geometry."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`setAssociatedCADPaths "
#~ "<abaqus.Part.PartBase.PartBase.setAssociatedCADPaths>`\\ "
#~ "\\(\\[partFile\\, rootFile\\]\\)"
#~ msgstr ""

#~ msgid "This method sets the paths to the associated CAD part and root file."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`suppressFeatures "
#~ "<abaqus.Part.PartBase.PartBase.suppressFeatures>`\\ "
#~ "\\(featureNames\\)"
#~ msgstr ""

#~ msgid "This method suppresses the given features."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`writeAcisFile "
#~ "<abaqus.Part.PartBase.PartBase.writeAcisFile>`\\ "
#~ "\\(fileName\\[\\, version\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method exports the geometry of "
#~ "the part to a named file in "
#~ "ACIS format."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`writeCADParameters "
#~ "<abaqus.Part.PartBase.PartBase.writeCADParameters>`\\ "
#~ "\\(paramFile\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`writeIgesFile "
#~ "<abaqus.Part.PartBase.PartBase.writeIgesFile>`\\ \\(fileName\\,"
#~ " flavor\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method exports the geometry of "
#~ "the part to a named file in "
#~ "IGES format."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`writeStepFile "
#~ "<abaqus.Part.PartBase.PartBase.writeStepFile>`\\ \\(fileName\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method exports the geometry of "
#~ "the part to a named file in "
#~ "STEP format."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`writeVdaFile "
#~ "<abaqus.Part.PartBase.PartBase.writeVdaFile>`\\ \\(fileName\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method exports the geometry of "
#~ "the part to a named file in "
#~ "VDA-FS format."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`copyMeshPattern "
#~ "<abaqus.Part.PartBase.PartBase.copyMeshPattern>`\\ "
#~ "\\(elements\\, faces\\, elemFaces\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`smoothNodes "
#~ "<abaqus.Part.PartBase.PartBase.smoothNodes>`\\ \\(nodes\\)"
#~ msgstr ""

#~ msgid ":py:obj:`Lock <abaqus.Part.PartBase.PartBase.Lock>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method locks the part."
#~ msgstr ""

#~ msgid ":py:obj:`Unlock <abaqus.Part.PartBase.PartBase.Unlock>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method unlocks the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`LockForUpgrade "
#~ "<abaqus.Part.PartBase.PartBase.LockForUpgrade>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method locks the part for upgrade."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AutoRepair "
#~ "<abaqus.Part.PartFeature.PartFeature.AutoRepair>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method carries out a sequence "
#~ "of geometry repair operations if it "
#~ "contains invalid entities."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AddCells "
#~ "<abaqus.Part.PartFeature.PartFeature.AddCells>`\\ "
#~ "\\(faceList\\[\\, flipped\\]\\)"
#~ msgstr ""

#~ msgid "This method tries to convert a shell entity to a solid entity."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AnalyticRigidSurf2DPlanar "
#~ "<abaqus.Part.PartFeature.PartFeature.AnalyticRigidSurf2DPlanar>`\\ "
#~ "\\(sketch\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object for an analytical rigid surface"
#~ " by creating a planar wire from "
#~ "the given ConstrainedSketch object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AnalyticRigidSurfExtrude "
#~ "<abaqus.Part.PartFeature.PartFeature.AnalyticRigidSurfExtrude>`\\ "
#~ "\\(sketch\\[\\, depth\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object for an analytical rigid surface"
#~ " by extruding the given ConstrainedSketch"
#~ " object by the given depth, creating"
#~ " a surface."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AnalyticRigidSurfRevolve "
#~ "<abaqus.Part.PartFeature.PartFeature.AnalyticRigidSurfRevolve>`\\ "
#~ "\\(sketch\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object for an analytical rigid surface"
#~ " by revolving the given ConstrainedSketch"
#~ " object by 360° about the **Y** "
#~ "axis."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AssignMidsurfaceRegion "
#~ "<abaqus.Part.PartFeature.PartFeature.AssignMidsurfaceRegion>`\\ "
#~ "\\(cellList\\)"
#~ msgstr ""

#~ msgid "This method assign a mid-surface property to sequence of Cell objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`BaseSolidExtrude "
#~ "<abaqus.Part.PartFeature.PartFeature.BaseSolidExtrude>`\\ "
#~ "\\(sketch\\, depth\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object by extruding the given "
#~ "ConstrainedSketch object by the given "
#~ "depth, creating a solid."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`BaseSolidRevolve "
#~ "<abaqus.Part.PartFeature.PartFeature.BaseSolidRevolve>`\\ "
#~ "\\(sketch\\, angle\\[\\, pitch\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object by revolving the given "
#~ "ConstrainedSketch object by the given "
#~ "angle, creating a solid."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`BaseSolidSweep "
#~ "<abaqus.Part.PartFeature.PartFeature.BaseSolidSweep>`\\ "
#~ "\\(sketch\\, path\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object by sweeping the given profile "
#~ "ConstrainedSketch object along the path "
#~ "defined by the path ConstrainedSketch "
#~ "object, creating a solid."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`BaseShell "
#~ "<abaqus.Part.PartFeature.PartFeature.BaseShell>`\\ \\(sketch\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object by creating a planar shell "
#~ "from the given ConstrainedSketch object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`BaseShellExtrude "
#~ "<abaqus.Part.PartFeature.PartFeature.BaseShellExtrude>`\\ "
#~ "\\(sketch\\, depth\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object by extruding the given "
#~ "ConstrainedSketch object by the given "
#~ "depth, creating a shell."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`BaseShellRevolve "
#~ "<abaqus.Part.PartFeature.PartFeature.BaseShellRevolve>`\\ "
#~ "\\(sketch\\, angle\\[\\, pitch\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object by revolving the given "
#~ "ConstrainedSketch object by the given "
#~ "angle, creating a shell."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`BaseShellSweep "
#~ "<abaqus.Part.PartFeature.PartFeature.BaseShellSweep>`\\ "
#~ "\\(sketch\\, path\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object by sweeping the given section "
#~ "ConstrainedSketch object along the path "
#~ "defined by the path ConstrainedSketch "
#~ "object, creating a shell."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`BaseWire "
#~ "<abaqus.Part.PartFeature.PartFeature.BaseWire>`\\ \\(sketch\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object by creating a planar wire "
#~ "from the given ConstrainedSketch object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`BlendFaces "
#~ "<abaqus.Part.PartFeature.PartFeature.BlendFaces>`\\ \\(side1\\,"
#~ " side2\\[\\, method\\, path\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "by creating new faces that blends "
#~ "two sets of faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Chamfer "
#~ "<abaqus.Part.PartFeature.PartFeature.Chamfer>`\\ \\(length\\,"
#~ " edgeList\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by chamfering the given"
#~ " list of edges with a given "
#~ "length."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Mirror <abaqus.Part.PartFeature.PartFeature.Mirror>`\\"
#~ " \\(mirrorPlane\\, keepOriginal\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method mirrors existing part "
#~ "geometry across a plane to create "
#~ "new geometry."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ConvertToAnalytical "
#~ "<abaqus.Part.PartFeature.PartFeature.ConvertToAnalytical>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method attempts to change entities"
#~ " into a simpler form that will "
#~ "speed up processing and make entities"
#~ " available during feature operations."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ConvertToPrecise "
#~ "<abaqus.Part.PartFeature.PartFeature.ConvertToPrecise>`\\ "
#~ "\\(\\[method\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method attempts to change imprecise"
#~ " entities so that the geometry "
#~ "becomes precise."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`CoverEdges "
#~ "<abaqus.Part.PartFeature.PartFeature.CoverEdges>`\\ "
#~ "\\(edgeList\\[\\, tryAnalytical\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method generates a face using "
#~ "the given edges as the face's "
#~ "boundaries."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Cut <abaqus.Part.PartFeature.PartFeature.Cut>`\\ "
#~ "\\(sketchPlane\\, sketchPlaneSide\\, ...\\[\\, "
#~ "...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by cutting a hole "
#~ "using the given ConstrainedSketch object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`CutExtrude "
#~ "<abaqus.Part.PartFeature.PartFeature.CutExtrude>`\\ "
#~ "\\(sketchPlane\\, sketchPlaneSide\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by extruding the given"
#~ " ConstrainedSketch object by the given "
#~ "depth and cutting away material in "
#~ "the solid and shell regions of the"
#~ " part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`CutLoft "
#~ "<abaqus.Part.PartFeature.PartFeature.CutLoft>`\\ "
#~ "\\(loftsections\\[\\, startCondition\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by lofting between the"
#~ " given sections and cutting away "
#~ "material from the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`CutRevolve "
#~ "<abaqus.Part.PartFeature.PartFeature.CutRevolve>`\\ "
#~ "\\(sketchPlane\\, sketchPlaneSide\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by revolving the given"
#~ " ConstrainedSketch object by the given "
#~ "angle and cutting away material from "
#~ "the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`CutSweep "
#~ "<abaqus.Part.PartFeature.PartFeature.CutSweep>`\\ \\(path\\, "
#~ "profile\\[\\, pathPlane\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by sweeping the given "
#~ "ConstrainedSketch object along a path "
#~ "which may be a ConstrainedSketch or "
#~ "a sequence of Edge objects and "
#~ "cutting away material from the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ExtendFaces "
#~ "<abaqus.Part.PartFeature.PartFeature.ExtendFaces>`\\ "
#~ "\\(\\[faces\\, extendAlong\\, distance\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method extends faces along its "
#~ "free edges by offsetting the external"
#~ " edges along the surfaces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`FaceFromElementFaces "
#~ "<abaqus.Part.PartFeature.PartFeature.FaceFromElementFaces>`\\ "
#~ "\\(elementFaces\\[\\, stitch\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a geometry face "
#~ "from a collection of orphan element "
#~ "faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`HoleBlindFromEdges "
#~ "<abaqus.Part.PartFeature.PartFeature.HoleBlindFromEdges>`\\ "
#~ "\\(plane\\, planeSide\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by creating a circular"
#~ " blind hole of the given diameter "
#~ "and depth and cutting away material "
#~ "in the solid and shell regions of"
#~ " the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`HoleFromEdges "
#~ "<abaqus.Part.PartFeature.PartFeature.HoleFromEdges>`\\ "
#~ "\\(diameter\\, edge1\\, distance1\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by creating a circular"
#~ " hole of the given diameter in "
#~ "a 2D planar part and cutting away"
#~ " material in the shell and wire "
#~ "regions of the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`HoleThruAllFromEdges "
#~ "<abaqus.Part.PartFeature.PartFeature.HoleThruAllFromEdges>`\\ "
#~ "\\(plane\\, planeSide\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by creating a circular"
#~ " through hole of the given diameter"
#~ " and cutting away material in the "
#~ "solid and shell regions of the "
#~ "part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`MergeEdges "
#~ "<abaqus.Part.PartFeature.PartFeature.MergeEdges>`\\ "
#~ "\\(\\[edgeList\\, extendSelection\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method merges edges either by "
#~ "extending the user selection or using"
#~ " only the selected edges."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`OffsetFaces "
#~ "<abaqus.Part.PartFeature.PartFeature.OffsetFaces>`\\ "
#~ "\\(faceList\\[\\, distance\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method creates new faces by offsetting existing faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RemoveCells "
#~ "<abaqus.Part.PartFeature.PartFeature.RemoveCells>`\\ "
#~ "\\(cellList\\)"
#~ msgstr ""

#~ msgid "This method converts a solid entity to a shell entity."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RemoveFaces "
#~ "<abaqus.Part.PartFeature.PartFeature.RemoveFaces>`\\ "
#~ "\\(faceList\\[\\, deleteCells\\]\\)"
#~ msgstr ""

#~ msgid "This method removes faces from a solid entity or from a shell entity."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RemoveFacesAndStitch "
#~ "<abaqus.Part.PartFeature.PartFeature.RemoveFacesAndStitch>`\\ "
#~ "\\(faceList\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method removes faces from a "
#~ "solid entity and attempts to close "
#~ "the resulting gap by extending the "
#~ "neighboring faces of the solid."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RemoveRedundantEntities "
#~ "<abaqus.Part.PartFeature.PartFeature.RemoveRedundantEntities>`\\ "
#~ "\\(\\[vertexList\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method removes redundant edges and"
#~ " vertices from a solid or a "
#~ "shell entity."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RepairFaceNormals "
#~ "<abaqus.Part.PartFeature.PartFeature.RepairFaceNormals>`\\ "
#~ "\\(\\[faceList\\]\\)"
#~ msgstr ""

#~ msgid "This method works on the entire part or a sequence of shell faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RepairInvalidEdges "
#~ "<abaqus.Part.PartFeature.PartFeature.RepairInvalidEdges>`\\ "
#~ "\\(edgeList\\)"
#~ msgstr ""

#~ msgid "This method repairs invalid edges."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RepairSliver "
#~ "<abaqus.Part.PartFeature.PartFeature.RepairSliver>`\\ \\(face\\,"
#~ " point1\\, point2\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method repairs the selected sliver from the selected face."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RepairSmallEdges "
#~ "<abaqus.Part.PartFeature.PartFeature.RepairSmallEdges>`\\ "
#~ "\\(edgeList\\[\\, toleranceChecks\\]\\)"
#~ msgstr ""

#~ msgid "This method repairs small edges."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RepairSmallFaces "
#~ "<abaqus.Part.PartFeature.PartFeature.RepairSmallFaces>`\\ "
#~ "\\(faceList\\[\\, toleranceChecks\\]\\)"
#~ msgstr ""

#~ msgid "This method repairs small faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ReplaceFaces "
#~ "<abaqus.Part.PartFeature.PartFeature.ReplaceFaces>`\\ "
#~ "\\(faceList\\[\\, stitch\\]\\)"
#~ msgstr ""

#~ msgid "This method replaces the selected faces with a single face."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Round <abaqus.Part.PartFeature.PartFeature.Round>`\\"
#~ " \\(radius\\, edgeList\\, vertexList\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by rounding (filleting) "
#~ "the given list of entities with "
#~ "the given radius."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Shell <abaqus.Part.PartFeature.PartFeature.Shell>`\\"
#~ " \\(sketchPlane\\, sketchPlaneSide\\, ...\\[\\, "
#~ "...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by creating a planar "
#~ "shell from the given ConstrainedSketch "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ShellExtrude "
#~ "<abaqus.Part.PartFeature.PartFeature.ShellExtrude>`\\ "
#~ "\\(sketchPlane\\, sketchPlaneSide\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by extruding the given"
#~ " ConstrainedSketch object by the given "
#~ "depth, creating a shell protrusion."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ShellLoft "
#~ "<abaqus.Part.PartFeature.PartFeature.ShellLoft>`\\ "
#~ "\\(loftsections\\[\\, startCondition\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by lofting between the"
#~ " given sections and adding shell "
#~ "faces to the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ShellRevolve "
#~ "<abaqus.Part.PartFeature.PartFeature.ShellRevolve>`\\ "
#~ "\\(sketchPlane\\, sketchPlaneSide\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by revolving the given"
#~ " ConstrainedSketch object by the given "
#~ "angle, creating a shell protrusion."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ShellSweep "
#~ "<abaqus.Part.PartFeature.PartFeature.ShellSweep>`\\ \\(path\\,"
#~ " profile\\[\\, pathPlane\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by sweeping the given "
#~ "ConstrainedSketch object or a sequence "
#~ "of Edge objects along a path which"
#~ " may be a ConstrainedSketch or a "
#~ "sequence of Edge objects, creating a "
#~ "shell swept protrusion."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`SolidExtrude "
#~ "<abaqus.Part.PartFeature.PartFeature.SolidExtrude>`\\ "
#~ "\\(sketchPlane\\, sketchPlaneSide\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by extruding the given"
#~ " ConstrainedSketch object by the given "
#~ "depth, creating a solid protrusion."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`SolidLoft "
#~ "<abaqus.Part.PartFeature.PartFeature.SolidLoft>`\\ "
#~ "\\(loftsections\\[\\, startCondition\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by lofting between the"
#~ " given sections and adding material "
#~ "to the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`SolidRevolve "
#~ "<abaqus.Part.PartFeature.PartFeature.SolidRevolve>`\\ "
#~ "\\(sketchPlane\\, sketchPlaneSide\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by revolving the given"
#~ " ConstrainedSketch object by the given "
#~ "angle, creating a solid protrusion."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`SolidSweep "
#~ "<abaqus.Part.PartFeature.PartFeature.SolidSweep>`\\ \\(path\\,"
#~ " profile\\[\\, pathPlane\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by sweeping the given "
#~ "ConstrainedSketch object or a Face "
#~ "object along a path which may be"
#~ " a ConstrainedSketch or a sequence of"
#~ " Edge objects, creating a solid swept"
#~ " protrusion."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Stitch <abaqus.Part.PartFeature.PartFeature.Stitch>`\\"
#~ " \\(\\[edgeList\\, stitchTolerance\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method attempts to create a "
#~ "valid part by binding together free "
#~ "and imprecise edges of all the "
#~ "faces of a part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Wire <abaqus.Part.PartFeature.PartFeature.Wire>`\\ "
#~ "\\(sketchPlane\\, sketchPlaneSide\\, ...\\[\\, "
#~ "...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by creating a planar "
#~ "wire from the given ConstrainedSketch "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`WireSpline "
#~ "<abaqus.Part.PartFeature.PartFeature.WireSpline>`\\ "
#~ "\\(points\\[\\, mergeType\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by creating a spline "
#~ "wire that passes through a sequence "
#~ "of given points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`WirePolyLine "
#~ "<abaqus.Part.PartFeature.PartFeature.WirePolyLine>`\\ "
#~ "\\(points\\[\\, mergeType\\, meshable\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by creating a polyline"
#~ " wire that passes through a sequence"
#~ " of given points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`WireFromEdge "
#~ "<abaqus.Part.PartFeature.PartFeature.WireFromEdge>`\\ "
#~ "\\(edgeList\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by creating a Wire "
#~ "by selecting one or more Edge "
#~ "objects of a Solid or Shell part."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.adjustMidsideNode on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partadjustmidsidenodepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Node objects specifying"
#~ " the nodes towards which connected "
#~ "midside nodes will be biased."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the normalized "
#~ "distance along the edge of the "
#~ "midside nodes. Possible values are 0.0"
#~ " ≤ **parameter** ≤ 1.0, where 0.0 "
#~ "specifies the position of the corner "
#~ "node. The default value is 0.5."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.cleanMesh on help.3ds.com/2021"
#~ " "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partcleanmeshpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the edge length "
#~ "tolerance. During the operation, edges "
#~ "shorter than the given tolerance will"
#~ " be collapsed, or grown to the "
#~ "specified length."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether short "
#~ "element edges will be grown to the"
#~ " specified tolerance. Default is False, "
#~ "meaning short edges will be collapsed."
#~ msgstr ""

#~ msgid ""
#~ "The elements to consider as the "
#~ "domain for the operation. By default "
#~ "all elements on the part are "
#~ "considered. The elements may be given"
#~ " as a MeshElementArray, a list of "
#~ "MeshElement objects, a Set, or a "
#~ "list of Set objects."
#~ msgstr ""

#~ msgid ""
#~ "A MeshEdge specifying a reference edge"
#~ " to indicate a topological direction "
#~ "in a structured mesh that will "
#~ "limit which edges within the element "
#~ "domain are considered. That is, only "
#~ "edges that are found to be "
#~ "topologically parallel to the given "
#~ "reference edge will be considered by "
#~ "the operation. By default all edges "
#~ "of the element domain are considered,"
#~ " unless **thicknessDir** is specified, in"
#~ " which case the operation will "
#~ "attempt to determine the topological "
#~ "edges from the thickness direction."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of two or three Floats "
#~ "indicating a vector along which element"
#~ " edge lengths will be measured."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean indicating whether element "
#~ "edges will be all grown in the "
#~ "direction of the thickness vector "
#~ "specified by **thicknessDir**. This argument"
#~ " is ignored unless **growEdges** is "
#~ "True and **thicknessDir** is provided. "
#~ "When this argument is True the "
#~ "growth of any given element edge "
#~ "will no longer be constrained by "
#~ "short edges on neighboring elements, but"
#~ " elements could move from their "
#~ "original positions in cases where there"
#~ " are multiple adjacent layers of thin"
#~ " elements. The default value is "
#~ "False."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.collapseMeshEdge on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partcollapsemeshedgepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.combineElement on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partcombineelementpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method deletes the given elements"
#~ " from an orphan mesh part or an"
#~ " Abaqus native mesh. If the elements"
#~ " belong to an Abaqus native mesh "
#~ "then the elements must have been "
#~ "generated using the bottom-up meshing"
#~ " technique."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.deleteElement on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partdeleteelementpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.deleteNode on help.3ds.com/2021"
#~ " "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partdeletenodepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether to delete"
#~ " all those associated nodes that "
#~ "become unreferenced after the given "
#~ "nodes and the connected elements are "
#~ "deleted. The default value is OFF."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.editNode on help.3ds.com/2021"
#~ " "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-parteditnodepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.generateMesh on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partgeneratemeshpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the element "
#~ "shape to be used for meshing. "
#~ "Possible values are:TRIRefine a planar "
#~ "triangular mesh and replace it with "
#~ "a new one. If no element sizes "
#~ "are attached, the new mesh will be"
#~ " governed by the sizes of the "
#~ "boundary edges in the old mesh. "
#~ "TETCreate a tetrahedral mesh from a "
#~ "closed shell of triangular elements."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.generateMeshByOffset on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partgeneratemeshbyoffsetpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.mergeElement on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partmergeelementpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A MeshEdge of one of the specified"
#~ " elements that serves as a reference"
#~ " edge to indicate the topological "
#~ "direction for merging elements. All "
#~ "specified elements must be reachable by"
#~ " topological navigation from this element"
#~ " edge, and the topological direction "
#~ "must be unambiguous."
#~ msgstr ""

#~ msgid ""
#~ "A MeshElementArray, a list of "
#~ "MeshElement objects, a Set, or a "
#~ "list of Set objects containing the "
#~ "elements to be included in the "
#~ "merge operation."
#~ msgstr ""

#~ msgid "A sequence of MeshElement objects specifying the elements to orient."
#~ msgstr ""

#~ msgid ""
#~ "A MeshFace object specifying a reference"
#~ " top face that indicates the desired"
#~ " orientation."
#~ msgstr ""

#~ msgid ""
#~ "This method projects the given nodes "
#~ "onto a mesh entity, geometric entity,"
#~ " or a datum object. The nodes "
#~ "may belong to an orphan mesh part"
#~ " or to an Abaqus native mesh."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.projectNode on help.3ds.com/2021"
#~ " "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partprojectnodepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A redo action must be currently "
#~ "available for the part. This implies "
#~ "that the user must have executed "
#~ "the undoMeshEdit method on the part "
#~ "and that the user has not "
#~ "subsequently executed any further edit "
#~ "mesh commands on the assembly. It "
#~ "also implies that the user provided "
#~ "a sufficient cache allowance to store"
#~ " the undo operation."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.renumberElement on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partrenumberelementpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A MeshElementArray or a tuple or "
#~ "list of MeshElement objects, or a "
#~ "Set containing elements to be "
#~ "renumbered. If unspecified, all elements "
#~ "in the part will be renumbered."
#~ msgstr ""

#~ msgid ""
#~ "A positive Int specifying the new "
#~ "label for the first element in "
#~ "**elements**."
#~ msgstr ""

#~ msgid ""
#~ "A positive Int specifying the increment"
#~ " used for computation of new labels"
#~ " for all consecutive elements in "
#~ "**elements**."
#~ msgstr ""

#~ msgid ""
#~ "An Int by which existing labels of"
#~ " the specified elements will be "
#~ "offset."
#~ msgstr ""

#~ msgid ""
#~ "A list of labels for the specified"
#~ " elements. The length of this list"
#~ " must match the number of specified"
#~ " elements."
#~ msgstr ""

#~ msgid ""
#~ "Renumbering can be applied to orphan "
#~ "mesh parts only, Renumbering is "
#~ "attempted on a native part"
#~ msgstr ""

#~ msgid "Renumbering data is specified incorrectly"
#~ msgstr ""

#~ msgid "Renumbering will result in invalid labels"
#~ msgstr ""

#~ msgid "Renumbering will result in conflicting labels"
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.renumberNode on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partrenumbernodepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A MeshNodeArray or a tuple or list"
#~ " of MeshNode objects, or a Set "
#~ "containing nodes to be renumbered. If"
#~ " unspecified, all nodes in the part"
#~ " will be renumbered."
#~ msgstr ""

#~ msgid ""
#~ "A positive Int specifying the new "
#~ "label for the first node in "
#~ "**nodes**."
#~ msgstr ""

#~ msgid ""
#~ "A positive Int specifying the increment"
#~ " used for computation of new labels"
#~ " for all consecutive nodes in "
#~ "**nodes**."
#~ msgstr ""

#~ msgid "An Int by which existing labels of the specified nodes will be offset."
#~ msgstr ""

#~ msgid ""
#~ "A list of labels for the specified"
#~ " nodes. The length of this list "
#~ "must match the number of specified "
#~ "nodes."
#~ msgstr ""

#~ msgid ""
#~ "Renumbering can be applied to orphan "
#~ "mesh parts only, Renumbering is "
#~ "attempted on a native part."
#~ msgstr ""

#~ msgid "Renumbering data is specified incorrectly."
#~ msgstr ""

#~ msgid "Renumbering will result in invalid labels."
#~ msgstr ""

#~ msgid "Renumbering will result in conflicting labels."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.setElementSize on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partsetelementsizepyc>`__."
#~ msgstr ""

#~ msgid "A Float specifying the desired element size."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.splitElement on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partsplitelementpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.splitMeshEdge on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partsplitmeshedgepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the normalized "
#~ "distance along **edge** at which to "
#~ "split. Possible values are 0.0 < "
#~ "**parameter** < 1.0. The default value"
#~ " is 0.5."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.subdivideElement on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partsubdivideelementpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A MeshElementArray, a list of "
#~ "MeshElement objects, a Set, or a "
#~ "list of Set objects containing the "
#~ "elements to be subdivided. By default"
#~ " all the elements of the part "
#~ "are subdivided."
#~ msgstr ""

#~ msgid ""
#~ "An Int specifying the number of "
#~ "resulting elements for each input "
#~ "element in each direction of the "
#~ "subdivision. If **face** or **edge** are"
#~ " not specified, elements will be "
#~ "subdivided according to this number in"
#~ " all possible directions. Must be "
#~ "greater than one. Default is 2."
#~ msgstr ""

#~ msgid ""
#~ "A MeshFace object that serves as a"
#~ " reference for indicating two topological"
#~ " directions for the subdivision operation."
#~ " Must be a face of one of "
#~ "the specified elements, and all "
#~ "specified elements must be reachable by"
#~ " topological navigation from this element"
#~ " face. May not be combined with "
#~ "**edge**."
#~ msgstr ""

#~ msgid ""
#~ "A MeshEdge object that serves as a"
#~ " reference for indicating a single "
#~ "topological direction for the subdivision "
#~ "operation. Must be an edge of one"
#~ " of the specified elements, and all"
#~ " specified elements must be reachable "
#~ "by topological navigation from this "
#~ "element edge. May not be combined "
#~ "with **face**."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.swapMeshEdge on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partswapmeshedgepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "An edit mesh undo action must be"
#~ " available for the part. This implies"
#~ " that prior to executing an edit "
#~ "mesh command on the part, the user"
#~ " enabled edit mesh undo with a "
#~ "sufficient cache allowance to store the"
#~ " edit mesh operation."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditPart.wrapMesh on help.3ds.com/2021"
#~ " "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partwrapmeshpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the radius of "
#~ "the cylinder about which the part "
#~ "is to be wrapped. The wrapping "
#~ "procedure will relocate a node at "
#~ "point (xx, yy) on the planar mesh"
#~ " to (x,θ,zx,θ,z), where rr is the "
#~ "specified radius, θθ = xrxr, and "
#~ "zz=yy."
#~ msgstr ""

#~ msgid "Bases: :py:class:`object`"
#~ msgstr ""

#~ msgid ""
#~ "The MeshEditOptions object stores settings "
#~ "that specify the behavior when editing"
#~ " meshes on parts or part instances."
#~ " The MeshEditOptions object has no "
#~ "constructor. Abaqus creates the "
#~ "**MeshEditOptions** member when a session "
#~ "is started."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditOptions on help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-mesheditoptionspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "This method modifies the MeshEditOptions object."
#~ msgstr ""

#~ msgid ""
#~ "Check `MeshEditOptions.setValues on "
#~ "help.3ds.com/2021 "
#~ "<https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-mesheditoptionspyc.htm?contextscope=all"
#~ "#simaker-mesheditoptionssetvaluespyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the maximum allowable"
#~ " mesh edit undo cache size in "
#~ "millions of elements. If this value "
#~ "is set to at least the number "
#~ "of elements on a given part or "
#~ "part instance, at least one level "
#~ "of undo/redo capability is assured for"
#~ " subsequent mesh edit operations on "
#~ "that part or part instance. The "
#~ "default value is 0.0."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether undo/redo "
#~ "of mesh edit operations will be "
#~ "enabled. If **enableUndo** =OFF any "
#~ "existing cache for undo/redo operations "
#~ "will be cleared for all parts and"
#~ " assemblies in all models. The "
#~ "default value is OFF."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying the suspension of"
#~ " undo/redo for mesh edit operations. "
#~ "When undo/redo is suspended, undo/redo "
#~ "will not be available after subsequent"
#~ " mesh edit operations on a given "
#~ "part or part instances. Any pre-"
#~ "existing cache for mesh edit operations"
#~ " on other parts or assemblies in "
#~ "any model will be unaffected. The "
#~ "default value is OFF.If you change "
#~ "the value of **enableUndo** to True, "
#~ "Abaqus sets **_suspendUndo** to False."
#~ msgstr ""

#~ msgid "Bases: :py:class:`~abaqus.Mesh.MeshNode.MeshNode`"
#~ msgstr ""

#~ msgid "This method creates a node on an orphan mesh part."
#~ msgstr ""

#~ msgid "This function can be accessed by::"
#~ msgstr ""

#~ msgid "A sequence of three Floats specifying the coordinates of the new node."
#~ msgstr ""

#~ msgid "An Int specifying the node label."
#~ msgstr ""

#~ msgid "Returns"
#~ msgstr ""

#~ msgid "**node** -- A MeshNode object"
#~ msgstr ""

#~ msgid "Return type"
#~ msgstr ""

#~ msgid ":class:`MeshNode`"
#~ msgstr ""

