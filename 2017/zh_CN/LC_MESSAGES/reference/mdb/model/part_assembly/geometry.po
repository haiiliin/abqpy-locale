# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, WANG Hailin
# This file is distributed under the same license as the abqpy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abqpy \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-06 02:35+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.0\n"

#: ../../../reference/mdb/model/part_assembly/geometry.md:1
msgid "Basic Geometry"
msgstr ""

#: ../../../reference/mdb/model/part_assembly/geometry.md:3
msgid ""
"The basic geometry commands create geometric entities that are referenced "
"by Part objects, Instance objects, and GeometrySet objects."
msgstr ""

#: ../../../reference/mdb/model/part_assembly/geometry.md:5
msgid "Other Classes"
msgstr ""

#: abaqus.BasicGeometry.BasicGeometryPart.BasicGeometryPart:1 of
msgid "Bases: :py:class:`~abaqus.Part.PartBase.PartBase`"
msgstr ""

#: abaqus.BasicGeometry.BasicGeometryPart.BasicGeometryPart:1
#: abaqus.BasicGeometry.Cell.Cell:1 abaqus.BasicGeometry.CellArray.CellArray:1
#: abaqus.BasicGeometry.Edge.Edge:1 abaqus.BasicGeometry.EdgeArray.EdgeArray:1
#: abaqus.BasicGeometry.Face.Face:1 abaqus.BasicGeometry.FaceArray.FaceArray:1
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge:1
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray:1
#: abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex:1
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray:1
#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint:1
#: abaqus.BasicGeometry.ModelDot.ModelDot:1
#: abaqus.BasicGeometry.ReferencePoint.ReferencePoint:1
#: abaqus.BasicGeometry.ReferencePoints.ReferencePoints:1
#: abaqus.BasicGeometry.Transform.Transform:1
#: abaqus.BasicGeometry.Vertex.Vertex:1
#: abaqus.BasicGeometry.VertexArray.VertexArray:1 of
msgid "Member Details:"
msgstr ""

#: abaqus.BasicGeometry.BasicGeometryPart.BasicGeometryPart.InterestingPoint:1
#: of
msgid ""
"This method creates an interesting point along an edge. An "
"InterestingPoint is a temporary object."
msgstr ""

#: abaqus.BasicGeometry.BasicGeometryPart.BasicGeometryPart.InterestingPoint:3
#: abaqus.BasicGeometry.BasicGeometryPart.BasicGeometryPart.InterestingPoint:9
#: abaqus.BasicGeometry.Cell.Cell:3 abaqus.BasicGeometry.Cell.Cell:21
#: abaqus.BasicGeometry.Cell.Cell.getSize:3
#: abaqus.BasicGeometry.CellArray.CellArray:3
#: abaqus.BasicGeometry.CellArray.CellArray:21
#: abaqus.BasicGeometry.CellArray.CellArray.findAt:10
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:3
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder:3
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere:3
#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask:5
#: abaqus.BasicGeometry.Edge.Edge:3 abaqus.BasicGeometry.Edge.Edge:32
#: abaqus.BasicGeometry.Edge.Edge.getCurvature:3
#: abaqus.BasicGeometry.Edge.Edge.getEdgesByEdgeAngle:4
#: abaqus.BasicGeometry.Edge.Edge.getSize:3
#: abaqus.BasicGeometry.EdgeArray.EdgeArray:4
#: abaqus.BasicGeometry.EdgeArray.EdgeArray:33
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt:10
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:3
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder:3
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere:3
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest:4
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask:5
#: abaqus.BasicGeometry.Face.Face:3 abaqus.BasicGeometry.Face.Face:30
#: abaqus.BasicGeometry.Face.Face.getCurvature:3
#: abaqus.BasicGeometry.Face.Face.getElementFaces:4
#: abaqus.BasicGeometry.Face.Face.getFacesByFaceAngle:4
#: abaqus.BasicGeometry.Face.Face.getNodes:4
#: abaqus.BasicGeometry.Face.Face.getNormal:5
#: abaqus.BasicGeometry.Face.Face.getSize:3
#: abaqus.BasicGeometry.FaceArray.FaceArray:4
#: abaqus.BasicGeometry.FaceArray.FaceArray:31
#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:10
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:3
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder:3
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere:3
#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest:4
#: abaqus.BasicGeometry.FaceArray.FaceArray.getSequenceFromMask:5
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge:4
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge:13
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature:3
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getSize:3
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray:4
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray:13
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt:11
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest:4
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getSequenceFromMask:5
#: abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex:4
#: abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex:13
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray:4
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray:13
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt:9
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest:4
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getSequenceFromMask:5
#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint:10
#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint:16
#: abaqus.BasicGeometry.ModelDot.ModelDot:4
#: abaqus.BasicGeometry.ReferencePoint.ReferencePoint:4
#: abaqus.BasicGeometry.ReferencePoint.ReferencePoint:24
#: abaqus.BasicGeometry.Transform.Transform:5
#: abaqus.BasicGeometry.Transform.Transform:11
#: abaqus.BasicGeometry.Vertex.Vertex:3 abaqus.BasicGeometry.Vertex.Vertex:23
#: abaqus.BasicGeometry.VertexArray.VertexArray:4
#: abaqus.BasicGeometry.VertexArray.VertexArray:24
#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt:9
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:3
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder:3
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere:3
#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest:4
#: abaqus.BasicGeometry.VertexArray.VertexArray.getSequenceFromMask:5 of
msgid "Note"
msgstr ""

#: abaqus.BasicGeometry.BasicGeometryPart.BasicGeometryPart.InterestingPoint:4
#: of
msgid "This function can be accessed by::"
msgstr ""

#: abaqus.BasicGeometry.BasicGeometryPart.BasicGeometryPart.InterestingPoint:10
#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint:17 of
msgid ""
"Check `InterestingPoint on help.3ds.com/2017 <https://help.3ds.com/2017/En"
"glish/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"interestingpointpyc.htm?contextscope=all>`__."
msgstr ""

#: abaqus.BasicGeometry.BasicGeometryPart.BasicGeometryPart.InterestingPoint
#: abaqus.BasicGeometry.Cell.Cell.getSize
#: abaqus.BasicGeometry.CellArray.CellArray.findAt
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere
#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask
#: abaqus.BasicGeometry.Edge.Edge.getCurvature
#: abaqus.BasicGeometry.Edge.Edge.getEdgesByEdgeAngle
#: abaqus.BasicGeometry.Edge.Edge.getSize
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask
#: abaqus.BasicGeometry.Face.Face.getCurvature
#: abaqus.BasicGeometry.Face.Face.getElementFaces
#: abaqus.BasicGeometry.Face.Face.getFacesByFaceAngle
#: abaqus.BasicGeometry.Face.Face.getNodes
#: abaqus.BasicGeometry.Face.Face.getNormal
#: abaqus.BasicGeometry.Face.Face.getSize
#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere
#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest
#: abaqus.BasicGeometry.FaceArray.FaceArray.getSequenceFromMask
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getSize
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getSequenceFromMask
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getSequenceFromMask
#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere
#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest
#: abaqus.BasicGeometry.VertexArray.VertexArray.getSequenceFromMask of
msgid "Parameters"
msgstr ""

#: abaqus.BasicGeometry.BasicGeometryPart.BasicGeometryPart.InterestingPoint:13
#: of
msgid ""
"An Edge object specifying the edge on which the interesting point is "
"positioned."
msgstr ""

#: abaqus.BasicGeometry.BasicGeometryPart.BasicGeometryPart.InterestingPoint:15
#: of
msgid ""
"A SymbolicConstant specifying the position of the interesting point. "
"Possible values are MIDDLE or CENTER."
msgstr ""

#: abaqus.BasicGeometry.BasicGeometryPart.BasicGeometryPart.InterestingPoint
#: abaqus.BasicGeometry.Cell.Cell.getAdjacentCells
#: abaqus.BasicGeometry.Cell.Cell.getEdges
#: abaqus.BasicGeometry.Cell.Cell.getElements
#: abaqus.BasicGeometry.Cell.Cell.getFaces
#: abaqus.BasicGeometry.Cell.Cell.getNodes
#: abaqus.BasicGeometry.Cell.Cell.getSize
#: abaqus.BasicGeometry.Cell.Cell.getVertices
#: abaqus.BasicGeometry.CellArray.CellArray.findAt
#: abaqus.BasicGeometry.CellArray.CellArray.getBoundingBox
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere
#: abaqus.BasicGeometry.CellArray.CellArray.getMask
#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask
#: abaqus.BasicGeometry.Edge.Edge.getAdjacentEdges
#: abaqus.BasicGeometry.Edge.Edge.getCurvature
#: abaqus.BasicGeometry.Edge.Edge.getEdgesByEdgeAngle
#: abaqus.BasicGeometry.Edge.Edge.getElements
#: abaqus.BasicGeometry.Edge.Edge.getFaces
#: abaqus.BasicGeometry.Edge.Edge.getNodes
#: abaqus.BasicGeometry.Edge.Edge.getRadius
#: abaqus.BasicGeometry.Edge.Edge.getSize
#: abaqus.BasicGeometry.Edge.Edge.getVertices
#: abaqus.BasicGeometry.Edge.Edge.isTangentFlipped
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getBoundingBox
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getMask
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask
#: abaqus.BasicGeometry.Face.Face.getAdjacentFaces
#: abaqus.BasicGeometry.Face.Face.getCells
#: abaqus.BasicGeometry.Face.Face.getCentroid
#: abaqus.BasicGeometry.Face.Face.getCurvature
#: abaqus.BasicGeometry.Face.Face.getEdges
#: abaqus.BasicGeometry.Face.Face.getElementFaces
#: abaqus.BasicGeometry.Face.Face.getElements
#: abaqus.BasicGeometry.Face.Face.getFacesByCurvature
#: abaqus.BasicGeometry.Face.Face.getFacesByFaceAngle
#: abaqus.BasicGeometry.Face.Face.getNodes
#: abaqus.BasicGeometry.Face.Face.getNormal
#: abaqus.BasicGeometry.Face.Face.getSize
#: abaqus.BasicGeometry.Face.Face.getVertices
#: abaqus.BasicGeometry.Face.Face.isNormalFlipped
#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt
#: abaqus.BasicGeometry.FaceArray.FaceArray.getBoundingBox
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere
#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest
#: abaqus.BasicGeometry.FaceArray.FaceArray.getMask
#: abaqus.BasicGeometry.FaceArray.FaceArray.getSequenceFromMask
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getRadius
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getSize
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getMask
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getSequenceFromMask
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getMask
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getSequenceFromMask
#: abaqus.BasicGeometry.Transform.Transform.matrix
#: abaqus.BasicGeometry.Vertex.Vertex.getEdges
#: abaqus.BasicGeometry.Vertex.Vertex.getElements
#: abaqus.BasicGeometry.Vertex.Vertex.getNodes
#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt
#: abaqus.BasicGeometry.VertexArray.VertexArray.getBoundingBox
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere
#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest
#: abaqus.BasicGeometry.VertexArray.VertexArray.getMask
#: abaqus.BasicGeometry.VertexArray.VertexArray.getSequenceFromMask of
msgid "Returns"
msgstr ""

#: abaqus.BasicGeometry.BasicGeometryPart.BasicGeometryPart.InterestingPoint:18
#: of
msgid "An InterestingPoint object."
msgstr ""

#: abaqus.BasicGeometry.BasicGeometryPart.BasicGeometryPart.InterestingPoint
#: abaqus.BasicGeometry.Cell.Cell.getAdjacentCells
#: abaqus.BasicGeometry.Cell.Cell.getEdges
#: abaqus.BasicGeometry.Cell.Cell.getElements
#: abaqus.BasicGeometry.Cell.Cell.getFaces
#: abaqus.BasicGeometry.Cell.Cell.getNodes
#: abaqus.BasicGeometry.Cell.Cell.getSize
#: abaqus.BasicGeometry.Cell.Cell.getVertices
#: abaqus.BasicGeometry.CellArray.CellArray.findAt
#: abaqus.BasicGeometry.CellArray.CellArray.getBoundingBox
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere
#: abaqus.BasicGeometry.CellArray.CellArray.getMask
#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask
#: abaqus.BasicGeometry.Edge.Edge.getAdjacentEdges
#: abaqus.BasicGeometry.Edge.Edge.getCurvature
#: abaqus.BasicGeometry.Edge.Edge.getEdgesByEdgeAngle
#: abaqus.BasicGeometry.Edge.Edge.getElements
#: abaqus.BasicGeometry.Edge.Edge.getFaces
#: abaqus.BasicGeometry.Edge.Edge.getNodes
#: abaqus.BasicGeometry.Edge.Edge.getRadius
#: abaqus.BasicGeometry.Edge.Edge.getSize
#: abaqus.BasicGeometry.Edge.Edge.getVertices
#: abaqus.BasicGeometry.Edge.Edge.isTangentFlipped
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getBoundingBox
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getMask
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask
#: abaqus.BasicGeometry.Face.Face.getAdjacentFaces
#: abaqus.BasicGeometry.Face.Face.getCells
#: abaqus.BasicGeometry.Face.Face.getCentroid
#: abaqus.BasicGeometry.Face.Face.getCurvature
#: abaqus.BasicGeometry.Face.Face.getElementFaces
#: abaqus.BasicGeometry.Face.Face.getElements
#: abaqus.BasicGeometry.Face.Face.getFacesByCurvature
#: abaqus.BasicGeometry.Face.Face.getFacesByFaceAngle
#: abaqus.BasicGeometry.Face.Face.getNodes
#: abaqus.BasicGeometry.Face.Face.getNormal
#: abaqus.BasicGeometry.Face.Face.getSize
#: abaqus.BasicGeometry.Face.Face.getVertices
#: abaqus.BasicGeometry.Face.Face.isNormalFlipped
#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt
#: abaqus.BasicGeometry.FaceArray.FaceArray.getBoundingBox
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere
#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest
#: abaqus.BasicGeometry.FaceArray.FaceArray.getMask
#: abaqus.BasicGeometry.FaceArray.FaceArray.getSequenceFromMask
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getRadius
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getSize
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getMask
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getSequenceFromMask
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getMask
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getSequenceFromMask
#: abaqus.BasicGeometry.Transform.Transform.matrix
#: abaqus.BasicGeometry.Vertex.Vertex.getEdges
#: abaqus.BasicGeometry.Vertex.Vertex.getElements
#: abaqus.BasicGeometry.Vertex.Vertex.getNodes
#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt
#: abaqus.BasicGeometry.VertexArray.VertexArray.getBoundingBox
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere
#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest
#: abaqus.BasicGeometry.VertexArray.VertexArray.getMask
#: abaqus.BasicGeometry.VertexArray.VertexArray.getSequenceFromMask of
msgid "Return type"
msgstr ""

#: abaqus.BasicGeometry.BasicGeometryPart.BasicGeometryPart.InterestingPoint:19
#: of
msgid ":class:`InterestingPoint`"
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell:1 abaqus.BasicGeometry.Edge.Edge:1
#: abaqus.BasicGeometry.Face.Face:1
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge:1
#: abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex:1
#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint:1
#: abaqus.BasicGeometry.ModelDot.ModelDot:1
#: abaqus.BasicGeometry.ReferencePoint.ReferencePoint:1
#: abaqus.BasicGeometry.Transform.Transform:1
#: abaqus.BasicGeometry.Vertex.Vertex:1 of
msgid "Bases: :py:class:`object`"
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge:1 of
msgid "Edges are one-dimensional regions of geometry."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell:4 abaqus.BasicGeometry.CellArray.CellArray:4
#: abaqus.BasicGeometry.Edge.Edge:4 abaqus.BasicGeometry.EdgeArray.EdgeArray:5
#: abaqus.BasicGeometry.Face.Face:4 abaqus.BasicGeometry.FaceArray.FaceArray:5
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge:5
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray:5
#: abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex:5
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray:5
#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint:11
#: abaqus.BasicGeometry.ReferencePoint.ReferencePoint:5
#: abaqus.BasicGeometry.Transform.Transform:6
#: abaqus.BasicGeometry.Vertex.Vertex:4
#: abaqus.BasicGeometry.VertexArray.VertexArray:5 of
msgid "This object can be accessed by::"
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge:33 of
msgid ""
"Check `Edge on help.3ds.com/2017 <https://help.3ds.com/2017/English/DSSIMU"
"LIA_Established/SIMACAEKERRefMap/simaker-c-"
"edgepyc.htm?contextscope=all>`__."
msgstr ""

#: ../../../../docstring
#: abaqus.BasicGeometry.InterestingPoint.Edge.featureName:1 of
msgid ""
"A tuple of Floats specifying the name of the feature that created this "
"edge."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getAdjacentEdges:1 of
msgid ""
"This method returns an array of Edge objects that share at least one "
"vertex of the edge."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getAdjacentEdges:3
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:19
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder:15
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere:11 of
msgid "An EdgeArray object, which is a sequence of Edge objects."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getAdjacentEdges:4
#: abaqus.BasicGeometry.Edge.Edge.getEdgesByEdgeAngle:11
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:20
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder:16
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere:12 of
msgid ":class:`EdgeArray`"
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getCurvature:1 of
msgid "This method returns curvature information at a location on the edge."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getCurvature:4 of
msgid ""
"Check `Edge.getCurvature on help.3ds.com/2017 <https://help.3ds.com/2017/E"
"nglish/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"edgepyc.htm?contextscope=all#simaker-edgegetcurvaturepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getCurvature:7 of
msgid ""
"A Float specifying the normalized parameter location on the edge where the"
" curvature is to be computed. This argument is mutually exclusive with the"
" argument **point**."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getCurvature:10 of
msgid ""
"A tuple of **X**, **Y**, and **Z** coordinates of a point at which the "
"curvature is to be computed. If **point** does not lie on the edge an "
"attempt is made to project it onto the edge and use the projected point."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getCurvature:14 of
msgid ""
"A dictionary with keys 'evaluationPoint', 'curvature', 'radius', and "
"'tangent', where 'evaluationPoint' specifies the location at which the "
"curvature was computed; 'curvature' specifies the curvature vector at that"
" location; 'radius' is the radius of curvature; and 'tangent' specifies "
"the tangent to the edge at that location."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getCurvature:18
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest:27
#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest:27
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature:19
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest:27
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest:27
#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest:27 of
msgid ":class:`dict`"
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask
#: abaqus.BasicGeometry.Edge.Edge.getCurvature
#: abaqus.BasicGeometry.Edge.Edge.getRadius
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask
#: abaqus.BasicGeometry.Face.Face.getNormal
#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getRadius
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest
#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest of
msgid "Raises"
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getEdgesByEdgeAngle:1 of
msgid ""
"This method returns an array of Edge objects that are obtained by "
"recursively finding adjacent edges that are at an angle of less than or "
"equal to the specified face angle."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getEdgesByEdgeAngle:5 of
msgid ""
"Check `Edge.getEdgesByEdgeAngle on help.3ds.com/2017 <https://help.3ds.com"
"/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"edgepyc.htm?contextscope=all#simaker-edgegetedgesbyedgeanglepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getEdgesByEdgeAngle:8 of
msgid "A float specifying the value of the face angle in degrees."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getEdgesByEdgeAngle:10 of
msgid "An EdgeArray object, which is a sequence of Edgeobjects."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getElements:1 of
msgid ""
"This method returns an array of element objects that are associated with "
"the edge."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getElements:3
#: abaqus.BasicGeometry.Edge.Edge.getElements:3
#: abaqus.BasicGeometry.Face.Face.getElements:3
#: abaqus.BasicGeometry.Vertex.Vertex.getElements:3 of
msgid ""
"A MeshElementArray object which is a sequence of MeshElement objects."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getElements:4
#: abaqus.BasicGeometry.Edge.Edge.getElements:4
#: abaqus.BasicGeometry.Face.Face.getElements:4
#: abaqus.BasicGeometry.Vertex.Vertex.getElements:4 of
msgid ":class:`MeshElementArray`"
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getFaces:1 of
msgid ""
"This method returns a sequence consisting of the face ids of the faces "
"which share this edge."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getEdges:3
#: abaqus.BasicGeometry.Cell.Cell.getFaces:3
#: abaqus.BasicGeometry.Cell.Cell.getVertices:3
#: abaqus.BasicGeometry.Edge.Edge.getFaces:3
#: abaqus.BasicGeometry.Edge.Edge.getVertices:6
#: abaqus.BasicGeometry.Face.Face.getCells:3
#: abaqus.BasicGeometry.Face.Face.getVertices:3
#: abaqus.BasicGeometry.Vertex.Vertex.getEdges:3 of
msgid "A tuple of integers."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getFaces:4
#: abaqus.BasicGeometry.Edge.Edge.getVertices:7
#: abaqus.BasicGeometry.Vertex.Vertex.getEdges:4 of
msgid ":class:`tuple[int]`"
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getNodes:1 of
msgid ""
"This method returns an array of node objects that are associated with the "
"edge."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getNodes:3 of
msgid "A MeshNodeArray object, which is a sequence of MeshNode objects."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getNodes:4
#: abaqus.BasicGeometry.Edge.Edge.getNodes:4
#: abaqus.BasicGeometry.Face.Face.getNodes:15
#: abaqus.BasicGeometry.Vertex.Vertex.getNodes:4 of
msgid ":class:`MeshNodeArray`"
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getRadius:1 of
msgid "This method returns the radius of circular edges."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getRadius:3
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getRadius:3 of
msgid "A Float specifying the radius."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getSize:11
#: abaqus.BasicGeometry.Edge.Edge.getRadius:4
#: abaqus.BasicGeometry.Edge.Edge.getSize:10
#: abaqus.BasicGeometry.Face.Face.getSize:10
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getRadius:4
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getSize:10 of
msgid ":class:`float`"
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getSize:1
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getSize:1 of
msgid "This method returns a Float indicating the length of the edge."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getSize:4 of
msgid ""
"Check `Edge.getSize on help.3ds.com/2017 <https://help.3ds.com/2017/Englis"
"h/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"edgepyc.htm?contextscope=all#simaker-edgegetsizepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getSize:7
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getSize:7 of
msgid ""
"A Bool specifying whether verbose output is printed. The default is True."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getSize:10
#: abaqus.BasicGeometry.Edge.Edge.getSize:9
#: abaqus.BasicGeometry.Face.Face.getSize:9
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getSize:9 of
msgid "A Float."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getVertices:1 of
msgid ""
"This method returns a sequence of indices of the vertices that bound this "
"edge. The first index refers to the vertex where the normalized curve "
"parameter = 0.0, and the second index refers to the vertex where the "
"normalized curve parameter = 1.0. If the edge is a closed curve, only one "
"vertex index is returned."
msgstr ""

#: ../../../../docstring abaqus.BasicGeometry.InterestingPoint.Edge.index:1 of
msgid "An Int specifying the index of the edge in the EdgeArray."
msgstr ""

#: ../../../../docstring
#: abaqus.BasicGeometry.InterestingPoint.Edge.instanceName:1 of
msgid ""
"A tuple of Floats specifying the name of the part instance for this edge "
"(if applicable)."
msgstr ""

#: ../../../../docstring
#: abaqus.BasicGeometry.InterestingPoint.Edge.isReferenceRep:1 of
msgid ""
"A Boolean specifying whether the edge belongs to the reference "
"representation of the Part or Instance."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.isTangentFlipped:1 of
msgid ""
"This method determines whether the tangent to the edge is flipped from its"
" default direction by the use of the flipTangent method on a Part object."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.isTangentFlipped:4 of
msgid "A Boolean value of True if the tangent is flipped and False if not."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.isTangentFlipped:5
#: abaqus.BasicGeometry.Face.Face.isNormalFlipped:5 of
msgid ":class:`Boolean`"
msgstr ""

#: ../../../../docstring
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdge.pointOn:1
#: abaqus.BasicGeometry.InterestingPoint.Edge.pointOn:1 of
msgid ""
"A tuple of Floats specifying the **X**, **Y**, and **Z** coordinates of a "
"point located on the edge."
msgstr ""

#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint:1 of
msgid "Interesting points can be located at the following:"
msgstr ""

#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint:3 of
msgid "The middle of an edge."
msgstr ""

#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint:4 of
msgid "The middle of an arc."
msgstr ""

#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint:5 of
msgid "The center of an arc."
msgstr ""

#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint:7 of
msgid ""
"An InterestingPoint object is a temporary object and cannot be accessed "
"from the Mdb object."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell:1 of
msgid "Cells are volumetric regions of geometry."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell:22 of
msgid ""
"Check `Cell on help.3ds.com/2017 <https://help.3ds.com/2017/English/DSSIMU"
"LIA_Established/SIMACAEKERRefMap/simaker-c-"
"cellpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../../../docstring abaqus.BasicGeometry.CellArray.Cell.featureName:1 of
msgid ""
"A tuple of Floats specifying the name of the feature that created this "
"cell."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getAdjacentCells:1 of
msgid ""
"This method returns an array of cell objects that share at least one face "
"of the cell."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getAdjacentCells:3 of
msgid "A CellArray object which is a sequence of Cell objects."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getAdjacentCells:4
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:20
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder:16
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere:12 of
msgid ":class:`CellArray`"
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getEdges:1 of
msgid ""
"This method returns a sequence consisting of the edge IDs of the edges on "
"the cell."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getEdges:4
#: abaqus.BasicGeometry.Cell.Cell.getFaces:4
#: abaqus.BasicGeometry.Cell.Cell.getVertices:4
#: abaqus.BasicGeometry.Face.Face.getCells:4
#: abaqus.BasicGeometry.Face.Face.getEdges:3
#: abaqus.BasicGeometry.Face.Face.getVertices:4 of
msgid ":class:`Sequence[int]`"
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getElements:1 of
msgid ""
"This method returns an array of element objects that are associated with "
"the cell."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getFaces:1 of
msgid ""
"This method returns a sequence consisting of the face IDs of the faces "
"which bound the cell."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getNodes:1 of
msgid ""
"This method returns an array of node objects that are associated with the "
"cell."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getNodes:3
#: abaqus.BasicGeometry.Face.Face.getNodes:14
#: abaqus.BasicGeometry.Vertex.Vertex.getNodes:3 of
msgid "A MeshNodeArray object which is a sequence of MeshNode objects."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getSize:1 of
msgid "This method returns a Float indicating the volume of the cell."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getSize:4 of
msgid ""
"Check `Cell.getSize on help.3ds.com/2017 <https://help.3ds.com/2017/Englis"
"h/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"cellpyc.htm?contextscope=all#simaker-cellgetsizepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getSize:7 of
msgid ""
"A Boolean that determines whether a verbose output is to be printed. The "
"default is True."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getVertices:1 of
msgid ""
"This method returns a sequence consisting of the vertex IDs of the "
"vertices on the cell."
msgstr ""

#: ../../../../docstring abaqus.BasicGeometry.CellArray.Cell.index:1 of
msgid "An Int specifying the index of the cell in the CellArray."
msgstr ""

#: ../../../../docstring abaqus.BasicGeometry.CellArray.Cell.instanceName:1 of
msgid ""
"A tuple of Floats specifying the name of the part instance for this cell "
"(if applicable)."
msgstr ""

#: ../../../../docstring abaqus.BasicGeometry.CellArray.Cell.isReferenceRep:1
#: of
msgid ""
"A Boolean specifying whether the cell belongs to the reference "
"representation of the Part or Instance."
msgstr ""

#: ../../../../docstring abaqus.BasicGeometry.CellArray.Cell.pointOn:1 of
msgid ""
"A tuple of Floats specifying the **X**, **Y**, and **Z** coordinates of a "
"point located on the cell."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray:1 of
msgid ""
"Bases: :py:class:`~typing.List`\\ "
"[:py:class:`~abaqus.BasicGeometry.Cell.Cell`]"
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray:1 of
msgid "The CellArray is a sequence of Cell objects."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray:22 of
msgid ""
"Check `CellArray on help.3ds.com/2017 <https://help.3ds.com/2017/English/D"
"SSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"cellarraypyc.htm?contextscope=all>`__."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.findAt:1 of
msgid ""
"This method returns the object or objects in the CellArray located at the "
"given coordinates. findAt initially uses the ACIS tolerance of 1E-6. As a "
"result, findAt returns any entity that is at the arbitrary point specified"
" or at a distance of less than 1E-6 from the arbitrary point. If nothing "
"is found, findAt uses the tolerance for imprecise geometry (applicable "
"only for imprecise geometric entities). The arbitrary point must not be "
"shared by a second cell. If two cells intersect or coincide at the "
"arbitrary point, findAt chooses the first cell that it encounters, and you"
" should not rely on the return value being consistent. findAt will always "
"try to find objects among all the cells in the part or assembly instance "
"and will not restrict itself to a subset even if the CellArray represents "
"such subset."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.findAt:11 of
msgid ""
"Check `CellArray.findAt on help.3ds.com/2017 <https://help.3ds.com/2017/En"
"glish/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"cellarraypyc.htm?contextscope=all#simaker-cellarrayfindatpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.findAt:13 of
msgid ""
"A sequence of Floats specifying the **X**, **Y**, and **Z** coordinates of"
" the object to find. ``findAt`` returns either a Cell object or a sequence"
" of Cell objects based on the type of input.  * If **coordinates** is a "
"sequence of Floats, findAt returns the Cell object at that point.  * If "
"**coordinates** is a sequence of sequence of Floats, findAt returns a "
"sequence of Cell   objects at the given locations. The sequence of "
"sequence of Floats must be a sequence of   sequence of point and normal "
"data, not a sequence of point data. For example::      cells1 = "
"myCrackedBlockInstance.cells.findAt(((5.5, -8.3, 294.2),),"
"                                                  ((12.1, -8.3, 287.8),),"
"                                                  ((14.4, -10.4, "
"285.5),),)"
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.findAt:13 of
msgid ""
"A sequence of Floats specifying the **X**, **Y**, and **Z** coordinates of"
" the object to find. ``findAt`` returns either a Cell object or a sequence"
" of Cell objects based on the type of input."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.findAt:17 of
msgid ""
"If **coordinates** is a sequence of Floats, findAt returns the Cell object"
" at that point."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.findAt:19 of
msgid ""
"If **coordinates** is a sequence of sequence of Floats, findAt returns a "
"sequence of Cell objects at the given locations. The sequence of sequence "
"of Floats must be a sequence of sequence of point and normal data, not a "
"sequence of point data. For example::"
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.findAt:26
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt:25
#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:29
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt:26
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt:24
#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt:24 of
msgid ""
"A Boolean specifying whether a message is to be printed to the CLI if no "
"entity is found at the specified location. The default value is True."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.findAt:29 of
msgid "A Cell object."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.findAt:30
#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask:12 of
msgid ":class:`Cell`"
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getBoundingBox:1 of
msgid ""
"This method returns a dictionary of two tuples representing minimum and "
"maximum boundary values of the bounding box of the minimum size containing"
" the cell sequence."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getBoundingBox:4
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getBoundingBox:4
#: abaqus.BasicGeometry.VertexArray.VertexArray.getBoundingBox:4 of
msgid ""
"A Dictionary object with the following items:  - **low**: a tuple of three"
" floats representing the minimum **X** -, **Y** -, and **Z** -boundary   "
"values of the bounding box. - **high**: a tuple of three floats "
"representing the maximum **X** -, **Y** -, and **Z** -boundary   values of"
" the bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getBoundingBox:4
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getBoundingBox:4
#: abaqus.BasicGeometry.FaceArray.FaceArray.getBoundingBox:4
#: abaqus.BasicGeometry.VertexArray.VertexArray.getBoundingBox:4 of
msgid "A Dictionary object with the following items:"
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getBoundingBox:6
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getBoundingBox:6
#: abaqus.BasicGeometry.VertexArray.VertexArray.getBoundingBox:6 of
msgid ""
"**low**: a tuple of three floats representing the minimum **X** -, **Y** "
"-, and **Z** -boundary values of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getBoundingBox:8
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getBoundingBox:8
#: abaqus.BasicGeometry.VertexArray.VertexArray.getBoundingBox:8 of
msgid ""
"**high**: a tuple of three floats representing the maximum **X** -, **Y** "
"-, and **Z** -boundary values of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getBoundingBox:10
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getBoundingBox:10
#: abaqus.BasicGeometry.VertexArray.VertexArray.getBoundingBox:10 of
msgid ""
":class:`dict[str`, :class:`tuple[float`, :class:`float`, :class:`float]]`"
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:1 of
msgid ""
"This method returns an array of cell objects that lie within the specified"
" bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:4 of
msgid ""
"Check `CellArray.getByBoundingBox on help.3ds.com/2017 <https://help.3ds.c"
"om/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"cellarraypyc.htm?contextscope=all#simaker-"
"cellarraygetbyboundingboxpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:7
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:7
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:7
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:7 of
msgid "A float specifying the minimum **X** boundary of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:9
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:9
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:9
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:9 of
msgid "A float specifying the minimum **Y** boundary of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:11
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:11
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:11
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:11 of
msgid "A float specifying the minimum **Z** boundary of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:13
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:13
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:13
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:13 of
msgid "A float specifying the maximum **X** boundary of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:15
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:15
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:15
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:15 of
msgid "A float specifying the maximum **Y** boundary of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:17
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:17
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:17
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:17 of
msgid "A float specifying the maximum **Z** boundary of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:19
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder:15
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere:11 of
msgid "A CellArray object, which is a sequence of Cell objects."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder:1 of
msgid ""
"This method returns an array of cell objects that lie within the specified"
" bounding cylinder."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder:4 of
msgid ""
"Check `CellArray.getByBoundingCylinder on help.3ds.com/2017 <https://help."
"3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"cellarraypyc.htm?contextscope=all#simaker-"
"cellarraygetbyboundingcylinderpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder:7
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder:7
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder:7
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder:7 of
msgid ""
"A tuple of the **X**, **Y**, and **Z** coordinates of the center of the "
"first end of the cylinder."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder:10
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder:10
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder:10
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder:10 of
msgid ""
"A tuple of the **X**, **Y**, and **Z** coordinates of the center of the "
"second end of the cylinder."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder:13
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder:13
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder:13
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder:13 of
msgid "A float specifying the radius of the cylinder."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere:1 of
msgid ""
"This method returns an array of cell objects that lie within the specified"
" bounding sphere."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere:4 of
msgid ""
"Check `CellArray.getByBoundingSphere on help.3ds.com/2017 <https://help.3d"
"s.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"cellarraypyc.htm?contextscope=all#simaker-"
"cellarraygetbyboundingspherepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere:7
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere:7
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere:7
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere:7 of
msgid ""
"A tuple of the **X**, **Y**, and **Z** coordinates of the center of the "
"sphere."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere:9
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere:9
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere:9
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere:9 of
msgid "A float specifying the radius of the sphere."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getMask:1
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getMask:1
#: abaqus.BasicGeometry.FaceArray.FaceArray.getMask:1
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getMask:1
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getMask:1
#: abaqus.BasicGeometry.VertexArray.VertexArray.getMask:1 of
msgid "This method returns a string specifying the object or objects."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getMask:3
#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask:9
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getMask:3
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask:9
#: abaqus.BasicGeometry.FaceArray.FaceArray.getMask:3
#: abaqus.BasicGeometry.FaceArray.FaceArray.getSequenceFromMask:9
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getMask:3
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getSequenceFromMask:9
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getMask:3
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getSequenceFromMask:9
#: abaqus.BasicGeometry.VertexArray.VertexArray.getMask:3
#: abaqus.BasicGeometry.VertexArray.VertexArray.getSequenceFromMask:9 of
msgid "A String specifying the object or objects."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getMask:4
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getMask:4
#: abaqus.BasicGeometry.FaceArray.FaceArray.getMask:4
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getMask:4
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getMask:4
#: abaqus.BasicGeometry.VertexArray.VertexArray.getMask:4 of
msgid ":class:`str`"
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask:1 of
msgid ""
"This method returns the object or objects in the CellArray identified "
"using the specified **mask**. This command is generated when the "
"JournalOptions are set to COMPRESSEDINDEX. When large number of objects "
"are involved, this method is highly efficient."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask:6 of
msgid ""
"Check `CellArray.getSequenceFromMask on help.3ds.com/2017 <https://help.3d"
"s.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"cellarraypyc.htm?contextscope=all#simaker-"
"cellarraygetsequencefrommaskpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask:11 of
msgid "A Cell object or a sequence of Cell objects."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask:14
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask:14
#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest:29
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest:29
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest:29
#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest:29 of
msgid ""
"The mask results in an empty sequence, An exception occurs if the "
"resulting sequence is empty."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray:1 of
msgid ""
"Bases: :py:class:`~typing.List`\\ "
"[:py:class:`~abaqus.BasicGeometry.Edge.Edge`]"
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray:1 of
msgid ""
"The EdgeArray is a sequence of Edge objects. If the part is modified, then"
" EdgeArray must be updated for that part."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray:34 of
msgid ""
"Check `EdgeArray on help.3ds.com/2017 <https://help.3ds.com/2017/English/D"
"SSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"edgearraypyc.htm?contextscope=all>`__."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt:1 of
msgid ""
"This method returns the object or objects in the EdgeArray located at the "
"given coordinates. findAt initially uses the ACIS tolerance of 1E-6. As a "
"result, findAt returns any edge that is at the arbitrary point specified "
"or at a distance of less than 1E-6 from the arbitrary point. If nothing is"
" found, findAt uses the tolerance for imprecise geometry (applicable only "
"for imprecise geometric entities). The arbitrary point must not be shared "
"by a second edge. If two edges intersect or coincide at the arbitrary "
"point, findAt chooses the first edge that it encounters, and you should "
"not rely on the return value being consistent. findAt will always try to "
"find objects among all the edges in the part or assembly instance and will"
" not restrict itself to a subset even if the EdgeArray represents such "
"subset."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt:11 of
msgid ""
"Check `EdgeArray.findAt on help.3ds.com/2017 <https://help.3ds.com/2017/En"
"glish/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"edgearraypyc.htm?contextscope=all#simaker-edgearrayfindatpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt:13 of
msgid ""
"A sequence of Floats specifying the **X**, **Y**, and **Z** coordinates of"
" the object to find. findAt returns either an Edge object or a sequence of"
" Edge objects based on the type of input.  * If **coordinates** is a "
"sequence of Floats, findAt returns the Edge object at that point.  * If "
"you omit the **coordinates** keyword argument, findAt accepts as arguments"
" a sequence   of sequence of floats in the following format::      edges ="
" e.findAt(((20.19686, -169.513997, 27.798593), ),                      "
"((19.657627, -167.295749, 27.056402), ),                      ((18.274129,"
" -157.144741, 25.15218), ))"
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt:13 of
msgid ""
"A sequence of Floats specifying the **X**, **Y**, and **Z** coordinates of"
" the object to find. findAt returns either an Edge object or a sequence of"
" Edge objects based on the type of input."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt:17 of
msgid ""
"If **coordinates** is a sequence of Floats, findAt returns the Edge object"
" at that point."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt:19
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt:20
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt:18
#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt:18 of
msgid ""
"If you omit the **coordinates** keyword argument, findAt accepts as "
"arguments a sequence of sequence of floats in the following format::"
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt:28
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask:11 of
msgid "An Edge object or a sequence of Edge objects."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt:29
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask:12 of
msgid ":class:`Edge`"
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getBoundingBox:1 of
msgid ""
"This method returns a dictionary of two tuples representing minimum and "
"maximum boundary values of the bounding box of the minimum size containing"
" the edge sequence."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:1 of
msgid ""
"This method returns an array of edge objects that lie within the specified"
" bounding box."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:4 of
msgid ""
"Check `EdgeArray.getByBoundingBox on help.3ds.com/2017 <https://help.3ds.c"
"om/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"edgearraypyc.htm?contextscope=all#simaker-"
"edgearraygetbyboundingboxpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder:1 of
msgid ""
"This method returns an array of edge objects that lie within the specified"
" bounding cylinder."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder:4 of
msgid ""
"Check `EdgeArray.getByBoundingCylinder on help.3ds.com/2017 <https://help."
"3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"edgearraypyc.htm?contextscope=all#simaker-"
"edgearraygetbyboundingcylinderpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere:1 of
msgid ""
"This method returns an array of edge objects that lie within the specified"
" bounding sphere."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere:4 of
msgid ""
"Check `EdgeArray.getByBoundingSphere on help.3ds.com/2017 <https://help.3d"
"s.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"edgearraypyc.htm?contextscope=all#simaker-"
"edgearraygetbyboundingspherepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest:1 of
msgid ""
"This method returns an object or objects in the EdgeArray closest to the "
"given set of points, where the given points need not lie on the edges in "
"the EdgeArray."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest:5 of
msgid ""
"Check `EdgeArray.getClosest on help.3ds.com/2017 <https://help.3ds.com/201"
"7/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"edgearraypyc.htm?contextscope=all#simaker-edgearraygetclosestpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest:8 of
msgid ""
"A sequence of a sequence of floats, where each sequence of floats "
"describes the **X**, **Y**, and **Z**  coordinates of a point::      >>> "
"r=e.getClosest(coordinates=((20.0, 20.0, 10.0), (-1.0, -15.0, 15), ))     "
">>> r.keys()     [0, 1]     >>> r[0]     "
"(mdb.models['Model-1'].parts['Part-1'].edges[3], (15.7090625762939, 20.0, "
"10.0))"
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest:8 of
msgid ""
"A sequence of a sequence of floats, where each sequence of floats "
"describes the **X**, **Y**, and **Z**  coordinates of a point::"
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest:17
#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest:17
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest:17
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest:17
#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest:17 of
msgid ""
"A double specifying the distance within which the closest object must lie."
" The default value is half of the parent part/instance size."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest:20 of
msgid ""
"This method returns a dictionary object. The key to the dictionary object "
"is the position of the input point in the tuple specified in the "
"**coordinates** starting at index 0. If a closest edge could be found then"
" the value is a sequence consisting of two objects. The first object in "
"the sequence is an Edge that is close to the input point referred to by "
"the key. The second object in the sequence is a sequence of floats that "
"specifies the **X**, **Y**, and **Z**  location of the closest point on "
"the Edge to the given point. See program listing above."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask:1 of
msgid ""
"This method returns the object or objects in the EdgeArray identified "
"using the specified **mask**. This command is generated when the "
"JournalOptions are set to COMPRESSEDINDEX. When a large number of objects "
"are involved, this method is highly efficient."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask:6 of
msgid ""
"Check `EdgeArray.getSequenceFromMask on help.3ds.com/2017 <https://help.3d"
"s.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"edgearraypyc.htm?contextscope=all#simaker-"
"edgearraygetsequencefrommaskpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Face.Face:1 of
msgid "Faces are two-dimensional regions of geometry."
msgstr ""

#: abaqus.BasicGeometry.Face.Face:31 of
msgid ""
"Check `Face on help.3ds.com/2017 <https://help.3ds.com/2017/English/DSSIMU"
"LIA_Established/SIMACAEKERRefMap/simaker-c-"
"facepyc.htm?contextscope=all>`__."
msgstr ""

#: ../../../../docstring abaqus.BasicGeometry.FaceArray.Face.featureName:1 of
msgid ""
"A tuple of Floats specifying the name of the feature that created this "
"face."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getAdjacentFaces:1 of
msgid ""
"This method returns an array of face objects that share at least one edge "
"of the face."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getAdjacentFaces:3 of
msgid "A FaceArray object which is a sequence of Face objects."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getAdjacentFaces:4
#: abaqus.BasicGeometry.Face.Face.getFacesByCurvature:5
#: abaqus.BasicGeometry.Face.Face.getFacesByFaceAngle:11
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:20
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder:16
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere:12 of
msgid ":class:`FaceArray`"
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getCells:1 of
msgid ""
"This method returns a sequence consisting of the cell ids of the cells to "
"which this face belongs."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getCentroid:1 of
msgid "This method returns the centroid of a face."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getCentroid:3 of
msgid ""
"A sequence of Floats specifying the **X**, **Y**, and **Z** coordinates of"
" the centroid of the face."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getCentroid:5
#: abaqus.BasicGeometry.Face.Face.getNormal:15 of
msgid ":class:`Sequence[float]`"
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getCurvature:1 of
msgid ""
"This method returns information about the curvature at a location on the "
"face."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getCurvature:4 of
msgid ""
"Check `Face.getCurvature on help.3ds.com/2017 <https://help.3ds.com/2017/E"
"nglish/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"facepyc.htm?contextscope=all#simaker-facegetcurvaturepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getCurvature:7 of
msgid ""
"A tuple specifying the **X**, **Y**, and **Z** coordinates of the point "
"where the curvature is desired. If the **point** does not lie on the face "
"it will be projected onto the face. This argument and **uParam** and "
"**vParam** are mutually exclusive."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getCurvature:11 of
msgid ""
"A Float specifying the normalized **U** parameter value at which the "
"curvature is to be computed. This value must lie between (0,1). **vParam**"
" must also be specified. This argument is mutually exclusive with "
"**point**."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getCurvature:15 of
msgid ""
"A Float specifying the normalized **V** parameter value at which the "
"curvature is to be computed. This value must lie between (0,1)."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getCurvature:18 of
msgid ""
"A dictionary with keys 'evaluationPoint', 'principalAxis1', "
"'principalAxis2', 'curvature1', 'curvature2' and 'gaussianCurvature'. "
"Where the evaluationPoint specifies the location at which the curvature "
"was evaluated. 'principalAxis1' and 'principalAxis2' refer to the vectors "
"specifying the two principal axes of the face. 'curvature1' and "
"'curvature2' specify the curvatures along the two principal axes."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getCurvature:23 of
msgid ":class:`dict[str`, :class:`float]`"
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getEdges:1 of
msgid ""
"This method returns a sequence consisting of the edge ids of the edges on "
"the face."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getEdges:3 of
msgid "* :class:`Sequence[int]` * :class:`A tuple` of :class:`integers.`"
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getEdges:4 of
msgid ":class:`A tuple` of :class:`integers.`"
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getElementFaces:1 of
msgid ""
"This method returns an array of mesh face objects. Each mesh face object "
"contains the element label and the side of the element that lies on the "
"geometric face."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getElementFaces:5 of
msgid ""
"Check `Face.getElementFaces on help.3ds.com/2017 <https://help.3ds.com/201"
"7/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"facepyc.htm?contextscope=all#simaker-facegetelementfacespyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getElementFaces:8 of
msgid ""
"A symbolic constant specifying the side of the geometric face of a solid "
"from which the element faces should be retrieved. Possible values are "
"**SIDE1**, **SIDE2**, and **BOTH_SIDES**. The default value is "
"**BOTH_SIDES**. For shell faces this option is ignored."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getElementFaces:12 of
msgid "A MeshFaceArray object which is a sequence of MeshFace objects."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getElementFaces:13 of
msgid ":class:`MeshFaceArray`"
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getElements:1 of
msgid ""
"This method returns an array of element objects that are associated with "
"the face."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getFacesByCurvature:1 of
msgid ""
"This method returns an array of Face objects that are obtained by "
"recursively finding adjacent faces that share the same curvature."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getFacesByCurvature:4
#: abaqus.BasicGeometry.Face.Face.getFacesByFaceAngle:10
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:19
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder:15
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere:11 of
msgid "A FaceArray object, which is a sequence of Face objects."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getFacesByFaceAngle:1 of
msgid ""
"This method returns an array of Face objects that are obtained by "
"recursively finding adjacent faces that are at an angle of less than or "
"equal to the specified angle."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getFacesByFaceAngle:5 of
msgid ""
"Check `Face.getFacesByFaceAngle on help.3ds.com/2017 <https://help.3ds.com"
"/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"facepyc.htm?contextscope=all#simaker-facegetfacesbyfaceanglepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getFacesByFaceAngle:8 of
msgid "A float specifying the value of the face angle."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getNodes:1 of
msgid ""
"This method returns an array of mesh node objects. Each mesh node object "
"contains the label of the node that lies on the geometric face."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getNodes:5 of
msgid ""
"Check `Face.getNodes on help.3ds.com/2017 <https://help.3ds.com/2017/Engli"
"sh/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"facepyc.htm?contextscope=all#simaker-facegetnodespyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getNodes:8 of
msgid ""
"A symbolic constant specifying the side of the geometric face of a solid "
"from which the nodes should be retrieved. Possible values are xo*SIDE1*, "
"**SIDE2**, and **BOTH_SIDES**. The default value is **BOTH_SIDES**. For "
"shell faces and for faces with compatible meshes on either sides this "
"option is ignored. Otherwise, the nodes on the specified side(s) of the "
"face are output."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getNormal:1 of
msgid ""
"This method returns the normal to a face at the location specified by the "
"**pointOn** member. The normal at a different location on the face can be "
"obtained by specifying the optional **point** argument."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getNormal:6 of
msgid ""
"Check `Face.getNormal on help.3ds.com/2017 <https://help.3ds.com/2017/Engl"
"ish/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"facepyc.htm?contextscope=all#simaker-facegetnormalpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getNormal:9 of
msgid ""
"A tuple specifying the **X**, **Y**, and **Z** coordinates of the point "
"where the normal to the face is desired. If the **point** does not lie on "
"the face it will be projected onto the face."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getNormal:13 of
msgid ""
"A sequence of Floats specifying the **X**, **Y**, and **Z** components of "
"the normal to the face."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getSize:1 of
msgid "This method returns a Float indicating the area of the face."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getSize:4 of
msgid ""
"Check `Face.getSize on help.3ds.com/2017 <https://help.3ds.com/2017/Englis"
"h/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"facepyc.htm?contextscope=all#simaker-facegetsizepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getSize:7 of
msgid ""
"A Bool specifying whether verbose output is printed. The default value is "
"True."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getVertices:1 of
msgid ""
"This method returns a sequence consisting of the vertex ids of the "
"vertices of the face."
msgstr ""

#: ../../../../docstring abaqus.BasicGeometry.FaceArray.Face.index:1 of
msgid "An Int specifying the index of the face in the FaceArray."
msgstr ""

#: ../../../../docstring abaqus.BasicGeometry.FaceArray.Face.instanceName:1 of
msgid ""
"A tuple of Floats specifying the name of the part instance for this face "
"(if applicable)."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.isNormalFlipped:1 of
msgid ""
"This method determines whether the normal to the face is flipped from its "
"default direction by the use of the flipNormal method on a Part object."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.isNormalFlipped:4 of
msgid "A Boolean value of True if the normal is flipped and False if not."
msgstr ""

#: ../../../../docstring abaqus.BasicGeometry.FaceArray.Face.isReferenceRep:1
#: of
msgid ""
"A Boolean specifying whether the face belongs to the reference "
"representation of the Part or Instance."
msgstr ""

#: ../../../../docstring abaqus.BasicGeometry.FaceArray.Face.pointOn:1 of
msgid ""
"A tuple of tuples of Floats specifying the coordinates. For a face of a "
"shell **pointOn** specifies the **X**, **Y**, and **Z** coordinates of a "
"point located on the face and the **X**, **Y**, and **Z** components of "
"the normal to the face.For a face of a solid **pointOn** specifies the "
"**X**, **Y**, and **Z** coordinates of a point located on the face."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray:1 of
msgid ""
"Bases: :py:class:`~typing.List`\\ "
"[:py:class:`~abaqus.BasicGeometry.Face.Face`]"
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray:1 of
msgid ""
"The FaceArray is a sequence of Face objects. If the part is modified, then"
" FaceArray must be updated for that part."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray:32 of
msgid ""
"Check `FaceArray on help.3ds.com/2017 <https://help.3ds.com/2017/English/D"
"SSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"facearraypyc.htm?contextscope=all>`__."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:1 of
msgid ""
"This method returns the object or objects in the FaceArray located at the "
"given coordinates. findAt initially uses the ACIS tolerance of 1E-6. As a "
"result, findAt returns any face that is at the arbitrary point specified "
"or at a distance of less than 1E-6 from the arbitrary point. If nothing is"
" found, findAt uses the tolerance for imprecise geometry (applicable only "
"for imprecise geometric entities). The arbitrary point must not be shared "
"by a second face. If two faces intersect or coincide at the arbitrary "
"point, findAt chooses the first face that it encounters, and you should "
"not rely on the return value being consistent. findAt will always try to "
"find objects among all the faces in the part or assembly instance and will"
" not restrict itself to a subset even if the FaceArray represents such "
"subset."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:11 of
msgid ""
"Check `FaceArray.findAt on help.3ds.com/2017 <https://help.3ds.com/2017/En"
"glish/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"facearraypyc.htm?contextscope=all#simaker-facearrayfindatpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:13 of
msgid ""
"A sequence of Floats specifying the **X**, **Y**, and **Z** coordinates of"
" the object to find. ``findAt`` returns either a Face object or a sequence"
" of Face objects based on the type of input.  * If **coordinates** is a "
"sequence of Floats, findAt returns the Face object at that point.  * If "
"you omit the **coordinates** keyword argument, findAt accepts as arguments"
" a   sequence of pairs of sequences describing each face's coordinate and "
"normal, and findAt   returns a sequence of Face objects at the given "
"locations. If you omit the **coordinates**   keyword argument, you must "
"also omit the **normal** argument::      faces = f.findAt(((-16.438578, "
"-41.835673, -24.19804), ),                      ((25.210364, -35.689868, "
"1.860314), ),                      ((26.727683, -38.207055, 4.164759), ))"
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:13 of
msgid ""
"A sequence of Floats specifying the **X**, **Y**, and **Z** coordinates of"
" the object to find. ``findAt`` returns either a Face object or a sequence"
" of Face objects based on the type of input."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:17 of
msgid ""
"If **coordinates** is a sequence of Floats, findAt returns the Face object"
" at that point."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:19 of
msgid ""
"If you omit the **coordinates** keyword argument, findAt accepts as "
"arguments a sequence of pairs of sequences describing each face's "
"coordinate and normal, and findAt returns a sequence of Face objects at "
"the given locations. If you omit the **coordinates** keyword argument, you"
" must also omit the **normal** argument::"
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:27 of
msgid ""
"A sequence of Floats specifying the **X**, **Y**, and **Z** components of "
"a vector indicating the face normal."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:32 of
msgid "A Face object."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:33
#: abaqus.BasicGeometry.FaceArray.FaceArray.getSequenceFromMask:12 of
msgid ":class:`Face`"
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getBoundingBox:1 of
msgid ""
"This method returns a dictionary of two tuples representing minimum and "
"maximum boundary values of the bounding box of the minimum size containing"
" the face sequence."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getBoundingBox:4 of
msgid ""
"A Dictionary object with the following items:  - **low**: a tuple of three"
" floats representing the minimum **X** -, **Y** -, and **Z**  -boundary   "
"values of the bounding box. - **high**: a tuple of three floats "
"representing the maximum **X** -, **Y** -, and **Z**  -boundary   values "
"of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getBoundingBox:6 of
msgid ""
"**low**: a tuple of three floats representing the minimum **X** -, **Y** "
"-, and **Z**  -boundary values of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getBoundingBox:8 of
msgid ""
"**high**: a tuple of three floats representing the maximum **X** -, **Y** "
"-, and **Z**  -boundary values of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getBoundingBox:10 of
msgid ":class:`dict[str`, :class:`Sequence[float]]`"
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:1 of
msgid ""
"This method returns an array of face objects that lie within the specified"
" bounding box."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:4 of
msgid ""
"Check `FaceArray.getByBoundingBox on help.3ds.com/2017 <https://help.3ds.c"
"om/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"facearraypyc.htm?contextscope=all#simaker-"
"facearraygetbyboundingboxpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder:1 of
msgid ""
"This method returns an array of face objects that lie within the specified"
" bounding cylinder."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder:4 of
msgid ""
"Check `FaceArray.getByBoundingCylinder on help.3ds.com/2017 <https://help."
"3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"facearraypyc.htm?contextscope=all#simaker-"
"facearraygetbyboundingcylinderpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere:1 of
msgid ""
"This method returns an array of face objects that lie within the specified"
" bounding sphere."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere:4 of
msgid ""
"Check `FaceArray.getByBoundingSphere on help.3ds.com/2017 <https://help.3d"
"s.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"facearraypyc.htm?contextscope=all#simaker-"
"facearraygetbyboundingspherepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest:1 of
msgid ""
"This method returns an object or objects in the FaceArray closest to the "
"given set of points, where the given points need not lie on the faces in "
"the FaceArray."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest:5 of
msgid ""
"Check `FaceArray.getClosest on help.3ds.com/2017 <https://help.3ds.com/201"
"7/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"facearraypyc.htm?contextscope=all#simaker-facearraygetclosestpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest:8 of
msgid ""
"A sequence of a sequence of floats, where each sequence of floats "
"describes the **X**, **Y**, and **Z** coordinates of a point::      >>> "
"r=f.getClosest(coordinates=((20.0, 20.0, 10.0), (-1.0, -15.0, 15), ))     "
">>> r.keys()     [0, 1]     >>> r[0]     "
"(mdb.models['Model-1'].parts['Part-1'].faces[0], (15.7090625762939, 20.0, "
"10.0))"
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest:8
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest:8
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest:8
#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest:8 of
msgid ""
"A sequence of a sequence of floats, where each sequence of floats "
"describes the **X**, **Y**, and **Z** coordinates of a point::"
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest:20 of
msgid ""
"This method returns a dictionary object. The key to the dictionary object "
"is the position of the input point in the tuple specified in the "
"**coordinates** starting at index 0. If a closest face could be found then"
" the value is a sequence consisting of two objects. The first object in "
"the sequence is a Face that is close to the input point referred to by the"
" key. The second object in the sequence is a sequence of floats that "
"specifies the **X**, **Y**, and **Z**  location of the closest point on "
"the Face to the given point. See program listing above."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getSequenceFromMask:1 of
msgid ""
"This method returns the object or objects in the FaceArray identified "
"using the specified **mask**. This command is generated when the "
"JournalOptions are set to COMPRESSEDINDEX. When a large number of objects "
"are involved, this method is highly efficient."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getSequenceFromMask:6 of
msgid ""
"Check `FaceArray.getSequenceFromMask on help.3ds.com/2017 <https://help.3d"
"s.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"facearraypyc.htm?contextscope=all#simaker-"
"facearraygetsequencefrommaskpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getSequenceFromMask:11 of
msgid "A Face object or a sequence of Face objects."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge:1 of
msgid ""
"An IgnoredEdge object is a one-dimensional region of geometry that has "
"been abstracted away by a virtual topology feature."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge:14 of
msgid ""
"Check `IgnoredEdge on help.3ds.com/2017 <https://help.3ds.com/2017/English"
"/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"ignorededgepyc.htm?contextscope=all>`__."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature:1 of
msgid ""
"This method returns curvature information at a location on the IgnoredEdge"
" object."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature:4 of
msgid ""
"Check `IgnoredEdge.getCurvature on help.3ds.com/2017 <https://help.3ds.com"
"/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"ignorededgepyc.htm?contextscope=all#simaker-"
"ignorededgegetcurvaturepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature:7 of
msgid ""
"A Float specifying the normalized parameter location on the IgnoredEdge "
"where the curvature is to be computed. This argument is mutually exclusive"
" with the argument **point**."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature:11 of
msgid ""
"A tuple of **X**, **Y**, and **Z** coordinates of a point at which the "
"curvature is to be computed. If **point** does not lie on the IgnoredEdge "
"an attempt is made to project it onto the IgnoredEdge and use the "
"projected point."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature:15 of
msgid ""
"A dictionary with keys 'evaluationPoint', 'curvature', 'radius', "
"'tangent'. Where 'evaluationPoint' specifies the location at which the "
"curvature was computed. 'curvature' specifies the curvature vector at that"
" location. 'radius' is the Radius of curvature and 'tangent' specifies the"
" tangent to the IgnoredEdge at that location."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getRadius:1 of
msgid "This method returns the radius of a circular IgnoredEdge object."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getSize:4 of
msgid ""
"Check `IgnoredEdge.getSize on help.3ds.com/2017 <https://help.3ds.com/2017"
"/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"ignorededgepyc.htm?contextscope=all#simaker-ignorededgegetsizepyc>`__."
msgstr ""

#: ../../../../docstring
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdge.index:1 of
msgid ""
"An Int specifying the index of the IgnoredEdge in the IgnoredEdgeArray."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray:1 of
msgid ""
"Bases: :py:class:`~typing.List`\\ "
"[:py:class:`~abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge`]"
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray:1 of
msgid ""
"The IgnoredEdgeArray is a sequence of IgnoredEdge objects. If the part is "
"modified, then IgnoredEdgeArray must be updated for that part."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray:14 of
msgid ""
"Check `IgnoredEdgeArray on help.3ds.com/2017 <https://help.3ds.com/2017/En"
"glish/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"ignorededgearraypyc.htm?contextscope=all>`__."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt:1 of
msgid ""
"This method returns the object or objects in the IgnoredEdgeArray located "
"at the given coordinates. findAt initially uses the ACIS tolerance of "
"1E-6. As a result, findAt returns any IgnoredEdge that is at the arbitrary"
" point specified or at a distance of less than 1E-6 from the arbitrary "
"point. If nothing is found, findAt uses the tolerance for imprecise "
"geometry (applicable only for imprecise geometric entities). The arbitrary"
" point must not be shared by a second IgnoredEdge. If two IgnoredEdge "
"objects intersect or coincide at the arbitrary point, findAt chooses the "
"first IgnoredEdge that it encounters, and you should not rely on the "
"return value being consistent. findAt will always try to find objects "
"among all the ignored edges in the part or assembly instance and will not "
"restrict itself to a subset even if the IgnoredEdgeArray represents such "
"subset."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt:12 of
msgid ""
"Check `IgnoredEdgeArray.findAt on help.3ds.com/2017 <https://help.3ds.com/"
"2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"ignorededgearraypyc.htm?contextscope=all#simaker-"
"ignorededgearrayfindatpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt:14 of
msgid ""
"A sequence of Floats specifying the **X**, **Y**, and **Z**  coordinates "
"of the object to find.findAt returns either an IgnoredEdge object or a "
"sequence of IgnoredEdge objects based on the type of input.  * If "
"**coordinates** is a sequence of Floats, findAt returns the IgnoredEdge "
"object at that point.  * If you omit the **coordinates** keyword argument,"
" findAt accepts as arguments a sequence   of sequence of floats in the "
"following format::      ignoredEdges = e.findAt(((20.19686, -169.513997, "
"27.798593), ),                             ((19.657627, -167.295749, "
"27.056402), ),                             ((18.274129, -157.144741, "
"25.15218), ))"
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt:14 of
msgid ""
"A sequence of Floats specifying the **X**, **Y**, and **Z**  coordinates "
"of the object to find.findAt returns either an IgnoredEdge object or a "
"sequence of IgnoredEdge objects based on the type of input."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt:18 of
msgid ""
"If **coordinates** is a sequence of Floats, findAt returns the IgnoredEdge"
" object at that point."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt:29
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getSequenceFromMask:11
#: of
msgid "An IgnoredEdge object or a sequence of IgnoredEdge objects."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt:30
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getSequenceFromMask:12
#: of
msgid ":class:`IgnoredEdge`"
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest:1 of
msgid ""
"This method returns a object or objects in the IgnoredEdgeArray closest to"
" the given set of points, where the given points need not lie on the edges"
" in the IgnoredEdgeArray."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest:5 of
msgid ""
"Check `IgnoredEdgeArray.getClosest on help.3ds.com/2017 <https://help.3ds."
"com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"ignorededgearraypyc.htm?contextscope=all#simaker-"
"ignorededgearraygetclosestpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest:8 of
msgid ""
"A sequence of a sequence of floats, where each sequence of floats "
"describes the **X**, **Y**, and **Z** coordinates of a point::      >>> "
"r=e.getClosest(coordinates=((20.0, 20.0, 10.0),(-1.0, -15.0, 15), ))     "
">>> r.keys()     [0, 1]     >>> r[0]     "
"(mdb.models['Model-1'].parts['Part-1'].ignoredEdges[3], (15.7090625762939,"
" 20.0, 10.0))"
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest:20 of
msgid ""
"This method returns a dictionary object. The key to the dictionary object "
"is the position of the input point in the tuple specified in the "
"**coordinates** starting at index 0. If a closest IgnoredEdge could be "
"found then the value is a sequence consisting of two objects. The first "
"object in the sequence is an IgnoredEdge that is close to the input point "
"referred to by the key. The second object in the sequence, is a sequence "
"of floats which specify the **X**, **Y**, and **Z**  location of the "
"closest point on the IgnoredEdge to the given point. See program listing "
"above."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getSequenceFromMask:1
#: of
msgid ""
"This method returns the object or objects in the IgnoredEdgeArray "
"identified using the specified **mask**. This command is generated when "
"the JournalOptions are set to COMPRESSEDINDEX. When large number of "
"objects are involved, this method is highly efficient."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getSequenceFromMask:6
#: of
msgid ""
"Check `IgnoredEdgeArray.getSequenceFromMask on help.3ds.com/2017 <https://"
"help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-"
"c-ignorededgearraypyc.htm?contextscope=all#simaker-"
"ignorededgearraygetsequencefrommaskpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex:1 of
msgid ""
"An IgnoredVertex object is a point region of the geometry that was "
"abstracted away by a virtual topology feature."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex:14 of
msgid ""
"Check `IgnoredVertex on help.3ds.com/2017 <https://help.3ds.com/2017/Engli"
"sh/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"ignoredvertexpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../../../docstring
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertex.index:1 of
msgid ""
"An Int specifying the index of the IgnoredVertex in the "
"IgnoredVertexArray."
msgstr ""

#: ../../../../docstring
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertex.pointOn:1 of
msgid ""
"A tuple of Floats specifying the **X**, **Y**, and **Z** coordinates of "
"the vertex."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray:1 of
msgid ""
"Bases: :py:class:`~typing.List`\\ "
"[:py:class:`~abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex`]"
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray:1 of
msgid ""
"The IgnoredVertexArray is a sequence of IgnoredVertex objects. If the part"
" is modified, then IgnoredVertexArray must be updated for that part."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray:14 of
msgid ""
"Check `IgnoredVertexArray on help.3ds.com/2017 <https://help.3ds.com/2017/"
"English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"ignoredvertexarraypyc.htm?contextscope=all>`__."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt:1 of
msgid ""
"This method returns the object or objects in the IgnoredVertexArray "
"located at the given coordinates. findAt initially uses the ACIS tolerance"
" of 1E-6. As a result, findAt returns any IgnoredVertex object that is at "
"the arbitrary point specified or at a distance of less than 1E-6 from the "
"arbitrary point. If nothing is found, findAt uses the tolerance for "
"imprecise geometry (applicable only for imprecise geometric entities). "
"findAt will always try to find objects among all the ignored vertices in "
"the part or assembly instance and will not restrict itself to a subset "
"even if the IgnoredVertexArray represents such subset."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt:10 of
msgid ""
"Check `IgnoredVertexArray.findAt on help.3ds.com/2017 <https://help.3ds.co"
"m/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"ignoredvertexarraypyc.htm?contextscope=all#simaker-"
"ignoredvertexarrayfindatpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt:12 of
msgid ""
"A sequence of Floats specifying the **X**, **Y**, and **Z** coordinates of"
" the object to find.findAt returns either a IgnoredVertex object or a "
"sequence of IgnoredVertex objects based on the type of input.  * If "
"**coordinates** is a sequence of Floats, findAt returns the IgnoredVertex "
"object at that point.  * If you omit the **coordinates** keyword argument,"
" findAt accepts as arguments   a sequence of sequence of floats in the "
"following format::      verts = v.findAt(((20.19686, -169.513997, "
"27.798593), ),                     ((19.657627, -167.295749, 27.056402), "
"),                     ((18.274129, -157.144741, 25.15218), ))"
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt:12 of
msgid ""
"A sequence of Floats specifying the **X**, **Y**, and **Z** coordinates of"
" the object to find.findAt returns either a IgnoredVertex object or a "
"sequence of IgnoredVertex objects based on the type of input."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt:16 of
msgid ""
"If **coordinates** is a sequence of Floats, findAt returns the "
"IgnoredVertex object at that point."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt:27
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getSequenceFromMask:11
#: of
msgid "An IgnoredVertex object or a sequence of IgnoredVertex objects."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt:28
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getSequenceFromMask:12
#: of
msgid ":class:`IgnoredVertex`"
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest:1 of
msgid ""
"This method returns a object or objects in the IgnoredVertexArray closest "
"to the given set of points, where the given points need not lie on the "
"vertices in the IgnoredVertexArray."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest:5 of
msgid ""
"Check `IgnoredVertexArray.getClosest on help.3ds.com/2017 <https://help.3d"
"s.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"ignoredvertexarraypyc.htm?contextscope=all#simaker-"
"ignoredvertexarraygetclosestpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest:8 of
msgid ""
"A sequence of a sequence of floats, where each sequence of floats "
"describes the **X**, **Y**, and **Z** coordinates of a point::      >>> "
"r=e.getClosest(coordinates=((20.0, 20.0, 10.0),(-1.0, -15.0, 15), ))     "
">>> r.keys()     [0, 1]     >>> r[0]     "
"(mdb.models['Model-1'].parts['Part-1'].ignoredVertices[3], "
"(15.7090625762939, 20.0, 10.0))"
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest:20 of
msgid ""
"This method returns a dictionary object. The key to the dictionary object "
"is the position of the input point in the tuple specified in the "
"**coordinates** starting at index 0. If a closest IgnoredVertex could be "
"found then the value is a sequence consisting of two objects. The first "
"object in the sequence is a IgnoredVertex that is close to the input point"
" referred to by the key. The second object in the sequence, is a sequence "
"of floats which specify the **X**, **Y**, and **Z**  location of the "
"IgnoredVertex. See program listing above."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getSequenceFromMask:1
#: of
msgid ""
"This method returns the object or objects in the IgnoredVertexArray "
"identified using the specified **mask**. This command is generated when "
"the JournalOptions are set to COMPRESSEDINDEX. When large number of "
"objects are involved, this method is highly efficient."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getSequenceFromMask:6
#: of
msgid ""
"Check `IgnoredVertexArray.getSequenceFromMask on help.3ds.com/2017 <https:"
"//help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker"
"-c-ignoredvertexarraypyc.htm?contextscope=all#simaker-"
"ignoredvertexarraygetsequencefrommaskpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.ModelDot.ModelDot:1 of
msgid ""
"The ModelDot object can be used to access an actual MeshNode, "
"ReferencePoint, or ConstrainedSketchVertex object."
msgstr ""

#: abaqus.BasicGeometry.ModelDot.ModelDot:5 of
msgid ""
"Check `ModelDot on help.3ds.com/2017 <https://help.3ds.com/2017/English/DS"
"SIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"modeldotpyc.htm?contextscope=all>`__."
msgstr ""

#: abaqus.BasicGeometry.ReferencePoint.ReferencePoint:1 of
msgid ""
"The ReferencePoint object has no direct constructor; it is created when a "
"Feature object is created. The ReferencePoint method creates a Feature "
"object that creates a ReferencePoint object."
msgstr ""

#: abaqus.BasicGeometry.ReferencePoint.ReferencePoint:25 of
msgid ""
"Check `ReferencePoint on help.3ds.com/2017 <https://help.3ds.com/2017/Engl"
"ish/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"referencepointpyc.htm?contextscope=all>`__."
msgstr ""

#: abaqus.BasicGeometry.Vertex.Vertex:1 of
msgid "Vertices are point regions of geometry."
msgstr ""

#: abaqus.BasicGeometry.Vertex.Vertex:24 of
msgid ""
"Check `Vertex on help.3ds.com/2017 <https://help.3ds.com/2017/English/DSSI"
"MULIA_Established/SIMACAEKERRefMap/simaker-c-"
"vertexpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../../../docstring abaqus.BasicGeometry.VertexArray.Vertex.featureName:1
#: of
msgid ""
"A tuple of Floats specifying the name of the feature that created this "
"vertex."
msgstr ""

#: abaqus.BasicGeometry.Vertex.Vertex.getEdges:1 of
msgid ""
"This method returns a sequence consisting of the edge ids of the edges "
"which share this vertex."
msgstr ""

#: abaqus.BasicGeometry.Vertex.Vertex.getElements:1 of
msgid ""
"This method returns an array of element objects that are associated with "
"the vertex."
msgstr ""

#: abaqus.BasicGeometry.Vertex.Vertex.getNodes:1 of
msgid ""
"This method returns an array of node objects that are associated with the "
"vertex."
msgstr ""

#: ../../../../docstring abaqus.BasicGeometry.VertexArray.Vertex.index:1 of
msgid ""
"An Int specifying the index of the ConstrainedSketchVertex in the "
"VertexArray."
msgstr ""

#: ../../../../docstring abaqus.BasicGeometry.VertexArray.Vertex.instanceName:1
#: of
msgid ""
"A tuple of Floats specifying the name of the part instance for this vertex"
" (if applicable)."
msgstr ""

#: ../../../../docstring
#: abaqus.BasicGeometry.VertexArray.Vertex.isReferenceRep:1 of
msgid ""
"A Boolean specifying whether the vertex belongs to the reference "
"representation of the Part or Instance."
msgstr ""

#: ../../../../docstring abaqus.BasicGeometry.VertexArray.Vertex.pointOn:1 of
msgid ""
"A tuple of Floats specifying the **X** -, **Y** -, and **Z** -coordinates "
"of the vertex."
msgstr ""

#: abaqus.BasicGeometry.ReferencePoints.ReferencePoints:1 of
msgid ""
"Bases: :py:class:`~typing.Dict`\\ [:py:class:`str`, "
":py:class:`~abaqus.BasicGeometry.ReferencePoint.ReferencePoint`]"
msgstr ""

#: abaqus.BasicGeometry.Transform.Transform:1 of
msgid ""
"The MakeSketchTransform method creates a Transform object. The Transform "
"object has no direct constructor. A Transform object is a 4x3 matrix of "
"Floats that represents the transformation from sketch coordinates to "
"assembly coordinates or to part coordinates."
msgstr ""

#: abaqus.BasicGeometry.Transform.Transform:12 of
msgid ""
"Check `Transform on help.3ds.com/2017 <https://help.3ds.com/2017/English/D"
"SSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"transformpyc.htm?contextscope=all>`__."
msgstr ""

#: abaqus.BasicGeometry.Transform.Transform.matrix:1 of
msgid ""
"This method returns the transformation matrix as a tuple of 12 Floats."
msgstr ""

#: abaqus.BasicGeometry.Transform.Transform.matrix:3 of
msgid "A tuple of 12 Floats."
msgstr ""

#: abaqus.BasicGeometry.Transform.Transform.matrix:4 of
msgid ""
":class:`tuple[float`, :class:`float`, :class:`float`, :class:`float`, "
":class:`float`, :class:`float`, :class:`float`, :class:`float`, "
":class:`float`, :class:`float`, :class:`float`, :class:`float]`"
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray:1 of
msgid ""
"Bases: :py:class:`~typing.List`\\ "
"[:py:class:`~abaqus.BasicGeometry.Vertex.Vertex`]"
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray:1 of
msgid ""
"The VertexArray is a sequence of ConstrainedSketchVertex objects. If the "
"part is modified, then VertexArray must be updated for that part."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray:25 of
msgid ""
"Check `VertexArray on help.3ds.com/2017 <https://help.3ds.com/2017/English"
"/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"vertexarraypyc.htm?contextscope=all>`__."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt:1 of
msgid ""
"This method returns the object or objects in the VertexArray located at "
"the given coordinates. findAt initially uses the ACIS tolerance of 1E-6. "
"As a result, findAt returns any ConstrainedSketchVertex object that is at "
"the arbitrary point specified or at a distance of less than 1E-6 from the "
"arbitrary point. If nothing is found, findAt uses the tolerance for "
"imprecise geometry (applicable only for imprecise geometric entities). "
"findAt will always try to find objects among all the vertices in the part "
"or assembly instance and will not restrict itself to a subset even if the "
"VertexArray represents such subset."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt:10 of
msgid ""
"Check `VertexArray.findAt on help.3ds.com/2017 <https://help.3ds.com/2017/"
"English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"vertexarraypyc.htm?contextscope=all#simaker-vertexarrayfindatpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt:12 of
msgid ""
"A sequence of Floats specifying the **X**, **Y**, and **Z** coordinates of"
" the object to find.findAt returns either a ConstrainedSketchVertex object"
" or a sequence of ConstrainedSketchVertex objects based on the type of "
"input.  * If **coordinates** is a sequence of Floats, findAt returns the "
"ConstrainedSketchVertex object at that point.  * If you omit the "
"**coordinates** keyword argument, findAt accepts as arguments a sequence "
"of sequence   of floats in the following format::      verts = "
"v.findAt(((20.19686, -169.513997, 27.798593), ),                     "
"((19.657627, -167.295749, 27.056402), ),                     ((18.274129, "
"-157.144741, 25.15218), ))"
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt:12 of
msgid ""
"A sequence of Floats specifying the **X**, **Y**, and **Z** coordinates of"
" the object to find.findAt returns either a ConstrainedSketchVertex object"
" or a sequence of ConstrainedSketchVertex objects based on the type of "
"input."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt:16 of
msgid ""
"If **coordinates** is a sequence of Floats, findAt returns the "
"ConstrainedSketchVertex object at that point."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt:27
#: abaqus.BasicGeometry.VertexArray.VertexArray.getSequenceFromMask:11 of
msgid ""
"A ConstrainedSketchVertex object or a sequence of ConstrainedSketchVertex "
"objects.."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt:28 of
msgid ":class:`ConstrainedSketchVertex`"
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getBoundingBox:1 of
msgid ""
"This method returns a dictionary of two tuples representing minimum and "
"maximum boundary values of the bounding box of the minimum size containing"
" the vertex sequence."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:1 of
msgid ""
"This method returns an array of vertex objects that lie within the "
"specified bounding box."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:4 of
msgid ""
"Check `VertexArray.getByBoundingBox on help.3ds.com/2017 <https://help.3ds"
".com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"vertexarraypyc.htm?contextscope=all#simaker-"
"vertexarraygetbyboundingboxpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:19
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder:15
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere:11 of
msgid ""
"A VertexArray object, which is a sequence of ConstrainedSketchVertex "
"objects.."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:20
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder:16
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere:12 of
msgid ":class:`VertexArray`"
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder:1 of
msgid ""
"This method returns an array of vertex objects that lie within the "
"specified bounding cylinder."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder:4 of
msgid ""
"Check `VertexArray.getByBoundingCylinder on help.3ds.com/2017 <https://hel"
"p.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"vertexarraypyc.htm?contextscope=all#simaker-"
"vertexarraygetbyboundingcylinderpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere:1 of
msgid ""
"This method returns an array of vertex objects that lie within the "
"specified bounding sphere."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere:4 of
msgid ""
"Check `VertexArray.getByBoundingSphere on help.3ds.com/2017 <https://help."
"3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"vertexarraypyc.htm?contextscope=all#simaker-"
"vertexarraygetbyboundingspherepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest:1 of
msgid ""
"This method returns a object or objects in the VertexArray closest to the "
"given set of points, where the given points need not lie on "
"ConstrainedSketchVertex objects in the VertexArray."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest:5 of
msgid ""
"Check `VertexArray.getClosest on help.3ds.com/2017 <https://help.3ds.com/2"
"017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"vertexarraypyc.htm?contextscope=all#simaker-vertexarraygetclosestpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest:8 of
msgid ""
"A sequence of a sequence of floats, where each sequence of floats "
"describes the **X**, **Y**, and **Z** coordinates of a point::      >>> "
"r=v.getClosest(coordinates=((20.0, 20.0, 10.0),(-1.0, -15.0, 15), ))     "
">>> r.keys()     [0, 1]     >>> r[0]     "
"(mdb.models['Model-1'].parts['Part-1'].vertices[0], (15.7090625762939, "
"29.1666641235352, 20.0))"
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest:20 of
msgid ""
"This method returns a dictionary object. The key to the dictionary object "
"is the position of the input point in the tuple specified in the "
"**coordinates** starting at index 0. If a closest vertex could be found "
"then the value is a sequence consisting of two objects. The first object "
"in the sequence is a ConstrainedSketchVertex that is close to the input "
"point referred to by the key. The second object in the sequence is a "
"sequence of floats that specifies the **X**, **Y**, and **Z**  location of"
" the ConstrainedSketchVertex. See program listing above."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getSequenceFromMask:1 of
msgid ""
"This method returns the object or objects in the VertexArray identified "
"using the specified **mask**. This command is generated when the "
"JournalOptions are set to COMPRESSEDINDEX. When a large number of objects "
"are involved, this method is highly efficient."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getSequenceFromMask:6 of
msgid ""
"Check `VertexArray.getSequenceFromMask on help.3ds.com/2017 <https://help."
"3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-"
"vertexarraypyc.htm?contextscope=all#simaker-"
"vertexarraygetsequencefrommaskpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getSequenceFromMask:12 of
msgid ":class:`ConstrainedSketchVertex | list[ConstrainedSketchVertex]`"
msgstr ""

#~ msgid "Bases: :py:class:`~abaqus.Part.PartBase.PartBase`"
#~ msgstr ""

#~ msgid "Member Details:"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an interesting point"
#~ " along an edge. An InterestingPoint "
#~ "is a temporary object."
#~ msgstr ""

#~ msgid "This function can be accessed by::"
#~ msgstr ""

#~ msgid ""
#~ "Check `InterestingPoint on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-interestingpointpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

#~ msgid ""
#~ "An Edge object specifying the edge "
#~ "on which the interesting point is "
#~ "positioned."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the position "
#~ "of the interesting point. Possible "
#~ "values are MIDDLE or CENTER."
#~ msgstr ""

#~ msgid "Returns"
#~ msgstr ""

#~ msgid "An InterestingPoint object."
#~ msgstr ""

#~ msgid "Return type"
#~ msgstr ""

#~ msgid ":class:`InterestingPoint`"
#~ msgstr ""

#~ msgid "Bases: :py:class:`object`"
#~ msgstr ""

#~ msgid "Edges are one-dimensional regions of geometry."
#~ msgstr ""

#~ msgid "This object can be accessed by::"
#~ msgstr ""

#~ msgid ""
#~ "Check `Edge on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgepyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of Floats specifying the "
#~ "name of the feature that created "
#~ "this edge."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "Edge objects that share at least "
#~ "one vertex of the edge."
#~ msgstr ""

#~ msgid "An EdgeArray object, which is a sequence of Edge objects."
#~ msgstr ""

#~ msgid ":class:`EdgeArray`"
#~ msgstr ""

#~ msgid "This method returns curvature information at a location on the edge."
#~ msgstr ""

#~ msgid ""
#~ "Check `Edge.getCurvature on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgepyc.htm?contextscope=all"
#~ "#simaker-edgegetcurvaturepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the normalized "
#~ "parameter location on the edge where "
#~ "the curvature is to be computed. "
#~ "This argument is mutually exclusive with"
#~ " the argument **point**."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of **X**, **Y**, and **Z**"
#~ " coordinates of a point at which "
#~ "the curvature is to be computed. "
#~ "If **point** does not lie on the"
#~ " edge an attempt is made to "
#~ "project it onto the edge and use"
#~ " the projected point."
#~ msgstr ""

#~ msgid ""
#~ "A dictionary with keys 'evaluationPoint', "
#~ "'curvature', 'radius', and 'tangent', where"
#~ " 'evaluationPoint' specifies the location "
#~ "at which the curvature was computed; "
#~ "'curvature' specifies the curvature vector "
#~ "at that location; 'radius' is the "
#~ "radius of curvature; and 'tangent' "
#~ "specifies the tangent to the edge "
#~ "at that location."
#~ msgstr ""

#~ msgid ":class:`dict`"
#~ msgstr ""

#~ msgid "Raises"
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "Edge objects that are obtained by "
#~ "recursively finding adjacent edges that "
#~ "are at an angle of less than "
#~ "or equal to the specified face "
#~ "angle."
#~ msgstr ""

#~ msgid ""
#~ "Check `Edge.getEdgesByEdgeAngle on help.3ds.com/2017"
#~ " "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgepyc.htm?contextscope=all"
#~ "#simaker-edgegetedgesbyedgeanglepyc>`__."
#~ msgstr ""

#~ msgid "A float specifying the value of the face angle in degrees."
#~ msgstr ""

#~ msgid "An EdgeArray object, which is a sequence of Edgeobjects."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "element objects that are associated with"
#~ " the edge."
#~ msgstr ""

#~ msgid "A MeshElementArray object which is a sequence of MeshElement objects."
#~ msgstr ""

#~ msgid ":class:`MeshElementArray`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a sequence "
#~ "consisting of the face ids of the"
#~ " faces which share this edge."
#~ msgstr ""

#~ msgid "A tuple of integers."
#~ msgstr ""

#~ msgid ":class:`Tuple[int]`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "node objects that are associated with"
#~ " the edge."
#~ msgstr ""

#~ msgid "A MeshNodeArray object, which is a sequence of MeshNode objects."
#~ msgstr ""

#~ msgid ":class:`MeshNodeArray`"
#~ msgstr ""

#~ msgid "This method returns the radius of circular edges."
#~ msgstr ""

#~ msgid "A Float specifying the radius."
#~ msgstr ""

#~ msgid ":class:`float`"
#~ msgstr ""

#~ msgid "This method returns a Float indicating the length of the edge."
#~ msgstr ""

#~ msgid ""
#~ "Check `Edge.getSize on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgepyc.htm?contextscope=all"
#~ "#simaker-edgegetsizepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Bool specifying whether verbose output"
#~ " is printed. The default is True."
#~ msgstr ""

#~ msgid "A Float."
#~ msgstr ""

#~ msgid ""
#~ "This method returns a sequence of "
#~ "indices of the vertices that bound "
#~ "this edge. The first index refers "
#~ "to the vertex where the normalized "
#~ "curve parameter = 0.0, and the "
#~ "second index refers to the vertex "
#~ "where the normalized curve parameter ="
#~ " 1.0. If the edge is a closed"
#~ " curve, only one vertex index is "
#~ "returned."
#~ msgstr ""

#~ msgid "An Int specifying the index of the edge in the EdgeArray."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of Floats specifying the "
#~ "name of the part instance for this"
#~ " edge (if applicable)."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether the edge"
#~ " belongs to the reference representation"
#~ " of the Part or Instance."
#~ msgstr ""

#~ msgid ""
#~ "This method determines whether the "
#~ "tangent to the edge is flipped "
#~ "from its default direction by the "
#~ "use of the flipTangent method on a"
#~ " Part object."
#~ msgstr ""

#~ msgid "A Boolean value of True if the tangent is flipped and False if not."
#~ msgstr ""

#~ msgid ":class:`Boolean`"
#~ msgstr ""

#~ msgid ""
#~ "A tuple of Floats specifying the "
#~ "**X**, **Y**, and **Z** coordinates of"
#~ " a point located on the edge."
#~ msgstr ""

#~ msgid "Interesting points can be located at the following:"
#~ msgstr ""

#~ msgid "The middle of an edge."
#~ msgstr ""

#~ msgid "The middle of an arc."
#~ msgstr ""

#~ msgid "The center of an arc."
#~ msgstr ""

#~ msgid ""
#~ "An InterestingPoint object is a "
#~ "temporary object and cannot be accessed"
#~ " from the Mdb object."
#~ msgstr ""

#~ msgid "Cells are volumetric regions of geometry."
#~ msgstr ""

#~ msgid ""
#~ "Check `Cell on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of Floats specifying the "
#~ "name of the feature that created "
#~ "this cell."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "cell objects that share at least "
#~ "one face of the cell."
#~ msgstr ""

#~ msgid "A CellArray object which is a sequence of Cell objects."
#~ msgstr ""

#~ msgid ":class:`CellArray`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a sequence "
#~ "consisting of the edge IDs of the"
#~ " edges on the cell."
#~ msgstr ""

#~ msgid ":class:`Sequence[int]`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "element objects that are associated with"
#~ " the cell."
#~ msgstr ""

#~ msgid ""
#~ "This method returns a sequence "
#~ "consisting of the face IDs of the"
#~ " faces which bound the cell."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "node objects that are associated with"
#~ " the cell."
#~ msgstr ""

#~ msgid "A MeshNodeArray object which is a sequence of MeshNode objects."
#~ msgstr ""

#~ msgid "This method returns a Float indicating the volume of the cell."
#~ msgstr ""

#~ msgid ""
#~ "Check `Cell.getSize on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellpyc.htm?contextscope=all"
#~ "#simaker-cellgetsizepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean that determines whether a "
#~ "verbose output is to be printed. "
#~ "The default is True."
#~ msgstr ""

#~ msgid ""
#~ "This method returns a sequence "
#~ "consisting of the vertex IDs of "
#~ "the vertices on the cell."
#~ msgstr ""

#~ msgid "An Int specifying the index of the cell in the CellArray."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of Floats specifying the "
#~ "name of the part instance for this"
#~ " cell (if applicable)."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether the cell"
#~ " belongs to the reference representation"
#~ " of the Part or Instance."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of Floats specifying the "
#~ "**X**, **Y**, and **Z** coordinates of"
#~ " a point located on the cell."
#~ msgstr ""

#~ msgid ""
#~ "Bases: :py:class:`~typing.List`\\ "
#~ "[:py:class:`~abaqus.BasicGeometry.Cell.Cell`]"
#~ msgstr ""

#~ msgid "The CellArray is a sequence of Cell objects."
#~ msgstr ""

#~ msgid ""
#~ "Check `CellArray on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellarraypyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "This method creates a CellArray object."
#~ msgstr ""

#~ msgid "A list of Cell objects."
#~ msgstr ""

#~ msgid "A CellArray object."
#~ msgstr ""

#~ msgid ""
#~ "This method returns the object or "
#~ "objects in the CellArray located at "
#~ "the given coordinates. findAt initially "
#~ "uses the ACIS tolerance of 1E-6. "
#~ "As a result, findAt returns any "
#~ "entity that is at the arbitrary "
#~ "point specified or at a distance "
#~ "of less than 1E-6 from the "
#~ "arbitrary point. If nothing is found,"
#~ " findAt uses the tolerance for "
#~ "imprecise geometry (applicable only for "
#~ "imprecise geometric entities). The arbitrary"
#~ " point must not be shared by a"
#~ " second cell. If two cells intersect"
#~ " or coincide at the arbitrary point,"
#~ " findAt chooses the first cell that"
#~ " it encounters, and you should not"
#~ " rely on the return value being "
#~ "consistent. findAt will always try to"
#~ " find objects among all the cells "
#~ "in the part or assembly instance "
#~ "and will not restrict itself to a"
#~ " subset even if the CellArray "
#~ "represents such subset."
#~ msgstr ""

#~ msgid ""
#~ "Check `CellArray.findAt on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellarraypyc.htm?contextscope=all"
#~ "#simaker-cellarrayfindatpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**, **Y**, and **Z** coordinates of"
#~ " the object to find. ``findAt`` "
#~ "returns either a Cell object or a"
#~ " sequence of Cell objects based on"
#~ " the type of input.  * If "
#~ "**coordinates** is a sequence of Floats,"
#~ " findAt returns the Cell object at"
#~ " that point.  * If **coordinates** is"
#~ " a sequence of sequence of Floats,"
#~ " findAt returns a sequence of Cell"
#~ "   objects at the given locations. "
#~ "The sequence of sequence of Floats "
#~ "must be a sequence of   sequence "
#~ "of point and normal data, not a"
#~ " sequence of point data. For "
#~ "example::      cells1 = "
#~ "myCrackedBlockInstance.cells.findAt(((5.5, -8.3, 294.2),),"
#~ "                                                  ((12.1, "
#~ "-8.3, 287.8),),"
#~ "                                                  ((14.4, "
#~ "-10.4, 285.5),),)"
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**, **Y**, and **Z** coordinates of"
#~ " the object to find. ``findAt`` "
#~ "returns either a Cell object or a"
#~ " sequence of Cell objects based on"
#~ " the type of input."
#~ msgstr ""

#~ msgid ""
#~ "If **coordinates** is a sequence of "
#~ "Floats, findAt returns the Cell object"
#~ " at that point."
#~ msgstr ""

#~ msgid ""
#~ "If **coordinates** is a sequence of "
#~ "sequence of Floats, findAt returns a "
#~ "sequence of Cell objects at the "
#~ "given locations. The sequence of "
#~ "sequence of Floats must be a "
#~ "sequence of sequence of point and "
#~ "normal data, not a sequence of "
#~ "point data. For example::"
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether a message"
#~ " is to be printed to the CLI"
#~ " if no entity is found at the"
#~ " specified location. The default value "
#~ "is True."
#~ msgstr ""

#~ msgid "A Cell object."
#~ msgstr ""

#~ msgid ":class:`Cell`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a dictionary of "
#~ "two tuples representing minimum and "
#~ "maximum boundary values of the bounding"
#~ " box of the minimum size containing"
#~ " the cell sequence."
#~ msgstr ""

#~ msgid ""
#~ "A Dictionary object with the following"
#~ " items:  - **low**: a tuple of "
#~ "three floats representing the minimum "
#~ "**X** -, **Y** -, and **Z** "
#~ "-boundary   values of the bounding box."
#~ " - **high**: a tuple of three "
#~ "floats representing the maximum **X** -,"
#~ " **Y** -, and **Z** -boundary   "
#~ "values of the bounding box."
#~ msgstr ""

#~ msgid "A Dictionary object with the following items:"
#~ msgstr ""

#~ msgid ""
#~ "**low**: a tuple of three floats "
#~ "representing the minimum **X** -, **Y**"
#~ " -, and **Z** -boundary values of "
#~ "the bounding box."
#~ msgstr ""

#~ msgid ""
#~ "**high**: a tuple of three floats "
#~ "representing the maximum **X** -, **Y**"
#~ " -, and **Z** -boundary values of "
#~ "the bounding box."
#~ msgstr ""

#~ msgid ""
#~ ":class:`Dict[str`, :class:`Tuple[float`, :class:`float`,"
#~ " :class:`float]]`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "cell objects that lie within the "
#~ "specified bounding box."
#~ msgstr ""

#~ msgid ""
#~ "Check `CellArray.getByBoundingBox on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellarraypyc.htm?contextscope=all"
#~ "#simaker-cellarraygetbyboundingboxpyc>`__."
#~ msgstr ""

#~ msgid "A float specifying the minimum **X** boundary of the bounding box."
#~ msgstr ""

#~ msgid "A float specifying the minimum **Y** boundary of the bounding box."
#~ msgstr ""

#~ msgid "A float specifying the minimum **Z** boundary of the bounding box."
#~ msgstr ""

#~ msgid "A float specifying the maximum **X** boundary of the bounding box."
#~ msgstr ""

#~ msgid "A float specifying the maximum **Y** boundary of the bounding box."
#~ msgstr ""

#~ msgid "A float specifying the maximum **Z** boundary of the bounding box."
#~ msgstr ""

#~ msgid "A CellArray object, which is a sequence of Cell objects."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "cell objects that lie within the "
#~ "specified bounding cylinder."
#~ msgstr ""

#~ msgid ""
#~ "Check `CellArray.getByBoundingCylinder on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellarraypyc.htm?contextscope=all"
#~ "#simaker-cellarraygetbyboundingcylinderpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of the **X**, **Y**, and"
#~ " **Z** coordinates of the center of"
#~ " the first end of the cylinder."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of the **X**, **Y**, and"
#~ " **Z** coordinates of the center of"
#~ " the second end of the cylinder."
#~ msgstr ""

#~ msgid "A float specifying the radius of the cylinder."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "cell objects that lie within the "
#~ "specified bounding sphere."
#~ msgstr ""

#~ msgid ""
#~ "Check `CellArray.getByBoundingSphere on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellarraypyc.htm?contextscope=all"
#~ "#simaker-cellarraygetbyboundingspherepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of the **X**, **Y**, and"
#~ " **Z** coordinates of the center of"
#~ " the sphere."
#~ msgstr ""

#~ msgid "A float specifying the radius of the sphere."
#~ msgstr ""

#~ msgid "This method returns a string specifying the object or objects."
#~ msgstr ""

#~ msgid "A String specifying the object or objects."
#~ msgstr ""

#~ msgid ":class:`str`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns the object or "
#~ "objects in the CellArray identified "
#~ "using the specified **mask**. This "
#~ "command is generated when the "
#~ "JournalOptions are set to COMPRESSEDINDEX. "
#~ "When large number of objects are "
#~ "involved, this method is highly "
#~ "efficient."
#~ msgstr ""

#~ msgid ""
#~ "Check `CellArray.getSequenceFromMask on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellarraypyc.htm?contextscope=all"
#~ "#simaker-cellarraygetsequencefrommaskpyc>`__."
#~ msgstr ""

#~ msgid "A Cell object or a sequence of Cell objects."
#~ msgstr ""

#~ msgid ""
#~ "The mask results in an empty "
#~ "sequence, An exception occurs if the "
#~ "resulting sequence is empty."
#~ msgstr ""

#~ msgid ""
#~ "Bases: :py:class:`~typing.List`\\ "
#~ "[:py:class:`~abaqus.BasicGeometry.Edge.Edge`]"
#~ msgstr ""

#~ msgid ""
#~ "The EdgeArray is a sequence of "
#~ "Edge objects. If the part is "
#~ "modified, then EdgeArray must be updated"
#~ " for that part."
#~ msgstr ""

#~ msgid ""
#~ "Check `EdgeArray on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "This method creates an EdgeArray object."
#~ msgstr ""

#~ msgid "A list of Edge objects."
#~ msgstr ""

#~ msgid "A EdgeArray object."
#~ msgstr ""

#~ msgid ""
#~ "This method returns the object or "
#~ "objects in the EdgeArray located at "
#~ "the given coordinates. findAt initially "
#~ "uses the ACIS tolerance of 1E-6. "
#~ "As a result, findAt returns any "
#~ "edge that is at the arbitrary "
#~ "point specified or at a distance "
#~ "of less than 1E-6 from the "
#~ "arbitrary point. If nothing is found,"
#~ " findAt uses the tolerance for "
#~ "imprecise geometry (applicable only for "
#~ "imprecise geometric entities). The arbitrary"
#~ " point must not be shared by a"
#~ " second edge. If two edges intersect"
#~ " or coincide at the arbitrary point,"
#~ " findAt chooses the first edge that"
#~ " it encounters, and you should not"
#~ " rely on the return value being "
#~ "consistent. findAt will always try to"
#~ " find objects among all the edges "
#~ "in the part or assembly instance "
#~ "and will not restrict itself to a"
#~ " subset even if the EdgeArray "
#~ "represents such subset."
#~ msgstr ""

#~ msgid ""
#~ "Check `EdgeArray.findAt on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all"
#~ "#simaker-edgearrayfindatpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**, **Y**, and **Z** coordinates of"
#~ " the object to find. findAt returns"
#~ " either an Edge object or a "
#~ "sequence of Edge objects based on "
#~ "the type of input.  * If "
#~ "**coordinates** is a sequence of Floats,"
#~ " findAt returns the Edge object at"
#~ " that point.  * If you omit the"
#~ " **coordinates** keyword argument, findAt "
#~ "accepts as arguments a sequence   of "
#~ "sequence of floats in the following "
#~ "format::      edges = e.findAt(((20.19686, "
#~ "-169.513997, 27.798593), ),                      "
#~ "((19.657627, -167.295749, 27.056402), ),"
#~ "                      ((18.274129, -157.144741, "
#~ "25.15218), ))"
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**, **Y**, and **Z** coordinates of"
#~ " the object to find. findAt returns"
#~ " either an Edge object or a "
#~ "sequence of Edge objects based on "
#~ "the type of input."
#~ msgstr ""

#~ msgid ""
#~ "If **coordinates** is a sequence of "
#~ "Floats, findAt returns the Edge object"
#~ " at that point."
#~ msgstr ""

#~ msgid ""
#~ "If you omit the **coordinates** keyword"
#~ " argument, findAt accepts as arguments "
#~ "a sequence of sequence of floats "
#~ "in the following format::"
#~ msgstr ""

#~ msgid "An Edge object or a sequence of Edge objects."
#~ msgstr ""

#~ msgid ":class:`Edge`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a dictionary of "
#~ "two tuples representing minimum and "
#~ "maximum boundary values of the bounding"
#~ " box of the minimum size containing"
#~ " the edge sequence."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "edge objects that lie within the "
#~ "specified bounding box."
#~ msgstr ""

#~ msgid ""
#~ "Check `EdgeArray.getByBoundingBox on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all"
#~ "#simaker-edgearraygetbyboundingboxpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "edge objects that lie within the "
#~ "specified bounding cylinder."
#~ msgstr ""

#~ msgid ""
#~ "Check `EdgeArray.getByBoundingCylinder on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all"
#~ "#simaker-edgearraygetbyboundingcylinderpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "edge objects that lie within the "
#~ "specified bounding sphere."
#~ msgstr ""

#~ msgid ""
#~ "Check `EdgeArray.getByBoundingSphere on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all"
#~ "#simaker-edgearraygetbyboundingspherepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an object or "
#~ "objects in the EdgeArray closest to "
#~ "the given set of points, where the"
#~ " given points need not lie on "
#~ "the edges in the EdgeArray."
#~ msgstr ""

#~ msgid ""
#~ "Check `EdgeArray.getClosest on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all"
#~ "#simaker-edgearraygetclosestpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of a sequence of "
#~ "floats, where each sequence of floats"
#~ " describes the **X**, **Y**, and "
#~ "**Z**  coordinates of a point::      >>>"
#~ " r=e.getClosest(coordinates=((20.0, 20.0, 10.0), "
#~ "(-1.0, -15.0, 15), ))     >>> r.keys()"
#~ "     [0, 1]     >>> r[0]     "
#~ "(mdb.models['Model-1'].parts['Part-1'].edges[3], "
#~ "(15.7090625762939, 20.0, 10.0))"
#~ msgstr ""

#~ msgid ""
#~ "A sequence of a sequence of "
#~ "floats, where each sequence of floats"
#~ " describes the **X**, **Y**, and "
#~ "**Z**  coordinates of a point::"
#~ msgstr ""

#~ msgid ""
#~ "A double specifying the distance within"
#~ " which the closest object must lie."
#~ " The default value is half of "
#~ "the parent part/instance size."
#~ msgstr ""

#~ msgid ""
#~ "This method returns a dictionary object."
#~ " The key to the dictionary object "
#~ "is the position of the input point"
#~ " in the tuple specified in the "
#~ "**coordinates** starting at index 0. If"
#~ " a closest edge could be found "
#~ "then the value is a sequence "
#~ "consisting of two objects. The first "
#~ "object in the sequence is an Edge"
#~ " that is close to the input "
#~ "point referred to by the key. The"
#~ " second object in the sequence is "
#~ "a sequence of floats that specifies "
#~ "the **X**, **Y**, and **Z**  location"
#~ " of the closest point on the "
#~ "Edge to the given point. See "
#~ "program listing above."
#~ msgstr ""

#~ msgid ""
#~ "This method returns the object or "
#~ "objects in the EdgeArray identified "
#~ "using the specified **mask**. This "
#~ "command is generated when the "
#~ "JournalOptions are set to COMPRESSEDINDEX. "
#~ "When a large number of objects are"
#~ " involved, this method is highly "
#~ "efficient."
#~ msgstr ""

#~ msgid ""
#~ "Check `EdgeArray.getSequenceFromMask on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all"
#~ "#simaker-edgearraygetsequencefrommaskpyc>`__."
#~ msgstr ""

#~ msgid "Faces are two-dimensional regions of geometry."
#~ msgstr ""

#~ msgid ""
#~ "Check `Face on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of Floats specifying the "
#~ "name of the feature that created "
#~ "this face."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "face objects that share at least "
#~ "one edge of the face."
#~ msgstr ""

#~ msgid "A FaceArray object which is a sequence of Face objects."
#~ msgstr ""

#~ msgid ":class:`FaceArray`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a sequence "
#~ "consisting of the cell ids of the"
#~ " cells to which this face belongs."
#~ msgstr ""

#~ msgid "This method returns the centroid of a face."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**, **Y**, and **Z** coordinates of"
#~ " the centroid of the face."
#~ msgstr ""

#~ msgid ":class:`Sequence[float]`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns information about "
#~ "the curvature at a location on the"
#~ " face."
#~ msgstr ""

#~ msgid ""
#~ "Check `Face.getCurvature on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all"
#~ "#simaker-facegetcurvaturepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A tuple specifying the **X**, **Y**, "
#~ "and **Z** coordinates of the point "
#~ "where the curvature is desired. If "
#~ "the **point** does not lie on the"
#~ " face it will be projected onto "
#~ "the face. This argument and **uParam**"
#~ " and **vParam** are mutually exclusive."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the normalized **U**"
#~ " parameter value at which the "
#~ "curvature is to be computed. This "
#~ "value must lie between (0,1). **vParam**"
#~ " must also be specified. This "
#~ "argument is mutually exclusive with "
#~ "**point**."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the normalized **V**"
#~ " parameter value at which the "
#~ "curvature is to be computed. This "
#~ "value must lie between (0,1)."
#~ msgstr ""

#~ msgid ""
#~ "A dictionary with keys 'evaluationPoint', "
#~ "'principalAxis1', 'principalAxis2', 'curvature1', "
#~ "'curvature2' and 'gaussianCurvature'. Where "
#~ "the evaluationPoint specifies the location "
#~ "at which the curvature was evaluated."
#~ " 'principalAxis1' and 'principalAxis2' refer "
#~ "to the vectors specifying the two "
#~ "principal axes of the face. 'curvature1'"
#~ " and 'curvature2' specify the curvatures"
#~ " along the two principal axes."
#~ msgstr ""

#~ msgid ""
#~ "This method returns a sequence "
#~ "consisting of the edge ids of the"
#~ " edges on the face."
#~ msgstr ""

#~ msgid "* :class:`Sequence[int]` * :class:`A tuple` of :class:`integers.`"
#~ msgstr ""

#~ msgid ":class:`A tuple` of :class:`integers.`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "mesh face objects. Each mesh face "
#~ "object contains the element label and"
#~ " the side of the element that "
#~ "lies on the geometric face."
#~ msgstr ""

#~ msgid ""
#~ "Check `Face.getElementFaces on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all"
#~ "#simaker-facegetelementfacespyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A symbolic constant specifying the side"
#~ " of the geometric face of a "
#~ "solid from which the element faces "
#~ "should be retrieved. Possible values are"
#~ " **SIDE1**, **SIDE2**, and **BOTH_SIDES**. "
#~ "The default value is **BOTH_SIDES**. For"
#~ " shell faces this option is ignored."
#~ msgstr ""

#~ msgid "A MeshFaceArray object which is a sequence of MeshFace objects."
#~ msgstr ""

#~ msgid ":class:`MeshFaceArray`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "element objects that are associated with"
#~ " the face."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "Face objects that are obtained by "
#~ "recursively finding adjacent faces that "
#~ "share the same curvature."
#~ msgstr ""

#~ msgid "A FaceArray object, which is a sequence of Face objects."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "Face objects that are obtained by "
#~ "recursively finding adjacent faces that "
#~ "are at an angle of less than "
#~ "or equal to the specified angle."
#~ msgstr ""

#~ msgid ""
#~ "Check `Face.getFacesByFaceAngle on help.3ds.com/2017"
#~ " "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all"
#~ "#simaker-facegetfacesbyfaceanglepyc>`__."
#~ msgstr ""

#~ msgid "A float specifying the value of the face angle."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "mesh node objects. Each mesh node "
#~ "object contains the label of the "
#~ "node that lies on the geometric "
#~ "face."
#~ msgstr ""

#~ msgid ""
#~ "Check `Face.getNodes on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all"
#~ "#simaker-facegetnodespyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A symbolic constant specifying the side"
#~ " of the geometric face of a "
#~ "solid from which the nodes should "
#~ "be retrieved. Possible values are "
#~ "xo*SIDE1*, **SIDE2**, and **BOTH_SIDES**. The"
#~ " default value is **BOTH_SIDES**. For "
#~ "shell faces and for faces with "
#~ "compatible meshes on either sides this"
#~ " option is ignored. Otherwise, the "
#~ "nodes on the specified side(s) of "
#~ "the face are output."
#~ msgstr ""

#~ msgid ""
#~ "This method returns the normal to "
#~ "a face at the location specified "
#~ "by the **pointOn** member. The normal"
#~ " at a different location on the "
#~ "face can be obtained by specifying "
#~ "the optional **point** argument."
#~ msgstr ""

#~ msgid ""
#~ "Check `Face.getNormal on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all"
#~ "#simaker-facegetnormalpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A tuple specifying the **X**, **Y**, "
#~ "and **Z** coordinates of the point "
#~ "where the normal to the face is"
#~ " desired. If the **point** does not"
#~ " lie on the face it will be "
#~ "projected onto the face."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**, **Y**, and **Z** components of"
#~ " the normal to the face."
#~ msgstr ""

#~ msgid "This method returns a Float indicating the area of the face."
#~ msgstr ""

#~ msgid ""
#~ "Check `Face.getSize on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all"
#~ "#simaker-facegetsizepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Bool specifying whether verbose output"
#~ " is printed. The default value is "
#~ "True."
#~ msgstr ""

#~ msgid ""
#~ "This method returns a sequence "
#~ "consisting of the vertex ids of "
#~ "the vertices of the face."
#~ msgstr ""

#~ msgid "An Int specifying the index of the face in the FaceArray."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of Floats specifying the "
#~ "name of the part instance for this"
#~ " face (if applicable)."
#~ msgstr ""

#~ msgid ""
#~ "This method determines whether the "
#~ "normal to the face is flipped from"
#~ " its default direction by the use "
#~ "of the flipNormal method on a Part"
#~ " object."
#~ msgstr ""

#~ msgid "A Boolean value of True if the normal is flipped and False if not."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether the face"
#~ " belongs to the reference representation"
#~ " of the Part or Instance."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of tuples of Floats "
#~ "specifying the coordinates. For a face"
#~ " of a shell **pointOn** specifies the"
#~ " **X**, **Y**, and **Z** coordinates "
#~ "of a point located on the face "
#~ "and the **X**, **Y**, and **Z** "
#~ "components of the normal to the "
#~ "face.For a face of a solid "
#~ "**pointOn** specifies the **X**, **Y**, "
#~ "and **Z** coordinates of a point "
#~ "located on the face."
#~ msgstr ""

#~ msgid ""
#~ "Bases: :py:class:`~typing.List`\\ "
#~ "[:py:class:`~abaqus.BasicGeometry.Face.Face`]"
#~ msgstr ""

#~ msgid ""
#~ "The FaceArray is a sequence of "
#~ "Face objects. If the part is "
#~ "modified, then FaceArray must be updated"
#~ " for that part."
#~ msgstr ""

#~ msgid ""
#~ "Check `FaceArray on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "This method creates a FaceArray object."
#~ msgstr ""

#~ msgid "A list of Face objects."
#~ msgstr ""

#~ msgid "A FaceArray object."
#~ msgstr ""

#~ msgid ""
#~ "This method returns the object or "
#~ "objects in the FaceArray located at "
#~ "the given coordinates. findAt initially "
#~ "uses the ACIS tolerance of 1E-6. "
#~ "As a result, findAt returns any "
#~ "face that is at the arbitrary "
#~ "point specified or at a distance "
#~ "of less than 1E-6 from the "
#~ "arbitrary point. If nothing is found,"
#~ " findAt uses the tolerance for "
#~ "imprecise geometry (applicable only for "
#~ "imprecise geometric entities). The arbitrary"
#~ " point must not be shared by a"
#~ " second face. If two faces intersect"
#~ " or coincide at the arbitrary point,"
#~ " findAt chooses the first face that"
#~ " it encounters, and you should not"
#~ " rely on the return value being "
#~ "consistent. findAt will always try to"
#~ " find objects among all the faces "
#~ "in the part or assembly instance "
#~ "and will not restrict itself to a"
#~ " subset even if the FaceArray "
#~ "represents such subset."
#~ msgstr ""

#~ msgid ""
#~ "Check `FaceArray.findAt on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all"
#~ "#simaker-facearrayfindatpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**, **Y**, and **Z** coordinates of"
#~ " the object to find. ``findAt`` "
#~ "returns either a Face object or a"
#~ " sequence of Face objects based on"
#~ " the type of input.  * If "
#~ "**coordinates** is a sequence of Floats,"
#~ " findAt returns the Face object at"
#~ " that point.  * If you omit the"
#~ " **coordinates** keyword argument, findAt "
#~ "accepts as arguments a   sequence of "
#~ "pairs of sequences describing each "
#~ "face's coordinate and normal, and findAt"
#~ "   returns a sequence of Face objects"
#~ " at the given locations. If you "
#~ "omit the **coordinates**   keyword argument,"
#~ " you must also omit the **normal**"
#~ " argument::      faces = f.findAt(((-16.438578,"
#~ " -41.835673, -24.19804), ),                      "
#~ "((25.210364, -35.689868, 1.860314), ),"
#~ "                      ((26.727683, -38.207055, "
#~ "4.164759), ))"
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**, **Y**, and **Z** coordinates of"
#~ " the object to find. ``findAt`` "
#~ "returns either a Face object or a"
#~ " sequence of Face objects based on"
#~ " the type of input."
#~ msgstr ""

#~ msgid ""
#~ "If **coordinates** is a sequence of "
#~ "Floats, findAt returns the Face object"
#~ " at that point."
#~ msgstr ""

#~ msgid ""
#~ "If you omit the **coordinates** keyword"
#~ " argument, findAt accepts as arguments "
#~ "a sequence of pairs of sequences "
#~ "describing each face's coordinate and "
#~ "normal, and findAt returns a sequence"
#~ " of Face objects at the given "
#~ "locations. If you omit the "
#~ "**coordinates** keyword argument, you must "
#~ "also omit the **normal** argument::"
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**, **Y**, and **Z** components of"
#~ " a vector indicating the face normal."
#~ msgstr ""

#~ msgid "A Face object."
#~ msgstr ""

#~ msgid ":class:`Face`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a dictionary of "
#~ "two tuples representing minimum and "
#~ "maximum boundary values of the bounding"
#~ " box of the minimum size containing"
#~ " the face sequence."
#~ msgstr ""

#~ msgid ""
#~ "A Dictionary object with the following"
#~ " items:  - **low**: a tuple of "
#~ "three floats representing the minimum "
#~ "**X** -, **Y** -, and **Z**  "
#~ "-boundary   values of the bounding box."
#~ " - **high**: a tuple of three "
#~ "floats representing the maximum **X** -,"
#~ " **Y** -, and **Z**  -boundary   "
#~ "values of the bounding box."
#~ msgstr ""

#~ msgid ""
#~ "**low**: a tuple of three floats "
#~ "representing the minimum **X** -, **Y**"
#~ " -, and **Z**  -boundary values of"
#~ " the bounding box."
#~ msgstr ""

#~ msgid ""
#~ "**high**: a tuple of three floats "
#~ "representing the maximum **X** -, **Y**"
#~ " -, and **Z**  -boundary values of"
#~ " the bounding box."
#~ msgstr ""

#~ msgid ":class:`Dict[str`, :class:`Sequence[float]]`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "face objects that lie within the "
#~ "specified bounding box."
#~ msgstr ""

#~ msgid ""
#~ "Check `FaceArray.getByBoundingBox on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all"
#~ "#simaker-facearraygetbyboundingboxpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "face objects that lie within the "
#~ "specified bounding cylinder."
#~ msgstr ""

#~ msgid ""
#~ "Check `FaceArray.getByBoundingCylinder on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all"
#~ "#simaker-facearraygetbyboundingcylinderpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "face objects that lie within the "
#~ "specified bounding sphere."
#~ msgstr ""

#~ msgid ""
#~ "Check `FaceArray.getByBoundingSphere on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all"
#~ "#simaker-facearraygetbyboundingspherepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an object or "
#~ "objects in the FaceArray closest to "
#~ "the given set of points, where the"
#~ " given points need not lie on "
#~ "the faces in the FaceArray."
#~ msgstr ""

#~ msgid ""
#~ "Check `FaceArray.getClosest on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all"
#~ "#simaker-facearraygetclosestpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of a sequence of "
#~ "floats, where each sequence of floats"
#~ " describes the **X**, **Y**, and "
#~ "**Z** coordinates of a point::      >>>"
#~ " r=f.getClosest(coordinates=((20.0, 20.0, 10.0), "
#~ "(-1.0, -15.0, 15), ))     >>> r.keys()"
#~ "     [0, 1]     >>> r[0]     "
#~ "(mdb.models['Model-1'].parts['Part-1'].faces[0], "
#~ "(15.7090625762939, 20.0, 10.0))"
#~ msgstr ""

#~ msgid ""
#~ "A sequence of a sequence of "
#~ "floats, where each sequence of floats"
#~ " describes the **X**, **Y**, and "
#~ "**Z** coordinates of a point::"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a dictionary object."
#~ " The key to the dictionary object "
#~ "is the position of the input point"
#~ " in the tuple specified in the "
#~ "**coordinates** starting at index 0. If"
#~ " a closest face could be found "
#~ "then the value is a sequence "
#~ "consisting of two objects. The first "
#~ "object in the sequence is a Face"
#~ " that is close to the input "
#~ "point referred to by the key. The"
#~ " second object in the sequence is "
#~ "a sequence of floats that specifies "
#~ "the **X**, **Y**, and **Z**  location"
#~ " of the closest point on the "
#~ "Face to the given point. See "
#~ "program listing above."
#~ msgstr ""

#~ msgid ""
#~ "This method returns the object or "
#~ "objects in the FaceArray identified "
#~ "using the specified **mask**. This "
#~ "command is generated when the "
#~ "JournalOptions are set to COMPRESSEDINDEX. "
#~ "When a large number of objects are"
#~ " involved, this method is highly "
#~ "efficient."
#~ msgstr ""

#~ msgid ""
#~ "Check `FaceArray.getSequenceFromMask on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all"
#~ "#simaker-facearraygetsequencefrommaskpyc>`__."
#~ msgstr ""

#~ msgid "A Face object or a sequence of Face objects."
#~ msgstr ""

#~ msgid ""
#~ "An IgnoredEdge object is a one-"
#~ "dimensional region of geometry that has"
#~ " been abstracted away by a virtual"
#~ " topology feature."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredEdge on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgepyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method returns curvature information "
#~ "at a location on the IgnoredEdge "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredEdge.getCurvature on help.3ds.com/2017"
#~ " "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgepyc.htm?contextscope=all"
#~ "#simaker-ignorededgegetcurvaturepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the normalized "
#~ "parameter location on the IgnoredEdge "
#~ "where the curvature is to be "
#~ "computed. This argument is mutually "
#~ "exclusive with the argument **point**."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of **X**, **Y**, and **Z**"
#~ " coordinates of a point at which "
#~ "the curvature is to be computed. "
#~ "If **point** does not lie on the"
#~ " IgnoredEdge an attempt is made to"
#~ " project it onto the IgnoredEdge and"
#~ " use the projected point."
#~ msgstr ""

#~ msgid ""
#~ "A dictionary with keys 'evaluationPoint', "
#~ "'curvature', 'radius', 'tangent'. Where "
#~ "'evaluationPoint' specifies the location at"
#~ " which the curvature was computed. "
#~ "'curvature' specifies the curvature vector "
#~ "at that location. 'radius' is the "
#~ "Radius of curvature and 'tangent' "
#~ "specifies the tangent to the IgnoredEdge"
#~ " at that location."
#~ msgstr ""

#~ msgid "This method returns the radius of a circular IgnoredEdge object."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredEdge.getSize on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgepyc.htm?contextscope=all"
#~ "#simaker-ignorededgegetsizepyc>`__."
#~ msgstr ""

#~ msgid "An Int specifying the index of the IgnoredEdge in the IgnoredEdgeArray."
#~ msgstr ""

#~ msgid ""
#~ "Bases: :py:class:`~typing.List`\\ "
#~ "[:py:class:`~abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge`]"
#~ msgstr ""

#~ msgid ""
#~ "The IgnoredEdgeArray is a sequence of"
#~ " IgnoredEdge objects. If the part is"
#~ " modified, then IgnoredEdgeArray must be"
#~ " updated for that part."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredEdgeArray on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgearraypyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method returns the object or "
#~ "objects in the IgnoredEdgeArray located "
#~ "at the given coordinates. findAt "
#~ "initially uses the ACIS tolerance of "
#~ "1E-6. As a result, findAt returns "
#~ "any IgnoredEdge that is at the "
#~ "arbitrary point specified or at a "
#~ "distance of less than 1E-6 from "
#~ "the arbitrary point. If nothing is "
#~ "found, findAt uses the tolerance for "
#~ "imprecise geometry (applicable only for "
#~ "imprecise geometric entities). The arbitrary"
#~ " point must not be shared by a"
#~ " second IgnoredEdge. If two IgnoredEdge "
#~ "objects intersect or coincide at the "
#~ "arbitrary point, findAt chooses the "
#~ "first IgnoredEdge that it encounters, "
#~ "and you should not rely on the "
#~ "return value being consistent. findAt "
#~ "will always try to find objects "
#~ "among all the ignored edges in the"
#~ " part or assembly instance and will"
#~ " not restrict itself to a subset "
#~ "even if the IgnoredEdgeArray represents "
#~ "such subset."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredEdgeArray.findAt on help.3ds.com/2017"
#~ " "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgearraypyc.htm?contextscope=all"
#~ "#simaker-ignorededgearrayfindatpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**, **Y**, and **Z**  coordinates of"
#~ " the object to find.findAt returns "
#~ "either an IgnoredEdge object or a "
#~ "sequence of IgnoredEdge objects based on"
#~ " the type of input.  * If "
#~ "**coordinates** is a sequence of Floats,"
#~ " findAt returns the IgnoredEdge object "
#~ "at that point.  * If you omit "
#~ "the **coordinates** keyword argument, findAt"
#~ " accepts as arguments a sequence   of"
#~ " sequence of floats in the following"
#~ " format::      ignoredEdges = "
#~ "e.findAt(((20.19686, -169.513997, 27.798593), ),"
#~ "                             ((19.657627, -167.295749, "
#~ "27.056402), ),                             ((18.274129,"
#~ " -157.144741, 25.15218), ))"
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**, **Y**, and **Z**  coordinates of"
#~ " the object to find.findAt returns "
#~ "either an IgnoredEdge object or a "
#~ "sequence of IgnoredEdge objects based on"
#~ " the type of input."
#~ msgstr ""

#~ msgid ""
#~ "If **coordinates** is a sequence of "
#~ "Floats, findAt returns the IgnoredEdge "
#~ "object at that point."
#~ msgstr ""

#~ msgid "An IgnoredEdge object or a sequence of IgnoredEdge objects."
#~ msgstr ""

#~ msgid ":class:`IgnoredEdge`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a object or "
#~ "objects in the IgnoredEdgeArray closest "
#~ "to the given set of points, where"
#~ " the given points need not lie "
#~ "on the edges in the IgnoredEdgeArray."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredEdgeArray.getClosest on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgearraypyc.htm?contextscope=all"
#~ "#simaker-ignorededgearraygetclosestpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of a sequence of "
#~ "floats, where each sequence of floats"
#~ " describes the **X**, **Y**, and "
#~ "**Z** coordinates of a point::      >>>"
#~ " r=e.getClosest(coordinates=((20.0, 20.0, 10.0),(-1.0,"
#~ " -15.0, 15), ))     >>> r.keys()     "
#~ "[0, 1]     >>> r[0]     "
#~ "(mdb.models['Model-1'].parts['Part-1'].ignoredEdges[3], "
#~ "(15.7090625762939, 20.0, 10.0))"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a dictionary object."
#~ " The key to the dictionary object "
#~ "is the position of the input point"
#~ " in the tuple specified in the "
#~ "**coordinates** starting at index 0. If"
#~ " a closest IgnoredEdge could be found"
#~ " then the value is a sequence "
#~ "consisting of two objects. The first "
#~ "object in the sequence is an "
#~ "IgnoredEdge that is close to the "
#~ "input point referred to by the "
#~ "key. The second object in the "
#~ "sequence, is a sequence of floats "
#~ "which specify the **X**, **Y**, and "
#~ "**Z**  location of the closest point "
#~ "on the IgnoredEdge to the given "
#~ "point. See program listing above."
#~ msgstr ""

#~ msgid ""
#~ "This method returns the object or "
#~ "objects in the IgnoredEdgeArray identified "
#~ "using the specified **mask**. This "
#~ "command is generated when the "
#~ "JournalOptions are set to COMPRESSEDINDEX. "
#~ "When large number of objects are "
#~ "involved, this method is highly "
#~ "efficient."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredEdgeArray.getSequenceFromMask on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgearraypyc.htm?contextscope=all"
#~ "#simaker-ignorededgearraygetsequencefrommaskpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "An IgnoredVertex object is a point "
#~ "region of the geometry that was "
#~ "abstracted away by a virtual topology"
#~ " feature."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredVertex on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignoredvertexpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "An Int specifying the index of the"
#~ " IgnoredVertex in the IgnoredVertexArray."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of Floats specifying the "
#~ "**X**, **Y**, and **Z** coordinates of"
#~ " the vertex."
#~ msgstr ""

#~ msgid ""
#~ "Bases: :py:class:`~typing.List`\\ "
#~ "[:py:class:`~abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex`]"
#~ msgstr ""

#~ msgid ""
#~ "The IgnoredVertexArray is a sequence of"
#~ " IgnoredVertex objects. If the part "
#~ "is modified, then IgnoredVertexArray must "
#~ "be updated for that part."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredVertexArray on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignoredvertexarraypyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method returns the object or "
#~ "objects in the IgnoredVertexArray located "
#~ "at the given coordinates. findAt "
#~ "initially uses the ACIS tolerance of "
#~ "1E-6. As a result, findAt returns "
#~ "any IgnoredVertex object that is at "
#~ "the arbitrary point specified or at "
#~ "a distance of less than 1E-6 from"
#~ " the arbitrary point. If nothing is"
#~ " found, findAt uses the tolerance for"
#~ " imprecise geometry (applicable only for"
#~ " imprecise geometric entities). findAt will"
#~ " always try to find objects among "
#~ "all the ignored vertices in the "
#~ "part or assembly instance and will "
#~ "not restrict itself to a subset "
#~ "even if the IgnoredVertexArray represents "
#~ "such subset."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredVertexArray.findAt on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignoredvertexarraypyc.htm?contextscope=all"
#~ "#simaker-ignoredvertexarrayfindatpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**, **Y**, and **Z** coordinates of"
#~ " the object to find.findAt returns "
#~ "either a IgnoredVertex object or a "
#~ "sequence of IgnoredVertex objects based "
#~ "on the type of input.  * If "
#~ "**coordinates** is a sequence of Floats,"
#~ " findAt returns the IgnoredVertex object"
#~ " at that point.  * If you omit"
#~ " the **coordinates** keyword argument, "
#~ "findAt accepts as arguments   a sequence"
#~ " of sequence of floats in the "
#~ "following format::      verts = "
#~ "v.findAt(((20.19686, -169.513997, 27.798593), ),"
#~ "                     ((19.657627, -167.295749, "
#~ "27.056402), ),                     ((18.274129, "
#~ "-157.144741, 25.15218), ))"
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**, **Y**, and **Z** coordinates of"
#~ " the object to find.findAt returns "
#~ "either a IgnoredVertex object or a "
#~ "sequence of IgnoredVertex objects based "
#~ "on the type of input."
#~ msgstr ""

#~ msgid ""
#~ "If **coordinates** is a sequence of "
#~ "Floats, findAt returns the IgnoredVertex "
#~ "object at that point."
#~ msgstr ""

#~ msgid "An IgnoredVertex object or a sequence of IgnoredVertex objects."
#~ msgstr ""

#~ msgid ":class:`IgnoredVertex`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a object or "
#~ "objects in the IgnoredVertexArray closest "
#~ "to the given set of points, where"
#~ " the given points need not lie "
#~ "on the vertices in the "
#~ "IgnoredVertexArray."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredVertexArray.getClosest on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignoredvertexarraypyc.htm?contextscope=all"
#~ "#simaker-ignoredvertexarraygetclosestpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of a sequence of "
#~ "floats, where each sequence of floats"
#~ " describes the **X**, **Y**, and "
#~ "**Z** coordinates of a point::      >>>"
#~ " r=e.getClosest(coordinates=((20.0, 20.0, 10.0),(-1.0,"
#~ " -15.0, 15), ))     >>> r.keys()     "
#~ "[0, 1]     >>> r[0]     "
#~ "(mdb.models['Model-1'].parts['Part-1'].ignoredVertices[3], "
#~ "(15.7090625762939, 20.0, 10.0))"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a dictionary object."
#~ " The key to the dictionary object "
#~ "is the position of the input point"
#~ " in the tuple specified in the "
#~ "**coordinates** starting at index 0. If"
#~ " a closest IgnoredVertex could be "
#~ "found then the value is a sequence"
#~ " consisting of two objects. The first"
#~ " object in the sequence is a "
#~ "IgnoredVertex that is close to the "
#~ "input point referred to by the "
#~ "key. The second object in the "
#~ "sequence, is a sequence of floats "
#~ "which specify the **X**, **Y**, and "
#~ "**Z**  location of the IgnoredVertex. "
#~ "See program listing above."
#~ msgstr ""

#~ msgid ""
#~ "This method returns the object or "
#~ "objects in the IgnoredVertexArray identified"
#~ " using the specified **mask**. This "
#~ "command is generated when the "
#~ "JournalOptions are set to COMPRESSEDINDEX. "
#~ "When large number of objects are "
#~ "involved, this method is highly "
#~ "efficient."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredVertexArray.getSequenceFromMask on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignoredvertexarraypyc.htm?contextscope=all"
#~ "#simaker-ignoredvertexarraygetsequencefrommaskpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "The ModelDot object can be used to"
#~ " access an actual MeshNode, ReferencePoint,"
#~ " or ConstrainedSketchVertex object."
#~ msgstr ""

#~ msgid ""
#~ "Check `ModelDot on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-modeldotpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "The ReferencePoint object has no direct"
#~ " constructor; it is created when a"
#~ " Feature object is created. The "
#~ "ReferencePoint method creates a Feature "
#~ "object that creates a ReferencePoint "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ "Check `ReferencePoint on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-referencepointpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a ReferencePoint object at the "
#~ "specified location."
#~ msgstr ""

#~ msgid ""
#~ "A ConstrainedSketchVertex, InterestingPoint, a "
#~ "MeshNode, or a Datum object specifying"
#~ " a reference point. **point** can "
#~ "also be a sequence of three Floats"
#~ " representing the **X**, **Y**, and "
#~ "**Z** coordinates of the point."
#~ msgstr ""

#~ msgid "Used internally by the input file writer."
#~ msgstr ""

#~ msgid "A Feature object."
#~ msgstr ""

#~ msgid ":class:`Feature`"
#~ msgstr ""

#~ msgid "Vertices are point regions of geometry."
#~ msgstr ""

#~ msgid ""
#~ "Check `Vertex on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of Floats specifying the "
#~ "name of the feature that created "
#~ "this vertex."
#~ msgstr ""

#~ msgid ""
#~ "This method returns a sequence "
#~ "consisting of the edge ids of the"
#~ " edges which share this vertex."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "element objects that are associated with"
#~ " the vertex."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "node objects that are associated with"
#~ " the vertex."
#~ msgstr ""

#~ msgid ""
#~ "An Int specifying the index of the"
#~ " ConstrainedSketchVertex in the VertexArray."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of Floats specifying the "
#~ "name of the part instance for this"
#~ " vertex (if applicable)."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether the vertex"
#~ " belongs to the reference representation"
#~ " of the Part or Instance."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of Floats specifying the "
#~ "**X** -, **Y** -, and **Z** "
#~ "-coordinates of the vertex."
#~ msgstr ""

#~ msgid ""
#~ "Bases: :py:class:`~typing.Dict`\\ [:py:class:`int`, "
#~ ":py:class:`~abaqus.BasicGeometry.ReferencePoint.ReferencePoint`]"
#~ msgstr ""

#~ msgid ""
#~ "The MakeSketchTransform method creates a "
#~ "Transform object. The Transform object "
#~ "has no direct constructor. A Transform"
#~ " object is a 4x3 matrix of "
#~ "Floats that represents the transformation "
#~ "from sketch coordinates to assembly "
#~ "coordinates or to part coordinates."
#~ msgstr ""

#~ msgid ""
#~ "Check `Transform on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-transformpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "This method returns the transformation matrix as a tuple of 12 Floats."
#~ msgstr ""

#~ msgid "A tuple of 12 Floats."
#~ msgstr ""

#~ msgid ""
#~ ":class:`Tuple[float`, :class:`float`, :class:`float`, "
#~ ":class:`float`, :class:`float`, :class:`float`, "
#~ ":class:`float`, :class:`float`, :class:`float`, "
#~ ":class:`float`, :class:`float`, :class:`float]`"
#~ msgstr ""

#~ msgid ""
#~ "Bases: :py:class:`~typing.List`\\ "
#~ "[:py:class:`~abaqus.BasicGeometry.Vertex.Vertex`]"
#~ msgstr ""

#~ msgid ""
#~ "The VertexArray is a sequence of "
#~ "ConstrainedSketchVertex objects. If the part"
#~ " is modified, then VertexArray must "
#~ "be updated for that part."
#~ msgstr ""

#~ msgid ""
#~ "Check `VertexArray on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "This method creates a VertexArray object."
#~ msgstr ""

#~ msgid "A list of ConstrainedSketchVertex objects."
#~ msgstr ""

#~ msgid "A VertexArray object."
#~ msgstr ""

#~ msgid ":class:`VertexArray`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns the object or "
#~ "objects in the VertexArray located at"
#~ " the given coordinates. findAt initially"
#~ " uses the ACIS tolerance of 1E-6. "
#~ "As a result, findAt returns any "
#~ "ConstrainedSketchVertex object that is at "
#~ "the arbitrary point specified or at "
#~ "a distance of less than 1E-6 from"
#~ " the arbitrary point. If nothing is"
#~ " found, findAt uses the tolerance for"
#~ " imprecise geometry (applicable only for"
#~ " imprecise geometric entities). findAt will"
#~ " always try to find objects among "
#~ "all the vertices in the part or"
#~ " assembly instance and will not "
#~ "restrict itself to a subset even "
#~ "if the VertexArray represents such "
#~ "subset."
#~ msgstr ""

#~ msgid ""
#~ "Check `VertexArray.findAt on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all"
#~ "#simaker-vertexarrayfindatpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**, **Y**, and **Z** coordinates of"
#~ " the object to find.findAt returns "
#~ "either a ConstrainedSketchVertex object or "
#~ "a sequence of ConstrainedSketchVertex objects"
#~ " based on the type of input.  *"
#~ " If **coordinates** is a sequence of"
#~ " Floats, findAt returns the "
#~ "ConstrainedSketchVertex object at that point."
#~ "  * If you omit the **coordinates**"
#~ " keyword argument, findAt accepts as "
#~ "arguments a sequence of sequence   of"
#~ " floats in the following format::      "
#~ "verts = v.findAt(((20.19686, -169.513997, "
#~ "27.798593), ),                     ((19.657627, "
#~ "-167.295749, 27.056402), ),                     "
#~ "((18.274129, -157.144741, 25.15218), ))"
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**, **Y**, and **Z** coordinates of"
#~ " the object to find.findAt returns "
#~ "either a ConstrainedSketchVertex object or "
#~ "a sequence of ConstrainedSketchVertex objects"
#~ " based on the type of input."
#~ msgstr ""

#~ msgid ""
#~ "If **coordinates** is a sequence of "
#~ "Floats, findAt returns the "
#~ "ConstrainedSketchVertex object at that point."
#~ msgstr ""

#~ msgid ""
#~ "A ConstrainedSketchVertex object or a "
#~ "sequence of ConstrainedSketchVertex objects.."
#~ msgstr ""

#~ msgid ":class:`ConstrainedSketchVertex`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a dictionary of "
#~ "two tuples representing minimum and "
#~ "maximum boundary values of the bounding"
#~ " box of the minimum size containing"
#~ " the vertex sequence."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "vertex objects that lie within the "
#~ "specified bounding box."
#~ msgstr ""

#~ msgid ""
#~ "Check `VertexArray.getByBoundingBox on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all"
#~ "#simaker-vertexarraygetbyboundingboxpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A VertexArray object, which is a "
#~ "sequence of ConstrainedSketchVertex objects.."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "vertex objects that lie within the "
#~ "specified bounding cylinder."
#~ msgstr ""

#~ msgid ""
#~ "Check `VertexArray.getByBoundingCylinder on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all"
#~ "#simaker-vertexarraygetbyboundingcylinderpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method returns an array of "
#~ "vertex objects that lie within the "
#~ "specified bounding sphere."
#~ msgstr ""

#~ msgid ""
#~ "Check `VertexArray.getByBoundingSphere on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all"
#~ "#simaker-vertexarraygetbyboundingspherepyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method returns a object or "
#~ "objects in the VertexArray closest to"
#~ " the given set of points, where "
#~ "the given points need not lie on"
#~ " ConstrainedSketchVertex objects in the "
#~ "VertexArray."
#~ msgstr ""

#~ msgid ""
#~ "Check `VertexArray.getClosest on help.3ds.com/2017"
#~ " "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all"
#~ "#simaker-vertexarraygetclosestpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of a sequence of "
#~ "floats, where each sequence of floats"
#~ " describes the **X**, **Y**, and "
#~ "**Z** coordinates of a point::      >>>"
#~ " r=v.getClosest(coordinates=((20.0, 20.0, 10.0),(-1.0,"
#~ " -15.0, 15), ))     >>> r.keys()     "
#~ "[0, 1]     >>> r[0]     "
#~ "(mdb.models['Model-1'].parts['Part-1'].vertices[0], "
#~ "(15.7090625762939, 29.1666641235352, 20.0))"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a dictionary object."
#~ " The key to the dictionary object "
#~ "is the position of the input point"
#~ " in the tuple specified in the "
#~ "**coordinates** starting at index 0. If"
#~ " a closest vertex could be found "
#~ "then the value is a sequence "
#~ "consisting of two objects. The first "
#~ "object in the sequence is a "
#~ "ConstrainedSketchVertex that is close to "
#~ "the input point referred to by the"
#~ " key. The second object in the "
#~ "sequence is a sequence of floats "
#~ "that specifies the **X**, **Y**, and "
#~ "**Z**  location of the "
#~ "ConstrainedSketchVertex. See program listing "
#~ "above."
#~ msgstr ""

#~ msgid ""
#~ "This method returns the object or "
#~ "objects in the VertexArray identified "
#~ "using the specified **mask**. This "
#~ "command is generated when the "
#~ "JournalOptions are set to COMPRESSEDINDEX. "
#~ "When a large number of objects are"
#~ " involved, this method is highly "
#~ "efficient."
#~ msgstr ""

#~ msgid ""
#~ "Check `VertexArray.getSequenceFromMask on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all"
#~ "#simaker-vertexarraygetsequencefrommaskpyc>`__."
#~ msgstr ""

