# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, WANG Hailin
# This file is distributed under the same license as the abqpy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abqpy \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-05-13 03:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../../reference/mdb/model/property.md:1
msgid "Property"
msgstr ""

#: ../../../reference/mdb/model/property.md:3
msgid ""
"The Property commands are used to create and manage reinforcements and to "
"assign properties to a part. (See also Material commands and Section "
"commands.) The Property commands are methods of a Part object."
msgstr ""

#: ../../../reference/mdb/model/property.md:6
msgid "Create properties for Part"
msgstr ""

#: ../../../reference/mdb/model/property.md:16
msgid "Other Classes"
msgstr ""

#~ msgid "Bases: :py:class:`~abaqus.Part.PartBase.PartBase`"
#~ msgstr ""

#~ msgid "Public Data Attributes:"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`geometryValidity "
#~ "<abaqus.Part.PartBase.PartBase.geometryValidity>`\\"
#~ msgstr ""

#~ msgid "A Boolean specifying the validity of the geometry of the part."
#~ msgstr ""

#~ msgid ":py:obj:`isOutOfDate <abaqus.Part.PartBase.PartBase.isOutOfDate>`\\"
#~ msgstr ""

#~ msgid ""
#~ "An Int specifying that feature "
#~ "parameters have been modified but that"
#~ " the part has not been regenerated."
#~ msgstr ""

#~ msgid ":py:obj:`timeStamp <abaqus.Part.PartBase.PartBase.timeStamp>`\\"
#~ msgstr ""

#~ msgid "A Float specifying when the part was last modified."
#~ msgstr ""

#~ msgid ":py:obj:`vertices <abaqus.Part.PartBase.PartBase.vertices>`\\"
#~ msgstr ""

#~ msgid "A VertexArray object specifying all the vertices in the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ignoredVertices "
#~ "<abaqus.Part.PartBase.PartBase.ignoredVertices>`\\"
#~ msgstr ""

#~ msgid ""
#~ "An IgnoredVertexArray object specifying all"
#~ " the ignored vertices in the part."
#~ msgstr ""

#~ msgid ":py:obj:`edges <abaqus.Part.PartBase.PartBase.edges>`\\"
#~ msgstr ""

#~ msgid "An EdgeArray object specifying all the edges in the part."
#~ msgstr ""

#~ msgid ":py:obj:`ignoredEdges <abaqus.Part.PartBase.PartBase.ignoredEdges>`\\"
#~ msgstr ""

#~ msgid ""
#~ "An IgnoredEdgeArray object specifying all "
#~ "the ignored edges in the part."
#~ msgstr ""

#~ msgid ":py:obj:`faces <abaqus.Part.PartBase.PartBase.faces>`\\"
#~ msgstr ""

#~ msgid "A FaceArray object specifying all the faces in the part."
#~ msgstr ""

#~ msgid ":py:obj:`cells <abaqus.Part.PartBase.PartBase.cells>`\\"
#~ msgstr ""

#~ msgid "A CellArray object specifying all the cells in the part."
#~ msgstr ""

#~ msgid ":py:obj:`features <abaqus.Part.PartBase.PartBase.features>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Feature objects "
#~ "specifying all the features in the "
#~ "part."
#~ msgstr ""

#~ msgid ":py:obj:`featuresById <abaqus.Part.PartBase.PartBase.featuresById>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Feature objects "
#~ "specifying all Feature objects in the"
#~ " part."
#~ msgstr ""

#~ msgid ":py:obj:`datums <abaqus.Part.PartBase.PartBase.datums>`\\"
#~ msgstr ""

#~ msgid "A repository of Datum objects specifying all the datums in the part."
#~ msgstr ""

#~ msgid ":py:obj:`elements <abaqus.Part.PartBase.PartBase.elements>`\\"
#~ msgstr ""

#~ msgid "A MeshElementArray object specifying all the elements in the part."
#~ msgstr ""

#~ msgid ":py:obj:`elemFaces <abaqus.Part.PartBase.PartBase.elemFaces>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of MeshFace objects "
#~ "specifying all the element faces in "
#~ "the part."
#~ msgstr ""

#~ msgid ":py:obj:`elementFaces <abaqus.Part.PartBase.PartBase.elementFaces>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A MeshFaceArray object specifying all "
#~ "the unique element faces in the "
#~ "part."
#~ msgstr ""

#~ msgid ":py:obj:`nodes <abaqus.Part.PartBase.PartBase.nodes>`\\"
#~ msgstr ""

#~ msgid "A MeshNodeArray object specifying all the nodes in the part."
#~ msgstr ""

#~ msgid ":py:obj:`retainedNodes <abaqus.Part.PartBase.PartBase.retainedNodes>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A MeshNodeArray object specifying all "
#~ "the retained nodes in the substructure"
#~ " part."
#~ msgstr ""

#~ msgid ":py:obj:`sets <abaqus.Part.PartBase.PartBase.sets>`\\"
#~ msgstr ""

#~ msgid "A repository of Set objects specifying for more information, see Set."
#~ msgstr ""

#~ msgid ":py:obj:`allSets <abaqus.Part.PartBase.PartBase.allSets>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Set objects specifying"
#~ " the contents of the **allSets** "
#~ "repository is the same as the "
#~ "contents of the **sets** repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`allInternalSets "
#~ "<abaqus.Part.PartBase.PartBase.allInternalSets>`\\"
#~ msgstr ""

#~ msgid "A repository of Set objects specifying picked regions."
#~ msgstr ""

#~ msgid ":py:obj:`surfaces <abaqus.Part.PartBase.PartBase.surfaces>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Surface objects "
#~ "specifying for more information, see "
#~ "Surface."
#~ msgstr ""

#~ msgid ":py:obj:`allSurfaces <abaqus.Part.PartBase.PartBase.allSurfaces>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Surface objects "
#~ "specifying the contents of the "
#~ "**allSurfaces** repository is the same "
#~ "as the contents of the **surfaces** "
#~ "repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`allInternalSurfaces "
#~ "<abaqus.Part.PartBase.PartBase.allInternalSurfaces>`\\"
#~ msgstr ""

#~ msgid "A repository of Surface objects specifying picked regions."
#~ msgstr ""

#~ msgid ":py:obj:`skins <abaqus.Part.PartBase.PartBase.skins>`\\"
#~ msgstr ""

#~ msgid "A repository of Skin objects specifying the skins created on the part."
#~ msgstr ""

#~ msgid ":py:obj:`stringers <abaqus.Part.PartBase.PartBase.stringers>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Stringer objects "
#~ "specifying the stringers created on the"
#~ " part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`referencePoints "
#~ "<abaqus.Part.PartBase.PartBase.referencePoints>`\\"
#~ msgstr ""

#~ msgid "A repository of ReferencePoint objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`engineeringFeatures "
#~ "<abaqus.Part.PartBase.PartBase.engineeringFeatures>`\\"
#~ msgstr ""

#~ msgid "An EngineeringFeature object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`sectionAssignments "
#~ "<abaqus.Part.PartBase.PartBase.sectionAssignments>`\\"
#~ msgstr ""

#~ msgid "A SectionAssignmentArray object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`materialOrientations "
#~ "<abaqus.Part.PartBase.PartBase.materialOrientations>`\\"
#~ msgstr ""

#~ msgid "A MaterialOrientationArray object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`compositeLayups "
#~ "<abaqus.Part.PartBase.PartBase.compositeLayups>`\\"
#~ msgstr ""

#~ msgid "A repository of CompositeLayup objects."
#~ msgstr ""

#~ msgid ":py:obj:`elemEdges <abaqus.Part.PartBase.PartBase.elemEdges>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of MeshEdge objects "
#~ "specifying all the element edges in "
#~ "the part."
#~ msgstr ""

#~ msgid ":py:obj:`elementEdges <abaqus.Part.PartBase.PartBase.elementEdges>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A MeshEdgeArray object specifying all "
#~ "the unique element edges in the "
#~ "part."
#~ msgstr ""

#~ msgid ":py:obj:`name <abaqus.Part.PartBase.PartBase.name>`\\"
#~ msgstr ""

#~ msgid "A String specifying the repository key."
#~ msgstr ""

#~ msgid ":py:obj:`id <abaqus.Part.PartBase.PartBase.id>`\\"
#~ msgstr ""

#~ msgid "An Int specifying the ID of the feature."
#~ msgstr ""

#~ msgid ":py:obj:`name <abaqus.Feature.Feature.Feature.name>`\\"
#~ msgstr ""

#~ msgid ":py:obj:`id <abaqus.Feature.Feature.Feature.id>`\\"
#~ msgstr ""

#~ msgid "Public Methods:"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`CompositeLayup "
#~ "<abaqus.Property.PropertyPart.PropertyPart.CompositeLayup>`\\ "
#~ "\\(name\\[\\, description\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method creates a CompositeLayup object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`SectionAssignment "
#~ "<abaqus.Property.PropertyPart.PropertyPart.SectionAssignment>`\\ "
#~ "\\(region\\, sectionName\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method creates a SectionAssignment object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`MaterialOrientation "
#~ "<abaqus.Property.PropertyPart.PropertyPart.MaterialOrientation>`\\ "
#~ "\\(\\[region\\, localCsys\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method creates a MaterialOrientation object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`assignBeamSectionOrientation "
#~ "<abaqus.Property.PropertyPart.PropertyPart.assignBeamSectionOrientation>`\\"
#~ " \\(region\\, method\\, n1\\)"
#~ msgstr ""

#~ msgid "This method assigns a beam section orientation to a region of a part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`assignMaterialOrientation "
#~ "<abaqus.Property.PropertyPart.PropertyPart.assignMaterialOrientation>`\\"
#~ " \\(region\\, localCsys\\)"
#~ msgstr ""

#~ msgid "This method assigns a material orientation to a region."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`assignRebarOrientation "
#~ "<abaqus.Property.PropertyPart.PropertyPart.assignRebarOrientation>`\\"
#~ " \\(region\\, localCsys\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method assigns a rebar reference orientation to a region."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`flipNormal "
#~ "<abaqus.Property.PropertyPart.PropertyPart.flipNormal>`\\ "
#~ "\\(regions\\[\\, referenceRegion\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method flips the normals of "
#~ "shell or membrane elements of an "
#~ "orphan mesh or of two-dimensional "
#~ "geometric regions."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`flipTangent "
#~ "<abaqus.Property.PropertyPart.PropertyPart.flipTangent>`\\ "
#~ "\\(regions\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method flips the tangents of "
#~ "beam or truss elements of an "
#~ "orphan mesh or of one-dimensional "
#~ "geometric regions."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`unassignBeamSectionOrientation "
#~ "<abaqus.Property.PropertyPart.PropertyPart.unassignBeamSectionOrientation>`\\"
#~ " \\(index\\)"
#~ msgstr ""

#~ msgid "This method deletes a beam section orientation assignment."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`unassignMaterialOrientation "
#~ "<abaqus.Property.PropertyPart.PropertyPart.unassignMaterialOrientation>`\\"
#~ " \\(index\\)"
#~ msgstr ""

#~ msgid "This method deletes a material orientation assignment."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`unassignRebarOrientation "
#~ "<abaqus.Property.PropertyPart.PropertyPart.unassignRebarOrientation>`\\"
#~ " \\(index\\)"
#~ msgstr ""

#~ msgid "This method deletes a rebar orientation assignment."
#~ msgstr ""

#~ msgid ":py:obj:`__init__ <abaqus.Part.PartBase.PartBase.__init__>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromBooleanCut "
#~ "<abaqus.Part.PartBase.PartBase.PartFromBooleanCut>`\\ \\(name\\,"
#~ " instanceToBeCut\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Part in the"
#~ " parts repository after subtracting or "
#~ "cutting the geometries of a group "
#~ "of part instances from that of a"
#~ " base part instance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromBooleanMerge "
#~ "<abaqus.Part.PartBase.PartBase.PartFromBooleanMerge>`\\ "
#~ "\\(name\\, instances\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Part in the"
#~ " parts repository after merging two "
#~ "or more part instances."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromExtrude2DMesh "
#~ "<abaqus.Part.PartBase.PartBase.PartFromExtrude2DMesh>`\\ "
#~ "\\(name\\, part\\, depth\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Part object "
#~ "by extruding an existing two-dimensional"
#~ " orphan mesh Part object in the "
#~ "positive **Z** direction and places it"
#~ " in the parts repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromGeometryFile "
#~ "<abaqus.Part.PartBase.PartBase.PartFromGeometryFile>`\\ "
#~ "\\(name\\, geometryFile\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Part object "
#~ "and places it in the parts "
#~ "repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromInstanceMesh "
#~ "<abaqus.Part.PartBase.PartBase.PartFromInstanceMesh>`\\ "
#~ "\\(name\\[\\, partInstances\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Part object "
#~ "containing the mesh found in the "
#~ "supplied PartInstance objects and places "
#~ "the new Part object in the parts"
#~ " repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromMesh "
#~ "<abaqus.Part.PartBase.PartBase.PartFromMesh>`\\ \\(name\\[\\,"
#~ " copySets\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Part object "
#~ "containing the mesh found in the "
#~ "part and places the new Part "
#~ "object in the parts repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromMeshMirror "
#~ "<abaqus.Part.PartBase.PartBase.PartFromMeshMirror>`\\ \\(name\\,"
#~ " part\\, point1\\, point2\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Part object "
#~ "by mirroring an existing orphan mesh "
#~ "Part object about a specified plane "
#~ "and places it in the parts "
#~ "repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromNodesAndElements "
#~ "<abaqus.Part.PartBase.PartBase.PartFromNodesAndElements>`\\ "
#~ "\\(name\\, ...\\[\\, twist\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Part object "
#~ "from nodes and elements and places "
#~ "it in the parts repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromOdb "
#~ "<abaqus.Part.PartBase.PartBase.PartFromOdb>`\\ \\(name\\, "
#~ "odb\\[\\, fileName\\, instance\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an orphan mesh "
#~ "Part object by reading an output "
#~ "database."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromSection3DMeshByPlane "
#~ "<abaqus.Part.PartBase.PartBase.PartFromSection3DMeshByPlane>`\\ "
#~ "\\(name\\, part\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Part object "
#~ "by cutting an existing three-dimensional"
#~ " orphan mesh Part object by a "
#~ "plane and places it in the parts"
#~ " repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartFromSubstructure "
#~ "<abaqus.Part.PartBase.PartBase.PartFromSubstructure>`\\ "
#~ "\\(name\\, substructureFile\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a substructure Part"
#~ " object by reading a substructure sim"
#~ " file and places it in the "
#~ "parts repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Part2DGeomFrom2DMesh "
#~ "<abaqus.Part.PartBase.PartBase.Part2DGeomFrom2DMesh>`\\ "
#~ "\\(name\\, part\\, featureAngle\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a geometric Part "
#~ "object from the outline of an "
#~ "existing two-dimensional orphan mesh "
#~ "Part object and places it in the"
#~ " parts repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`setValues <abaqus.Part.PartBase.PartBase.setValues>`\\"
#~ " \\(\\*args\\, \\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid "This method modifies the Part object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`addGeomToSketch "
#~ "<abaqus.Part.PartBase.PartBase.addGeomToSketch>`\\ \\(sketch\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method converts a part into a"
#~ " sketch by projecting all of the "
#~ "edges of the part onto the X-Y "
#~ "plane of the sketch."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`assignThickness "
#~ "<abaqus.Part.PartBase.PartBase.assignThickness>`\\ "
#~ "\\(faces\\[\\, thickness\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method assigns thickness data to shell faces."
#~ msgstr ""

#~ msgid ":py:obj:`backup <abaqus.Part.PartBase.PartBase.backup>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method makes a backup copy of the features in the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`checkGeometry "
#~ "<abaqus.Part.PartBase.PartBase.checkGeometry>`\\ "
#~ "\\(\\[detailed\\, reportFacetErrors\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method checks the validity of "
#~ "the geometry of the part and "
#~ "prints a count of all topological "
#~ "entities on the part (faces, edges, "
#~ "vertices, etc.)."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`clearGeometryCache "
#~ "<abaqus.Part.PartBase.PartBase.clearGeometryCache>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method clears the geometry cache."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`deleteAllFeatures "
#~ "<abaqus.Part.PartBase.PartBase.deleteAllFeatures>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method deletes all the features in the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`deleteFeatures "
#~ "<abaqus.Part.PartBase.PartBase.deleteFeatures>`\\ "
#~ "\\(featureNames\\)"
#~ msgstr ""

#~ msgid "This method deletes the given features."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getAngle <abaqus.Part.PartBase.PartBase.getAngle>`\\"
#~ " \\(plane1\\, plane2\\, line1\\, line2\\[\\, "
#~ "...\\]\\)"
#~ msgstr ""

#~ msgid "This method returns the angle between the specified entities."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getArea <abaqus.Part.PartBase.PartBase.getArea>`\\ "
#~ "\\(faces\\[\\, relativeAccuracy\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns the total surface"
#~ " area of a given face or group"
#~ " of faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getAssociatedCADPaths "
#~ "<abaqus.Part.PartBase.PartBase.getAssociatedCADPaths>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method returns the paths to the associated CAD part and root file."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getCADParameters "
#~ "<abaqus.Part.PartBase.PartBase.getCADParameters>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns the names and "
#~ "values of the CAD parameters associated"
#~ " with the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getCentroid "
#~ "<abaqus.Part.PartBase.PartBase.getCentroid>`\\ \\(faces\\, "
#~ "cells\\[\\, relativeAccuracy\\]\\)"
#~ msgstr ""

#~ msgid "Location of the centroid of a given face/cell or group of faces/cells."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getCoordinates "
#~ "<abaqus.Part.PartBase.PartBase.getCoordinates>`\\ \\(entity\\)"
#~ msgstr ""

#~ msgid "This method returns the coordinates of specified point."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getCurvature "
#~ "<abaqus.Part.PartBase.PartBase.getCurvature>`\\ \\(edges\\[\\,"
#~ " samplePoints\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns the maximum "
#~ "curvature of a given edge or group"
#~ " of edges."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getDistance "
#~ "<abaqus.Part.PartBase.PartBase.getDistance>`\\ \\(entity1\\, "
#~ "entity2\\)"
#~ msgstr ""

#~ msgid ""
#~ "Depending on the arguments provided, "
#~ "this method returns one of the "
#~ "following:"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getLength <abaqus.Part.PartBase.PartBase.getLength>`\\"
#~ " \\(edges\\)"
#~ msgstr ""

#~ msgid "This method returns the length of a given edge or group of edges."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getPerimeter "
#~ "<abaqus.Part.PartBase.PartBase.getPerimeter>`\\ \\(faces\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns the total perimeter"
#~ " of a given face or group of"
#~ " faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getVolume <abaqus.Part.PartBase.PartBase.getVolume>`\\"
#~ " \\(cells\\[\\, relativeAccuracy\\]\\)"
#~ msgstr ""

#~ msgid "This method returns the volume area of a given cell or group of cells."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getMassProperties "
#~ "<abaqus.Part.PartBase.PartBase.getMassProperties>`\\ "
#~ "\\(\\[regions\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method returns the mass properties of a part or region."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getFeatureFaces "
#~ "<abaqus.Part.PartBase.PartBase.getFeatureFaces>`\\ \\(name\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a sequence of "
#~ "Face objects that are created by "
#~ "the given feature."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getFeatureEdges "
#~ "<abaqus.Part.PartBase.PartBase.getFeatureEdges>`\\ \\(name\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a sequence of "
#~ "Edge objects that are created by "
#~ "the given feature."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getFeatureCells "
#~ "<abaqus.Part.PartBase.PartBase.getFeatureCells>`\\ \\(name\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a sequence of "
#~ "Cell objects that are created by "
#~ "the given feature."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getFeatureVertices "
#~ "<abaqus.Part.PartBase.PartBase.getFeatureVertices>`\\ \\(name\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a sequence of "
#~ "ConstrainedSketchVertex objects that are "
#~ "created by the given feature."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`isAlignedWithSketch "
#~ "<abaqus.Part.PartBase.PartBase.isAlignedWithSketch>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method checks if the normal "
#~ "of an analytical rigid surface part "
#~ "is aligned with that of its "
#~ "sketch."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`printAssignedSections "
#~ "<abaqus.Part.PartBase.PartBase.printAssignedSections>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method prints information on each"
#~ " section that has been assigned to"
#~ " a region of the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`projectEdgesOntoSketch "
#~ "<abaqus.Part.PartBase.PartBase.projectEdgesOntoSketch>`\\ "
#~ "\\(sketch\\, edges\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method projects the selected edges"
#~ " of a part onto the specified "
#~ "ConstrainedSketch object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`projectReferencesOntoSketch "
#~ "<abaqus.Part.PartBase.PartBase.projectReferencesOntoSketch>`\\ "
#~ "\\(sketch\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method projects the vertices of "
#~ "specified edges, and datum points from"
#~ " the part onto the specified "
#~ "ConstrainedSketch object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`queryAttributes "
#~ "<abaqus.Part.PartBase.PartBase.queryAttributes>`\\ "
#~ "\\(\\[printResults\\]\\)"
#~ msgstr ""

#~ msgid "This method prints the following information about a part:"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`queryCachedStates "
#~ "<abaqus.Part.PartBase.PartBase.queryCachedStates>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method displays the position of "
#~ "geometric states relative to the "
#~ "sequence of features in the part "
#~ "cache."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`queryGeometry "
#~ "<abaqus.Part.PartBase.PartBase.queryGeometry>`\\ "
#~ "\\(\\[relativeAccuracy\\, printResults\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`queryRegionsMissingSections "
#~ "<abaqus.Part.PartBase.PartBase.queryRegionsMissingSections>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns all regions in "
#~ "the part that do not have a "
#~ "section assignment but require one for"
#~ " analysis."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`queryDisjointPlyRegions "
#~ "<abaqus.Part.PartBase.PartBase.queryDisjointPlyRegions>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method provides a list of all"
#~ " composite plys in the current part"
#~ " which have disjoint regions."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`regenerate "
#~ "<abaqus.Part.PartBase.PartBase.regenerate>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method regenerates a part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`regenerationWarnings "
#~ "<abaqus.Part.PartBase.PartBase.regenerationWarnings>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method prints any regeneration "
#~ "warnings associated with the features."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`removeInvalidGeometry "
#~ "<abaqus.Part.PartBase.PartBase.removeInvalidGeometry>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "Removes all invalid entities from the part, leaving a valid part."
#~ msgstr ""

#~ msgid ":py:obj:`restore <abaqus.Part.PartBase.PartBase.restore>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method restores the parameters of"
#~ " all features in the assembly to "
#~ "the value they had before a failed"
#~ " regeneration."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`resumeAllFeatures "
#~ "<abaqus.Part.PartBase.PartBase.resumeAllFeatures>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method resumes all the suppressed features in the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`resumeFeatures "
#~ "<abaqus.Part.PartBase.PartBase.resumeFeatures>`\\ "
#~ "\\(featureNames\\)"
#~ msgstr ""

#~ msgid "This method resumes the specified suppressed features in the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`resumeLastSetFeatures "
#~ "<abaqus.Part.PartBase.PartBase.resumeLastSetFeatures>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method resumes the last set "
#~ "of features to be suppressed in "
#~ "the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`saveGeometryCache "
#~ "<abaqus.Part.PartBase.PartBase.saveGeometryCache>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method caches the current geometry."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`setAssociatedCADPaths "
#~ "<abaqus.Part.PartBase.PartBase.setAssociatedCADPaths>`\\ "
#~ "\\(\\[partFile\\, rootFile\\]\\)"
#~ msgstr ""

#~ msgid "This method sets the paths to the associated CAD part and root file."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`suppressFeatures "
#~ "<abaqus.Part.PartBase.PartBase.suppressFeatures>`\\ "
#~ "\\(featureNames\\)"
#~ msgstr ""

#~ msgid "This method suppresses the given features."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`writeAcisFile "
#~ "<abaqus.Part.PartBase.PartBase.writeAcisFile>`\\ "
#~ "\\(fileName\\[\\, version\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method exports the geometry of "
#~ "the part to a named file in "
#~ "ACIS format."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`writeCADParameters "
#~ "<abaqus.Part.PartBase.PartBase.writeCADParameters>`\\ "
#~ "\\(paramFile\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method writes the parameters that"
#~ " were imported from the CAD system"
#~ " to a parameter file."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`writeIgesFile "
#~ "<abaqus.Part.PartBase.PartBase.writeIgesFile>`\\ \\(fileName\\,"
#~ " flavor\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method exports the geometry of "
#~ "the part to a named file in "
#~ "IGES format."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`writeStepFile "
#~ "<abaqus.Part.PartBase.PartBase.writeStepFile>`\\ \\(fileName\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method exports the geometry of "
#~ "the part to a named file in "
#~ "STEP format."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`writeVdaFile "
#~ "<abaqus.Part.PartBase.PartBase.writeVdaFile>`\\ \\(fileName\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method exports the geometry of "
#~ "the part to a named file in "
#~ "VDA-FS format."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`copyMeshPattern "
#~ "<abaqus.Part.PartBase.PartBase.copyMeshPattern>`\\ "
#~ "\\(elements\\, faces\\, elemFaces\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method copies a mesh pattern "
#~ "from a source region consisting of "
#~ "a set of shell elements or element"
#~ " faces onto a target face, mapping"
#~ " nodes and elements in a one-"
#~ "one correspondence between source and "
#~ "target."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`smoothNodes "
#~ "<abaqus.Part.PartBase.PartBase.smoothNodes>`\\ \\(nodes\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method smooths the given nodes "
#~ "of a native mesh, moving them "
#~ "locally to a more optimal location "
#~ "that improves the quality of the "
#~ "mesh."
#~ msgstr ""

#~ msgid ":py:obj:`Lock <abaqus.Part.PartBase.PartBase.Lock>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method locks the part."
#~ msgstr ""

#~ msgid ":py:obj:`Unlock <abaqus.Part.PartBase.PartBase.Unlock>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method unlocks the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`LockForUpgrade "
#~ "<abaqus.Part.PartBase.PartBase.LockForUpgrade>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method locks the part for upgrade."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AutoRepair "
#~ "<abaqus.Part.PartFeature.PartFeature.AutoRepair>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method carries out a sequence "
#~ "of geometry repair operations if it "
#~ "contains invalid entities."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AddCells "
#~ "<abaqus.Part.PartFeature.PartFeature.AddCells>`\\ "
#~ "\\(faceList\\[\\, flipped\\]\\)"
#~ msgstr ""

#~ msgid "This method tries to convert a shell entity to a solid entity."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AnalyticRigidSurf2DPlanar "
#~ "<abaqus.Part.PartFeature.PartFeature.AnalyticRigidSurf2DPlanar>`\\ "
#~ "\\(sketch\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object for an analytical rigid surface"
#~ " by creating a planar wire from "
#~ "the given ConstrainedSketch object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AnalyticRigidSurfExtrude "
#~ "<abaqus.Part.PartFeature.PartFeature.AnalyticRigidSurfExtrude>`\\ "
#~ "\\(sketch\\[\\, depth\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object for an analytical rigid surface"
#~ " by extruding the given ConstrainedSketch"
#~ " object by the given depth, creating"
#~ " a surface."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AnalyticRigidSurfRevolve "
#~ "<abaqus.Part.PartFeature.PartFeature.AnalyticRigidSurfRevolve>`\\ "
#~ "\\(sketch\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object for an analytical rigid surface"
#~ " by revolving the given ConstrainedSketch"
#~ " object by 360° about the **Y** "
#~ "axis."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AssignMidsurfaceRegion "
#~ "<abaqus.Part.PartFeature.PartFeature.AssignMidsurfaceRegion>`\\ "
#~ "\\(cellList\\)"
#~ msgstr ""

#~ msgid "This method assign a mid-surface property to sequence of Cell objects."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`BaseSolidExtrude "
#~ "<abaqus.Part.PartFeature.PartFeature.BaseSolidExtrude>`\\ "
#~ "\\(sketch\\, depth\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object by extruding the given "
#~ "ConstrainedSketch object by the given "
#~ "depth, creating a solid."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`BaseSolidRevolve "
#~ "<abaqus.Part.PartFeature.PartFeature.BaseSolidRevolve>`\\ "
#~ "\\(sketch\\, angle\\[\\, pitch\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object by revolving the given "
#~ "ConstrainedSketch object by the given "
#~ "angle, creating a solid."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`BaseSolidSweep "
#~ "<abaqus.Part.PartFeature.PartFeature.BaseSolidSweep>`\\ "
#~ "\\(sketch\\, path\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object by sweeping the given profile "
#~ "ConstrainedSketch object along the path "
#~ "defined by the path ConstrainedSketch "
#~ "object, creating a solid."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`BaseShell "
#~ "<abaqus.Part.PartFeature.PartFeature.BaseShell>`\\ \\(sketch\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object by creating a planar shell "
#~ "from the given ConstrainedSketch object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`BaseShellExtrude "
#~ "<abaqus.Part.PartFeature.PartFeature.BaseShellExtrude>`\\ "
#~ "\\(sketch\\, depth\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object by extruding the given "
#~ "ConstrainedSketch object by the given "
#~ "depth, creating a shell."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`BaseShellRevolve "
#~ "<abaqus.Part.PartFeature.PartFeature.BaseShellRevolve>`\\ "
#~ "\\(sketch\\, angle\\[\\, pitch\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object by revolving the given "
#~ "ConstrainedSketch object by the given "
#~ "angle, creating a shell."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`BaseShellSweep "
#~ "<abaqus.Part.PartFeature.PartFeature.BaseShellSweep>`\\ "
#~ "\\(sketch\\, path\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object by sweeping the given section "
#~ "ConstrainedSketch object along the path "
#~ "defined by the path ConstrainedSketch "
#~ "object, creating a shell."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`BaseWire "
#~ "<abaqus.Part.PartFeature.PartFeature.BaseWire>`\\ \\(sketch\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a first Feature "
#~ "object by creating a planar wire "
#~ "from the given ConstrainedSketch object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`BlendFaces "
#~ "<abaqus.Part.PartFeature.PartFeature.BlendFaces>`\\ \\(side1\\,"
#~ " side2\\[\\, method\\, path\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "by creating new faces that blends "
#~ "two sets of faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Chamfer "
#~ "<abaqus.Part.PartFeature.PartFeature.Chamfer>`\\ \\(length\\,"
#~ " edgeList\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by chamfering the given"
#~ " list of edges with a given "
#~ "length."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Mirror <abaqus.Part.PartFeature.PartFeature.Mirror>`\\"
#~ " \\(mirrorPlane\\, keepOriginal\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method mirrors existing part "
#~ "geometry across a plane to create "
#~ "new geometry."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ConvertToAnalytical "
#~ "<abaqus.Part.PartFeature.PartFeature.ConvertToAnalytical>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method attempts to change entities"
#~ " into a simpler form that will "
#~ "speed up processing and make entities"
#~ " available during feature operations."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ConvertToPrecise "
#~ "<abaqus.Part.PartFeature.PartFeature.ConvertToPrecise>`\\ "
#~ "\\(\\[method\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method attempts to change imprecise"
#~ " entities so that the geometry "
#~ "becomes precise."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`CoverEdges "
#~ "<abaqus.Part.PartFeature.PartFeature.CoverEdges>`\\ "
#~ "\\(edgeList\\[\\, tryAnalytical\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method generates a face using "
#~ "the given edges as the face's "
#~ "boundaries."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Cut <abaqus.Part.PartFeature.PartFeature.Cut>`\\ "
#~ "\\(sketchPlane\\, sketchPlaneSide\\, ...\\[\\, "
#~ "...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by cutting a hole "
#~ "using the given ConstrainedSketch object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`CutExtrude "
#~ "<abaqus.Part.PartFeature.PartFeature.CutExtrude>`\\ "
#~ "\\(sketchPlane\\, sketchPlaneSide\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by extruding the given"
#~ " ConstrainedSketch object by the given "
#~ "depth and cutting away material in "
#~ "the solid and shell regions of the"
#~ " part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`CutLoft "
#~ "<abaqus.Part.PartFeature.PartFeature.CutLoft>`\\ "
#~ "\\(loftsections\\[\\, startCondition\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by lofting between the"
#~ " given sections and cutting away "
#~ "material from the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`CutRevolve "
#~ "<abaqus.Part.PartFeature.PartFeature.CutRevolve>`\\ "
#~ "\\(sketchPlane\\, sketchPlaneSide\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by revolving the given"
#~ " ConstrainedSketch object by the given "
#~ "angle and cutting away material from "
#~ "the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`CutSweep "
#~ "<abaqus.Part.PartFeature.PartFeature.CutSweep>`\\ \\(path\\, "
#~ "profile\\[\\, pathPlane\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by sweeping the given "
#~ "ConstrainedSketch object along a path "
#~ "which may be a ConstrainedSketch or "
#~ "a sequence of Edge objects and "
#~ "cutting away material from the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ExtendFaces "
#~ "<abaqus.Part.PartFeature.PartFeature.ExtendFaces>`\\ "
#~ "\\(\\[faces\\, extendAlong\\, distance\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method extends faces along its "
#~ "free edges by offsetting the external"
#~ " edges along the surfaces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`FaceFromElementFaces "
#~ "<abaqus.Part.PartFeature.PartFeature.FaceFromElementFaces>`\\ "
#~ "\\(elementFaces\\[\\, stitch\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a geometry face "
#~ "from a collection of orphan element "
#~ "faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`HoleBlindFromEdges "
#~ "<abaqus.Part.PartFeature.PartFeature.HoleBlindFromEdges>`\\ "
#~ "\\(plane\\, planeSide\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by creating a circular"
#~ " blind hole of the given diameter "
#~ "and depth and cutting away material "
#~ "in the solid and shell regions of"
#~ " the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`HoleFromEdges "
#~ "<abaqus.Part.PartFeature.PartFeature.HoleFromEdges>`\\ "
#~ "\\(diameter\\, edge1\\, distance1\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by creating a circular"
#~ " hole of the given diameter in "
#~ "a 2D planar part and cutting away"
#~ " material in the shell and wire "
#~ "regions of the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`HoleThruAllFromEdges "
#~ "<abaqus.Part.PartFeature.PartFeature.HoleThruAllFromEdges>`\\ "
#~ "\\(plane\\, planeSide\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by creating a circular"
#~ " through hole of the given diameter"
#~ " and cutting away material in the "
#~ "solid and shell regions of the "
#~ "part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`MergeEdges "
#~ "<abaqus.Part.PartFeature.PartFeature.MergeEdges>`\\ "
#~ "\\(\\[edgeList\\, extendSelection\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method merges edges either by "
#~ "extending the user selection or using"
#~ " only the selected edges."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`OffsetFaces "
#~ "<abaqus.Part.PartFeature.PartFeature.OffsetFaces>`\\ "
#~ "\\(faceList\\[\\, distance\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method creates new faces by offsetting existing faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RemoveCells "
#~ "<abaqus.Part.PartFeature.PartFeature.RemoveCells>`\\ "
#~ "\\(cellList\\)"
#~ msgstr ""

#~ msgid "This method converts a solid entity to a shell entity."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RemoveFaces "
#~ "<abaqus.Part.PartFeature.PartFeature.RemoveFaces>`\\ "
#~ "\\(faceList\\[\\, deleteCells\\]\\)"
#~ msgstr ""

#~ msgid "This method removes faces from a solid entity or from a shell entity."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RemoveFacesAndStitch "
#~ "<abaqus.Part.PartFeature.PartFeature.RemoveFacesAndStitch>`\\ "
#~ "\\(faceList\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method removes faces from a "
#~ "solid entity and attempts to close "
#~ "the resulting gap by extending the "
#~ "neighboring faces of the solid."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RemoveRedundantEntities "
#~ "<abaqus.Part.PartFeature.PartFeature.RemoveRedundantEntities>`\\ "
#~ "\\(\\[vertexList\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method removes redundant edges and"
#~ " vertices from a solid or a "
#~ "shell entity."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RepairFaceNormals "
#~ "<abaqus.Part.PartFeature.PartFeature.RepairFaceNormals>`\\ "
#~ "\\(\\[faceList\\]\\)"
#~ msgstr ""

#~ msgid "This method works on the entire part or a sequence of shell faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RepairInvalidEdges "
#~ "<abaqus.Part.PartFeature.PartFeature.RepairInvalidEdges>`\\ "
#~ "\\(edgeList\\)"
#~ msgstr ""

#~ msgid "This method repairs invalid edges."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RepairSliver "
#~ "<abaqus.Part.PartFeature.PartFeature.RepairSliver>`\\ \\(face\\,"
#~ " point1\\, point2\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method repairs the selected sliver from the selected face."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RepairSmallEdges "
#~ "<abaqus.Part.PartFeature.PartFeature.RepairSmallEdges>`\\ "
#~ "\\(edgeList\\[\\, toleranceChecks\\]\\)"
#~ msgstr ""

#~ msgid "This method repairs small edges."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RepairSmallFaces "
#~ "<abaqus.Part.PartFeature.PartFeature.RepairSmallFaces>`\\ "
#~ "\\(faceList\\[\\, toleranceChecks\\]\\)"
#~ msgstr ""

#~ msgid "This method repairs small faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ReplaceFaces "
#~ "<abaqus.Part.PartFeature.PartFeature.ReplaceFaces>`\\ "
#~ "\\(faceList\\[\\, stitch\\]\\)"
#~ msgstr ""

#~ msgid "This method replaces the selected faces with a single face."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Round <abaqus.Part.PartFeature.PartFeature.Round>`\\"
#~ " \\(radius\\, edgeList\\, vertexList\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by rounding (filleting) "
#~ "the given list of entities with "
#~ "the given radius."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Shell <abaqus.Part.PartFeature.PartFeature.Shell>`\\"
#~ " \\(sketchPlane\\, sketchPlaneSide\\, ...\\[\\, "
#~ "...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by creating a planar "
#~ "shell from the given ConstrainedSketch "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ShellExtrude "
#~ "<abaqus.Part.PartFeature.PartFeature.ShellExtrude>`\\ "
#~ "\\(sketchPlane\\, sketchPlaneSide\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by extruding the given"
#~ " ConstrainedSketch object by the given "
#~ "depth, creating a shell protrusion."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ShellLoft "
#~ "<abaqus.Part.PartFeature.PartFeature.ShellLoft>`\\ "
#~ "\\(loftsections\\[\\, startCondition\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by lofting between the"
#~ " given sections and adding shell "
#~ "faces to the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ShellRevolve "
#~ "<abaqus.Part.PartFeature.PartFeature.ShellRevolve>`\\ "
#~ "\\(sketchPlane\\, sketchPlaneSide\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by revolving the given"
#~ " ConstrainedSketch object by the given "
#~ "angle, creating a shell protrusion."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ShellSweep "
#~ "<abaqus.Part.PartFeature.PartFeature.ShellSweep>`\\ \\(path\\,"
#~ " profile\\[\\, pathPlane\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by sweeping the given "
#~ "ConstrainedSketch object or a sequence "
#~ "of Edge objects along a path which"
#~ " may be a ConstrainedSketch or a "
#~ "sequence of Edge objects, creating a "
#~ "shell swept protrusion."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`SolidExtrude "
#~ "<abaqus.Part.PartFeature.PartFeature.SolidExtrude>`\\ "
#~ "\\(sketchPlane\\, sketchPlaneSide\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by extruding the given"
#~ " ConstrainedSketch object by the given "
#~ "depth, creating a solid protrusion."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`SolidLoft "
#~ "<abaqus.Part.PartFeature.PartFeature.SolidLoft>`\\ "
#~ "\\(loftsections\\[\\, startCondition\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by lofting between the"
#~ " given sections and adding material "
#~ "to the part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`SolidRevolve "
#~ "<abaqus.Part.PartFeature.PartFeature.SolidRevolve>`\\ "
#~ "\\(sketchPlane\\, sketchPlaneSide\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by revolving the given"
#~ " ConstrainedSketch object by the given "
#~ "angle, creating a solid protrusion."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`SolidSweep "
#~ "<abaqus.Part.PartFeature.PartFeature.SolidSweep>`\\ \\(path\\,"
#~ " profile\\[\\, pathPlane\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by sweeping the given "
#~ "ConstrainedSketch object or a Face "
#~ "object along a path which may be"
#~ " a ConstrainedSketch or a sequence of"
#~ " Edge objects, creating a solid swept"
#~ " protrusion."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Stitch <abaqus.Part.PartFeature.PartFeature.Stitch>`\\"
#~ " \\(\\[edgeList\\, stitchTolerance\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method attempts to create a "
#~ "valid part by binding together free "
#~ "and imprecise edges of all the "
#~ "faces of a part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Wire <abaqus.Part.PartFeature.PartFeature.Wire>`\\ "
#~ "\\(sketchPlane\\, sketchPlaneSide\\, ...\\[\\, "
#~ "...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by creating a planar "
#~ "wire from the given ConstrainedSketch "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`WireSpline "
#~ "<abaqus.Part.PartFeature.PartFeature.WireSpline>`\\ "
#~ "\\(points\\[\\, mergeType\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by creating a spline "
#~ "wire that passes through a sequence "
#~ "of given points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`WirePolyLine "
#~ "<abaqus.Part.PartFeature.PartFeature.WirePolyLine>`\\ "
#~ "\\(points\\[\\, mergeType\\, meshable\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by creating a polyline"
#~ " wire that passes through a sequence"
#~ " of given points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`WireFromEdge "
#~ "<abaqus.Part.PartFeature.PartFeature.WireFromEdge>`\\ "
#~ "\\(edgeList\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by creating a Wire "
#~ "by selecting one or more Edge "
#~ "objects of a Solid or Shell part."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AttachmentPoints "
#~ "<abaqus.Feature.Feature.Feature.AttachmentPoints>`\\ \\(name\\,"
#~ " points\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method creates an attachment points Feature."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AttachmentPointsAlongDirection "
#~ "<abaqus.Feature.Feature.Feature.AttachmentPointsAlongDirection>`\\ "
#~ "\\(name\\, ...\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "by creating attachment points along a"
#~ " direction or between two points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`AttachmentPointsOffsetFromEdges "
#~ "<abaqus.Feature.Feature.Feature.AttachmentPointsOffsetFromEdges>`\\"
#~ " \\(name\\, edges\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "by creating attachment points along or"
#~ " offset from one or more connected"
#~ " edges."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumAxisByCylFace "
#~ "<abaqus.Feature.Feature.Feature.DatumAxisByCylFace>`\\ "
#~ "\\(face\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumAxis object along the "
#~ "axis of a cylinder or cone."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumAxisByNormalToPlane "
#~ "<abaqus.Feature.Feature.Feature.DatumAxisByNormalToPlane>`\\ "
#~ "\\(plane\\, point\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumAxis object normal to "
#~ "the specified plane and passing through"
#~ " the specified point."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumAxisByParToEdge "
#~ "<abaqus.Feature.Feature.Feature.DatumAxisByParToEdge>`\\ "
#~ "\\(edge\\, point\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumAxis object parallel to "
#~ "the specified edge and passing through"
#~ " the specified point."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumAxisByPrincipalAxis "
#~ "<abaqus.Feature.Feature.Feature.DatumAxisByPrincipalAxis>`\\ "
#~ "\\(principalAxis\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumAxis object along one "
#~ "of the three principal axes."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumAxisByRotation "
#~ "<abaqus.Feature.Feature.Feature.DatumAxisByRotation>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumAxisByThreePoint "
#~ "<abaqus.Feature.Feature.Feature.DatumAxisByThreePoint>`\\ "
#~ "\\(point1\\, point2\\, point3\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumAxis object normal to "
#~ "the circle described by three points "
#~ "and through its center."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumAxisByThruEdge "
#~ "<abaqus.Feature.Feature.Feature.DatumAxisByThruEdge>`\\ "
#~ "\\(edge\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumAxis object along the "
#~ "specified edge."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumAxisByTwoPlane "
#~ "<abaqus.Feature.Feature.Feature.DatumAxisByTwoPlane>`\\ "
#~ "\\(plane1\\, plane2\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumAxis object at the "
#~ "intersection of two planes."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumAxisByTwoPoint "
#~ "<abaqus.Feature.Feature.Feature.DatumAxisByTwoPoint>`\\ "
#~ "\\(point1\\, point2\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumAxis object along the "
#~ "line joining two points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumCsysByDefault "
#~ "<abaqus.Feature.Feature.Feature.DatumCsysByDefault>`\\ "
#~ "\\(coordSysType\\[\\, name\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumCsys object from the "
#~ "specified default coordinate system at "
#~ "the origin."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumCsysByOffset "
#~ "<abaqus.Feature.Feature.Feature.DatumCsysByOffset>`\\ "
#~ "\\(coordSysType\\, ...\\[\\, name\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumCsys object by offsetting "
#~ "the origin of an existing datum "
#~ "coordinate system to a specified point."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumCsysByThreePoints "
#~ "<abaqus.Feature.Feature.Feature.DatumCsysByThreePoints>`\\ "
#~ "\\(coordSysType\\, origin\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumCsys object from three "
#~ "points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumCsysByTwoLines "
#~ "<abaqus.Feature.Feature.Feature.DatumCsysByTwoLines>`\\ "
#~ "\\(coordSysType\\, line1\\, line2\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumCsys object from two "
#~ "orthogonal lines."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPlaneByPrincipalPlane "
#~ "<abaqus.Feature.Feature.Feature.DatumPlaneByPrincipalPlane>`\\ "
#~ "\\(principalPlane\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPlane object through the "
#~ "origin along one of the three "
#~ "principal planes."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPlaneByOffset "
#~ "<abaqus.Feature.Feature.Feature.DatumPlaneByOffset>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPlaneByRotation "
#~ "<abaqus.Feature.Feature.Feature.DatumPlaneByRotation>`\\ "
#~ "\\(plane\\, axis\\, angle\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPlane object by rotating "
#~ "a plane about the specified axis "
#~ "through the specified angle."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPlaneByThreePoints "
#~ "<abaqus.Feature.Feature.Feature.DatumPlaneByThreePoints>`\\ "
#~ "\\(point1\\, point2\\, point3\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPlane object defined by "
#~ "passing through three points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPlaneByLinePoint "
#~ "<abaqus.Feature.Feature.Feature.DatumPlaneByLinePoint>`\\ "
#~ "\\(line\\, point\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPlane object that pass "
#~ "through the specified line and through"
#~ " the specified point that does not"
#~ " lie on the line."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPlaneByPointNormal "
#~ "<abaqus.Feature.Feature.Feature.DatumPlaneByPointNormal>`\\ "
#~ "\\(point\\, normal\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPlane object normal to "
#~ "the specified line and running through"
#~ " the specified point."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPlaneByTwoPoint "
#~ "<abaqus.Feature.Feature.Feature.DatumPlaneByTwoPoint>`\\ "
#~ "\\(point1\\, point2\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPlane object midway between"
#~ " two points and normal to the "
#~ "line connecting the points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPointByCoordinate "
#~ "<abaqus.Feature.Feature.Feature.DatumPointByCoordinate>`\\ "
#~ "\\(coords\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPoint object at the "
#~ "point defined by the specified "
#~ "coordinates."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPointByOffset "
#~ "<abaqus.Feature.Feature.Feature.DatumPointByOffset>`\\ "
#~ "\\(point\\, vector\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPoint object offset from "
#~ "an existing point by a vector."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPointByMidPoint "
#~ "<abaqus.Feature.Feature.Feature.DatumPointByMidPoint>`\\ "
#~ "\\(point1\\, point2\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPoint object midway between"
#~ " two points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPointByOnFace "
#~ "<abaqus.Feature.Feature.Feature.DatumPointByOnFace>`\\ "
#~ "\\(face\\, edge1\\, offset1\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPoint object on the "
#~ "specified face, offset from two edges."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPointByEdgeParam "
#~ "<abaqus.Feature.Feature.Feature.DatumPointByEdgeParam>`\\ "
#~ "\\(edge\\, parameter\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPoint object along an "
#~ "edge at a selected distance from "
#~ "one end of the edge."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPointByProjOnEdge "
#~ "<abaqus.Feature.Feature.Feature.DatumPointByProjOnEdge>`\\ "
#~ "\\(point\\, edge\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPoint object along an "
#~ "edge by projecting an existing point "
#~ "along the normal to the edge."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`DatumPointByProjOnFace "
#~ "<abaqus.Feature.Feature.Feature.DatumPointByProjOnFace>`\\ "
#~ "\\(point\\, face\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a DatumPoint object on a "
#~ "specified face by projecting an existing"
#~ " point onto the face."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`MakeSketchTransform "
#~ "<abaqus.Feature.Feature.Feature.MakeSketchTransform>`\\ "
#~ "\\(sketchPlane\\[\\, origin\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method creates a Transform object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionCellByDatumPlane "
#~ "<abaqus.Feature.Feature.Feature.PartitionCellByDatumPlane>`\\ "
#~ "\\(cells\\, datumPlane\\)"
#~ msgstr ""

#~ msgid "This method partitions one or more cells using the given datum plane."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionCellByExtendFace "
#~ "<abaqus.Feature.Feature.Feature.PartitionCellByExtendFace>`\\ "
#~ "\\(cells\\, extendFace\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "cells by extending the underlying "
#~ "geometry of a given face to "
#~ "partition the target cells."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionCellByExtrudeEdge "
#~ "<abaqus.Feature.Feature.Feature.PartitionCellByExtrudeEdge>`\\ "
#~ "\\(cells\\, edges\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "cells by extruding selected edges in "
#~ "the given direction."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionCellByPatchNCorners "
#~ "<abaqus.Feature.Feature.Feature.PartitionCellByPatchNCorners>`\\ "
#~ "\\(cell\\, cornerPoints\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions a cell using "
#~ "an N-sided cutting patch defined by "
#~ "the given corner points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionCellByPatchNEdges "
#~ "<abaqus.Feature.Feature.Feature.PartitionCellByPatchNEdges>`\\ "
#~ "\\(cell\\, edges\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions a cell using "
#~ "an N-sided cutting patch defined by "
#~ "the given edges."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionCellByPlaneNormalToEdge "
#~ "<abaqus.Feature.Feature.Feature.PartitionCellByPlaneNormalToEdge>`\\"
#~ " \\(cells\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "cells using a plane normal to an"
#~ " edge at the given edge point."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionCellByPlanePointNormal "
#~ "<abaqus.Feature.Feature.Feature.PartitionCellByPlanePointNormal>`\\"
#~ " \\(cells\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "cells using a plane defined by a"
#~ " point and a normal direction."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionCellByPlaneThreePoints "
#~ "<abaqus.Feature.Feature.Feature.PartitionCellByPlaneThreePoints>`\\"
#~ " \\(cells\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "cells using a plane defined by "
#~ "three points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionCellBySweepEdge "
#~ "<abaqus.Feature.Feature.Feature.PartitionCellBySweepEdge>`\\ "
#~ "\\(cells\\, edges\\, sweepPath\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "cells by sweeping selected edges along"
#~ " the given sweep path."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionEdgeByDatumPlane "
#~ "<abaqus.Feature.Feature.Feature.PartitionEdgeByDatumPlane>`\\ "
#~ "\\(edges\\, datumPlane\\)"
#~ msgstr ""

#~ msgid "This method partitions an edge where it intersects with a datum plane."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionEdgeByParam "
#~ "<abaqus.Feature.Feature.Feature.PartitionEdgeByParam>`\\ "
#~ "\\(edges\\, parameter\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "edges at the given normalized edge "
#~ "parameter."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionEdgeByPoint "
#~ "<abaqus.Feature.Feature.Feature.PartitionEdgeByPoint>`\\ "
#~ "\\(edge\\, point\\)"
#~ msgstr ""

#~ msgid "This method partitions an edge at the given point."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceByAuto "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceByAuto>`\\ "
#~ "\\(face\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method automatically partitions a "
#~ "target face into simple regions that "
#~ "can be meshed using a structured "
#~ "meshing technique."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceByCurvedPathEdgeParams "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceByCurvedPathEdgeParams>`\\"
#~ " \\(face\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions a face normal "
#~ "to two edges, using a curved path"
#~ " between the two given edge points"
#~ " defined by the normalized edge "
#~ "parameters."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceByCurvedPathEdgePoints "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceByCurvedPathEdgePoints>`\\"
#~ " \\(face\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions a face normal "
#~ "to two edges, using a curved path"
#~ " between the two given edge points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceByDatumPlane "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceByDatumPlane>`\\ "
#~ "\\(faces\\, datumPlane\\)"
#~ msgstr ""

#~ msgid "This method partitions one or more faces using the given datum plane."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceByExtendFace "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceByExtendFace>`\\ "
#~ "\\(faces\\, extendFace\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "faces by extending the underlying "
#~ "geometry of another given face to "
#~ "partition the target faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceByIntersectFace "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceByIntersectFace>`\\ "
#~ "\\(faces\\, cuttingFaces\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "faces using the given cutting faces "
#~ "to partition the target faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceByProjectingEdges "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceByProjectingEdges>`\\ "
#~ "\\(faces\\, edges\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "faces by projecting the given edges "
#~ "on the target faces."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceByShortestPath "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceByShortestPath>`\\ "
#~ "\\(faces\\, point1\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "faces using a minimum distance path "
#~ "between the two given points."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceBySketch "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceBySketch>`\\ "
#~ "\\(faces\\, sketch\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method partitions one or more planar faces by sketching on them."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceBySketchDistance "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceBySketchDistance>`\\ "
#~ "\\(faces\\, ...\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "faces by sketching on a sketch "
#~ "plane and then projecting the sketch "
#~ "toward the target faces through the "
#~ "given distance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceBySketchRefPoint "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceBySketchRefPoint>`\\ "
#~ "\\(faces\\, ...\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "faces by sketching on a sketch "
#~ "plane and then projecting the sketch "
#~ "toward the target faces through a "
#~ "distance governed by the reference "
#~ "point."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`PartitionFaceBySketchThruAll "
#~ "<abaqus.Feature.Feature.Feature.PartitionFaceBySketchThruAll>`\\ "
#~ "\\(faces\\, ...\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method partitions one or more "
#~ "faces by sketching on a sketch "
#~ "plane and then projecting toward the "
#~ "target faces through an infinite "
#~ "distance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`ReferencePoint "
#~ "<abaqus.Feature.Feature.Feature.ReferencePoint>`\\ "
#~ "\\(point\\[\\, instanceName\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Feature object "
#~ "and a ReferencePoint object at the "
#~ "specified location."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`RemoveWireEdges "
#~ "<abaqus.Feature.Feature.Feature.RemoveWireEdges>`\\ "
#~ "\\(wireEdgeList\\)"
#~ msgstr ""

#~ msgid "This method removes wire edges."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`WirePolyLine "
#~ "<abaqus.Feature.Feature.Feature.WirePolyLine>`\\ \\(points\\[\\,"
#~ " mergeType\\, meshable\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method creates an additional "
#~ "Feature object by creating a series "
#~ "of wires joining points in pairs."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`isSuppressed "
#~ "<abaqus.Feature.Feature.Feature.isSuppressed>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method queries the suppressed state of the feature."
#~ msgstr ""

#~ msgid ":py:obj:`restore <abaqus.Feature.Feature.Feature.restore>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method restores the parameters of"
#~ " a feature to the value they "
#~ "had when the backup method was "
#~ "invoked on the part or assembly."
#~ msgstr ""

#~ msgid ":py:obj:`resume <abaqus.Feature.Feature.Feature.resume>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method resumes suppressed features."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`setValues <abaqus.Feature.Feature.Feature.setValues>`\\"
#~ " \\(\\[parameter\\, parameter1\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method modifies the Feature object."
#~ msgstr ""

#~ msgid ":py:obj:`suppress <abaqus.Feature.Feature.Feature.suppress>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method suppresses features."
#~ msgstr ""

#~ msgid "Member Details:"
#~ msgstr ""

#~ msgid "This function can be accessed by::"
#~ msgstr ""

#~ msgid ""
#~ "Check `CompositeLayup on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-compositelayuppyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

#~ msgid "A String specifying a description of the composite layup."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the method "
#~ "used to define the shell offset. "
#~ "If **offsetType** = OFFSET_FIELD the "
#~ "**offsetField** argument is required. This "
#~ "member is valid only if **elementType**"
#~ " = SHELL. Possible values are "
#~ "SINGLE_VALUE, MIDDLE_SURFACE, TOP_SURFACE, "
#~ "BOTTOM_SURFACE, OFFSET_FIELD, and GLOBAL. The"
#~ " default value is GLOBAL."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying The name of "
#~ "the field specifying the offset. This"
#~ " member is valid only if "
#~ "**elementType** = SHELL. The default "
#~ "value is an empty string."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying The offset of "
#~ "the shell section. This member is "
#~ "valid only if **elementType** = SHELL."
#~ " The default value is 0.0."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the type "
#~ "of element in the composite layup. "
#~ "Possible values are SHELL, CONTINUUM_SHELL,"
#~ " and SOLID. The default value is "
#~ "SHELL."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether or not "
#~ "the layup should be made symmetric "
#~ "by the analysis. The default value "
#~ "is OFF."
#~ msgstr ""

#~ msgid "Returns"
#~ msgstr ""

#~ msgid "**layup** -- A CompositeLayup object."
#~ msgstr ""

#~ msgid "Return type"
#~ msgstr ""

#~ msgid ":class:`CompositeLayup`"
#~ msgstr ""

#~ msgid "Raises"
#~ msgstr ""

#~ msgid ""
#~ "Check `MaterialOrientation on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-materialorientationpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Set object specifying a region "
#~ "for which the material orientation is"
#~ " defined."
#~ msgstr ""

#~ msgid ""
#~ "A DatumCsys object specifying the local"
#~ " coordinate system or None, describing "
#~ "the material orientation for the given"
#~ " region. In the ODB, this member "
#~ "was previously accessible using \"csys,\" "
#~ "but support has now been added for"
#~ " localCsys and the csys member will"
#~ " be deprecated."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the axis "
#~ "of a datum coordinate system about "
#~ "which an additional rotation is applied."
#~ " For shells this axis is also "
#~ "the shell normal. Possible values are"
#~ " AXIS_1, AXIS_2, and AXIS_3. The "
#~ "default value is AXIS_1."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the angle of "
#~ "the additional rotation (if accessed "
#~ "from the ODB instead of the MDB,"
#~ " it will be a string instead of"
#~ " a float). The default value is "
#~ "0.0."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the stack "
#~ "or thickness direction. Possible values "
#~ "are STACK_1, STACK_2, STACK_3, and "
#~ "STACK_ORIENTATION. The default value is "
#~ "STACK_3."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the name of "
#~ "the DiscreteField object specifying the "
#~ "orientation. The default value is an "
#~ "empty string."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the method "
#~ "used to define the material orientation."
#~ " If **orientationType** = SYSTEM, the "
#~ "**region** and **localCsys** arguments are "
#~ "required. If **orientationType** = FIELD, "
#~ "the **fieldName** argument is required. "
#~ "Possible values are GLOBAL, SYSTEM, "
#~ "FIELD, DISCRETE, and USER. The default"
#~ " value is GLOBAL."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the axis "
#~ "that is defined by the normal axis"
#~ " direction for a discrete orientation. "
#~ "Possible values are AXIS_1, AXIS_2, and"
#~ " AXIS_3. The default value is AXIS_3."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the method "
#~ "used to define the normal axis "
#~ "direction for a discrete orientation. "
#~ "Possible values are SURFACE, NORMAL_DATUM, "
#~ "and NORMAL_VECTOR. The default value is"
#~ " NORMAL_VECTOR."
#~ msgstr ""

#~ msgid ""
#~ "A Surface object specifying a region "
#~ "whose geometric normals define the "
#~ "normal axis for the discrete "
#~ "orientation."
#~ msgstr ""

#~ msgid ""
#~ "A DatumAxis object specifying the Datum"
#~ " Axis or None, describing the normal"
#~ " axis direction for the discrete "
#~ "orientation."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying the flag to "
#~ "reverse the direction of the defined "
#~ "normal axis direction. The default value"
#~ " is OFF."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "vector that defines the direction of "
#~ "the normal axis of the discrete "
#~ "orientation."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the axis "
#~ "that is defined by the primary "
#~ "axis direction for a discrete "
#~ "orientation. Possible values are AXIS_1, "
#~ "AXIS_2, and AXIS_3. The default value"
#~ " is AXIS_1."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the method "
#~ "used to define the primary axis "
#~ "direction for a discrete orientation. "
#~ "Possible values are SURFACE, PRIMARY_DATUM,"
#~ " and PRIMARY_VECTOR. The default value "
#~ "is PRIMARY_VECTOR."
#~ msgstr ""

#~ msgid ""
#~ "A Set object specifying a region "
#~ "whose geometric tangents define the "
#~ "primary axis for the discrete "
#~ "orientation."
#~ msgstr ""

#~ msgid ""
#~ "A DatumAxis object specifying the Datum"
#~ " Axis or None, describing the primary"
#~ " axis direction for the discrete "
#~ "orientation."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying the flag to "
#~ "reverse the direction of the defined "
#~ "primary axis direction. The default "
#~ "value is OFF."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "vector that defines the direction of "
#~ "the primary axis of the discrete "
#~ "orientation."
#~ msgstr ""

#~ msgid "**orientation** -- A MaterialOrientation object."
#~ msgstr ""

#~ msgid ":class:`MaterialOrientation`"
#~ msgstr ""

#~ msgid ""
#~ "Check `SectionAssignment on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-sectionassignmentpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "A Set object specifying the region to which the section is assigned."
#~ msgstr ""

#~ msgid "A String specifying the name of the section."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying section "
#~ "thickness assignment method. Possible values"
#~ " are FROM_SECTION and FROM_GEOMETRY. The"
#~ " default value is FROM_SECTION."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the offset of "
#~ "the shell section. The default value "
#~ "is 0.0."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the method "
#~ "used to define the shell offset. "
#~ "If **offsetType** is set to OFFSET_FIELD"
#~ " the **offsetField** must have a "
#~ "value. Possible values are SINGLE_VALUE, "
#~ "MIDDLE_SURFACE, TOP_SURFACE, BOTTOM_SURFACE, "
#~ "FROM_GEOMETRY, and OFFSET_FIELD. The default"
#~ " value is SINGLE_VALUE."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the name of "
#~ "the field specifying the offset. The "
#~ "default value is \"\"."
#~ msgstr ""

#~ msgid "**assignment** -- A SectionAssignment object"
#~ msgstr ""

#~ msgid ":class:`SectionAssignment`"
#~ msgstr ""

#~ msgid ""
#~ "Check `PropertyPart.assignBeamSectionOrientation on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partassignbeamsectionorientationpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of geomSequences of Edge "
#~ "objects or a sequence of sequences "
#~ "of one-dimensional elements."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the assignment"
#~ " method. Only a value of N1_COSINES"
#~ " is currently supported."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of three Floats specifying"
#~ " the approximate local n1n1-direction of"
#~ " the beam cross-section."
#~ msgstr ""

#~ msgid ""
#~ "Check `PropertyPart.assignMaterialOrientation on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partassignmaterialorientationpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of geomSequences of "
#~ "ConstrainedSketchVertex, Edge, Face, and Cell"
#~ " objects or a sequence of sequences"
#~ " of elements."
#~ msgstr ""

#~ msgid ""
#~ "A Datum object specifying the local "
#~ "coordinate system or None, indicating "
#~ "the global coordinate system."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the axis "
#~ "of a cylindrical or spherical datum "
#~ "coordinate system about which an "
#~ "additional rotation is applied. For "
#~ "shells this axis is also the shell"
#~ " normal. Possible values are AXIS_1, "
#~ "AXIS_2, and AXIS_3. The default value"
#~ " is AXIS_1."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the angle of "
#~ "the additional rotation. The default "
#~ "value is 0.0."
#~ msgstr ""

#~ msgid ""
#~ "Check `PropertyPart.assignRebarOrientation on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partassignrebarorientationpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "Check `PropertyPart.flipNormal on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partflipnormalpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Region object specifying the region"
#~ " on which normals are flipped. For"
#~ " 3D parts, the region contains Face"
#~ " objects or two-dimensional triangle "
#~ "or quadrilateral Element objects. For "
#~ "axisymmetric parts, the region contains "
#~ "Edge objects or line Elements objects."
#~ msgstr ""

#~ msgid ""
#~ "A two-dimensional element object whose"
#~ " normal is to be matched. If "
#~ "unspecified, all the normals associated "
#~ "with the given regions will be "
#~ "flipped. The **referenceRegion** argument is"
#~ " applicable only if the argument "
#~ "regions contain a sequence of "
#~ "quadrilateral or triangular elements."
#~ msgstr ""

#~ msgid ""
#~ "Check `PropertyPart.flipTangent on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partfliptangentpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Region object specifying the region"
#~ " on which normals are flipped. The"
#~ " region contains Edge objects or "
#~ "one-dimensional Element objects."
#~ msgstr ""

#~ msgid ""
#~ "Check `PropertyPart.unassignBeamSectionOrientation on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partunassignbeamsectionorientationpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "An Int specifying the number of "
#~ "the beam section orientation assignment "
#~ "to be deleted."
#~ msgstr ""

#~ msgid ""
#~ "Check `PropertyPart.unassignMaterialOrientation on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partunassignmaterialorientationpyc>`__."
#~ msgstr ""

#~ msgid "An Int specifying the number of the material assignment to be deleted."
#~ msgstr ""

#~ msgid ""
#~ "Check `PropertyPart.unassignRebarOrientation on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-partpyc.htm?contextscope=all"
#~ "#simaker-partunassignrebarorientationpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "An Int specifying the number of "
#~ "the rebar reference orientation assignment "
#~ "to be deleted."
#~ msgstr ""

#~ msgid "Bases: :py:class:`object`"
#~ msgstr ""

#~ msgid ""
#~ "The CompositeLayup object is used to "
#~ "specify a composite layup on a "
#~ "part."
#~ msgstr ""

#~ msgid "This object can be accessed by::"
#~ msgstr ""

#~ msgid "The corresponding analysis keywords are:"
#~ msgstr ""

#~ msgid "SHELL SECTION"
#~ msgstr ""

#~ msgid "SHELL GENERAL SECTION"
#~ msgstr ""

#~ msgid "SOLID SECTION"
#~ msgstr ""

#~ msgid "A CompositeLayup object."
#~ msgstr ""

#~ msgid "This method creates a CompositePly object."
#~ msgstr ""

#~ msgid ""
#~ "Check `CompositePly on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-compositeplypyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "A Float specifying the thickness of the section layer."
#~ msgstr ""

#~ msgid ""
#~ "A Region object specifying the region"
#~ " to which the composite ply applies."
#~ msgstr ""

#~ msgid "A String specifying the name of the material for the ply."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the ply identifier"
#~ " for this section layer. The default"
#~ " value is an empty string."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the method "
#~ "used to define the relative orientation."
#~ " If **orientationType** = SPECIFY_ORIENT "
#~ "the **orientationValue** argument is required."
#~ " If **orientationType** = CSYS the "
#~ "**orientation** argument is required. Possible"
#~ " values are CSYS, SPECIFY_ORIENT, ANGLE_0,"
#~ " ANGLE_45, ANGLE_90, and ANGLE_NEG45. The"
#~ " default value is ANGLE_0."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the method "
#~ "used to define the thickness. If "
#~ "**thicknessType** = SPECIFY_THICKNESS, the "
#~ "**thickness** argument is required. Possible"
#~ " values are SPECIFY_THICKNESS, FIELD_THICKNESS,"
#~ " and ANALYTICAL_FIELD_THICKNESS. The default "
#~ "value is SPECIFY_THICKNESS."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the relative "
#~ "orientation of the section layer. The"
#~ " default value is 0.0."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the name of "
#~ "the AnalyticalField or DiscreteField object"
#~ " used to define the thickness of "
#~ "the shell elements and composite ply."
#~ " The **thicknessField** argument applies "
#~ "when **thicknessType** = ANALYTICAL_FIELD or"
#~ " **thicknessType** = DISCRETE_FIELD for "
#~ "shell elements and **thicknessType** = "
#~ "FIELD_THICKNESS or **thicknessType** = "
#~ "ANALYTICAL_FIELD_THICKNESS for composite ply. "
#~ "The default value is an empty "
#~ "string."
#~ msgstr ""

#~ msgid ""
#~ "An Int specifying the number of "
#~ "integration points to be used through"
#~ " the section layer. This argument is"
#~ " valid only if **preIntegrate** = "
#~ "OFF. The default value is 3."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the axis "
#~ "of a cylindrical or spherical datum "
#~ "coordinate system about which an "
#~ "additional rotation is applied. For "
#~ "shells this axis is also the shell"
#~ " normal. The **axis** argument applies "
#~ "only if a valid reference is "
#~ "provided for the **orientation**. Possible "
#~ "values are AXIS_1, AXIS_2, and AXIS_3."
#~ " The default value is AXIS_1."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the angle of "
#~ "the additional rotation. The **angle** "
#~ "argument applies only if a valid "
#~ "reference is provided for the "
#~ "**orientation**. The default value is "
#~ "0.0."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the method "
#~ "used to describe the additional rotation"
#~ " when a valid orientation is "
#~ "specified. Use **orientationType** = ANGLE_0"
#~ " and **additionalRotationType** = ROTATION_FIELD"
#~ " to specify a discrete field of "
#~ "rotations for this CompositePly. Possible "
#~ "values are ROTATION_NONE, ROTATION_ANGLE, and"
#~ " ROTATION_FIELD. The default value is "
#~ "ROTATION_NONE."
#~ msgstr ""

#~ msgid ""
#~ "The SymbolicConstant None or a DatumCsys"
#~ " object specifying a coordinate system "
#~ "reference for the relative orientation "
#~ "of this layer. The default value "
#~ "is None."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the name of "
#~ "the field specifying the additional "
#~ "rotation. The default value is an "
#~ "empty string."
#~ msgstr ""

#~ msgid "A CompositePly object."
#~ msgstr ""

#~ msgid ":class:`CompositePly`"
#~ msgstr ""

#~ msgid "This method creates a CompositeShellSection object."
#~ msgstr ""

#~ msgid ""
#~ "Check `CompositeShellSection on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-compositeshellsectionpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "A SectionLayerArray object specifying the shell cross-section."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the distribution"
#~ " used for defining the thickness of"
#~ " the elements. Possible values are "
#~ "UNIFORM, ANALYTICAL_FIELD, DISCRETE_FIELD, "
#~ "NODAL_ANALYTICAL_FIELD, and NODAL_DISCRETE_FIELD. "
#~ "The default value is UNIFORM."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether the shell"
#~ " section properties are specified by "
#~ "the user prior to the analysis "
#~ "(ON) or integrated during the analysis"
#~ " (OFF). The default value is OFF."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying whether to "
#~ "use the default value for the "
#~ "Poisson's ratio. Possible values are:DEFAULT,"
#~ " specifying that the default value "
#~ "for the Poisson's ratio is 0.5 in"
#~ " an Abaqus/Standard analysis and is "
#~ "obtained from the material definition in"
#~ " an Abaqus/Explicit analysis.VALUE, specifying"
#~ " that the Poisson's ratio used in "
#~ "the analysis is the value provided "
#~ "in **poisson**.The default value is "
#~ "DEFAULT."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the Poisson's ratio."
#~ " Possible values are −1.0 ≤ "
#~ "**poisson** ≤ 0.5. This argument is "
#~ "valid only when **poissonDefinition** = "
#~ "VALUE. The default value is 0.5."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the shell "
#~ "section integration rule. Possible values "
#~ "are SIMPSON and GAUSS. The default "
#~ "value is SIMPSON."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the mode "
#~ "used for temperature and field variable"
#~ " input across the section thickness. "
#~ "Possible values are GRADIENT and "
#~ "POINTWISE. The default value is "
#~ "GRADIENT."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the mechanical"
#~ " idealization used for the section "
#~ "calculations. This member is only "
#~ "applicable when **preIntegrate** is set "
#~ "to ON. Possible values are "
#~ "NO_IDEALIZATION, SMEAR_ALL_LAYERS, MEMBRANE, and "
#~ "BENDING. The default value is "
#~ "NO_IDEALIZATION."
#~ msgstr ""

#~ msgid ""
#~ "None or an Int specifying the "
#~ "number of temperature points to be "
#~ "input. This argument is valid only "
#~ "when **temperature** = POINTWISE. The "
#~ "default value is None."
#~ msgstr ""

#~ msgid ""
#~ "None or a Float specifying the "
#~ "effective thickness modulus. This argument "
#~ "is relevant only for continuum shells"
#~ " and must be used in conjunction "
#~ "with the argument **poisson**. The "
#~ "default value is None."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether or not "
#~ "to use the value of **density**. "
#~ "The default value is OFF."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the value of "
#~ "density to apply to this section. "
#~ "The default value is 0.0."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the layup name "
#~ "for this section. The default value "
#~ "is an empty string."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the name of "
#~ "the AnalyticalField or DiscreteField object"
#~ " used to define the thickness of "
#~ "the shell elements. The **thicknessField** "
#~ "argument applies only when **thicknessType**"
#~ " = ANALYTICAL_FIELD or **thicknessType** ="
#~ " DISCRETE_FIELD. The default value is "
#~ "an empty string."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the name of "
#~ "the AnalyticalField or DiscreteField object"
#~ " used to define the thickness of "
#~ "the shell elements at each node. "
#~ "The **nodalThicknessField** argument applies "
#~ "only when **thicknessType** = "
#~ "NODAL_ANALYTICAL_FIELD or **thicknessType** = "
#~ "NODAL_DISCRETE_FIELD. The default value is "
#~ "an empty string."
#~ msgstr ""

#~ msgid "A CompositeShellSection object."
#~ msgstr ""

#~ msgid ":class:`CompositeShellSection`"
#~ msgstr ""

#~ msgid "This method creates a GeometryShellSection object."
#~ msgstr ""

#~ msgid ""
#~ "Check `GeometryShellSection on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-geometryshellsectionpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "A GeometryShellSection object."
#~ msgstr ""

#~ msgid ":class:`GeometryShellSection`"
#~ msgstr ""

#~ msgid "This method creates a HomogeneousShellSection object."
#~ msgstr ""

#~ msgid ""
#~ "Check `HomogeneousShellSection on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-homogeneousshellsectionpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "A String specifying the name of the section material."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the thickness of "
#~ "the section. The **thickness** argument "
#~ "applies only when **thicknessType** = "
#~ "UNIFORM. The default value is 0.0."
#~ msgstr ""

#~ msgid ""
#~ "An Int specifying the number of "
#~ "integration points to be used through"
#~ " the section. Possible values are "
#~ "**numIntPts** > 0. The default value "
#~ "is 5.To use the default settings "
#~ "of the analysis products, set "
#~ "**numIntPts** to 5 if **integrationRule** "
#~ "= SIMPSON or set **numIntPts** to "
#~ "7 if **integrationRule** = GAUSS."
#~ msgstr ""

#~ msgid "A HomogeneousShellSection object."
#~ msgstr ""

#~ msgid ":class:`HomogeneousShellSection`"
#~ msgstr ""

#~ msgid "This method deletes all of the plies from a composite layup."
#~ msgstr ""

#~ msgid "A MaterialOrientation object."
#~ msgstr ""

#~ msgid ""
#~ "A CompositePlyArray object specifying the "
#~ "plies that make up this composite "
#~ "layup."
#~ msgstr ""

#~ msgid "This method resumes a composite layup that was previously suppressed."
#~ msgstr ""

#~ msgid "This method modifies the CompositeLayup object."
#~ msgstr ""

#~ msgid ""
#~ "Check `CompositeLayup.setValues on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-compositelayuppyc.htm?contextscope=all"
#~ "#simaker-compositelayupsetvaluespyc>`__."
#~ msgstr ""

#~ msgid "This method suppresses a composite layup."
#~ msgstr ""

#~ msgid ""
#~ "The CompositePly object defines the "
#~ "material layers in a composite layup."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the method "
#~ "used to define the thickness. If "
#~ "thicknessType=SPECIFY_THICKNESS, the thickness "
#~ "argument is required. Possible values "
#~ "are SPECIFY_THICKNESS and FIELD_THICKNESS. The"
#~ " default value is SPECIFY_THICKNESS."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the name of "
#~ "the AnalyticalField or DiscreteField object"
#~ " used to define the thickness of "
#~ "the shell elements. The thicknessField "
#~ "argument applies only when "
#~ "thicknessType=ANALYTICAL_FIELD or "
#~ "thicknessType=DISCRETE_FIELD. The default value "
#~ "is an empty string."
#~ msgstr ""

#~ msgid ""
#~ "The MaterialOrientation object represents the"
#~ " orientation of the material properties "
#~ "and composite layups."
#~ msgstr ""

#~ msgid ""
#~ "Check `ReferenceOrientation on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-referenceorientationpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the name of "
#~ "the DiscreteField object specifying the "
#~ "additional rotation. The default value "
#~ "is an empty string."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the method "
#~ "used to describe the additional rotation"
#~ " when a valid orientation is "
#~ "specified. Possible values are ROTATION_NONE,"
#~ " ROTATION_ANGLE, and ROTATION_FIELD. The "
#~ "default value is ROTATION_NONE."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the method "
#~ "used to define the normal axis "
#~ "direction for a discrete orientation. "
#~ "Possible values are SURFACE, DATUM, and"
#~ " VECTOR. The default value is VECTOR."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the method "
#~ "used to define the primary axis "
#~ "direction for a discrete orientation. "
#~ "Possible values are EDGE, DATUM, and "
#~ "VECTOR. The default value is VECTOR."
#~ msgstr ""

#~ msgid "This method modifies the MaterialOrientation object."
#~ msgstr ""

#~ msgid ""
#~ "The PlyStackPlot object is used to "
#~ "plot the stacking of plies in a"
#~ " composite layup or in a composite"
#~ " shell section."
#~ msgstr ""

#~ msgid ""
#~ "Check `PlyStackPlot on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-plystackplotpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "This method creates a PlyStackPlot "
#~ "object from a region of a part "
#~ "that contains a composite shell layup."
#~ msgstr ""

#~ msgid ""
#~ "Check `MdbPlyStackPlot on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-mdbplystackplotpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "A Part object."
#~ msgstr ""

#~ msgid "A Region object which contains a composite shell layup."
#~ msgstr ""

#~ msgid "A PlyStackPlot object."
#~ msgstr ""

#~ msgid ":class:`PlyStackPlot`"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a PlyStackPlot "
#~ "object from a composite shell section"
#~ " of an Odb object."
#~ msgstr ""

#~ msgid ""
#~ "Check `OdbPlyStackPlot on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-odbplystackplotpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "An Odb object."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the section name "
#~ "that contains a composite shell section."
#~ msgstr ""

#~ msgid "A Float specifying the shell offset. The default value is 0.0."
#~ msgstr ""

#~ msgid ""
#~ "Check `Property.assignBeamSectionOrientation on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functionpropertypyc.htm?contextscope=all"
#~ "#simaker-functionpropertyassignbeamsectionorientationpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "Check `Property.assignMaterialOrientation on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functionpropertypyc.htm?contextscope=all"
#~ "#simaker-functionpropertyassignmaterialorientationpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "Check `Property.assignRebarOrientation on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functionpropertypyc.htm?contextscope=all"
#~ "#simaker-functionpropertyassignrebarorientationpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "Check `Property.flipNormal on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functionpropertypyc.htm?contextscope=all"
#~ "#simaker-functionpropertyflipnormalpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "Check `Property.flipTangent on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functionpropertypyc.htm?contextscope=all"
#~ "#simaker-functionpropertyfliptangentpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "Check `Property.unassignBeamSectionOrientation on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functionpropertypyc.htm?contextscope=all"
#~ "#simaker-functionpropertyunassignbeamsectionorientationpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "Check `Property.unassignMaterialOrientation on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functionpropertypyc.htm?contextscope=all"
#~ "#simaker-functionpropertyunassignmaterialorientationpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "Check `Property.unassignRebarOrientation on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functionpropertypyc.htm?contextscope=all"
#~ "#simaker-functionpropertyunassignrebarorientationpyc>`__."
#~ msgstr ""

#~ msgid "Bases: :py:class:`~abaqus.Assembly.AssemblyBase.AssemblyBase`"
#~ msgstr ""

#~ msgid ""
#~ "An Assembly object is a container "
#~ "for instances of parts. The Assembly "
#~ "object has no constructor command. "
#~ "Abaqus creates the **rootAssembly** member "
#~ "when a Model object is created."
#~ msgstr ""

#~ msgid ""
#~ "Check `PropertyAssembly on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-assemblypyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "A SectionAssignment object."
#~ msgstr ""

#~ msgid ""
#~ "The SectionAssignment object is used to"
#~ " specify a section assignment on an"
#~ " assembly or part. Section assignments "
#~ "on the assembly are limited to "
#~ "connector elements only."
#~ msgstr ""

#~ msgid ""
#~ "This method is only valid for "
#~ "connector section assignments. This method "
#~ "returns a sequence consisting of tuples"
#~ " of coordinates of the connector's "
#~ "endpoints."
#~ msgstr ""

#~ msgid "A sequence of tuples of floats."
#~ msgstr ""

#~ msgid ":class:`Sequence[Tuple[float`, :class:`...]]`"
#~ msgstr ""

#~ msgid ""
#~ "An exception is thrown if getVertices()"
#~ " is called on any section assignment"
#~ " except     connector section assignment. "
#~ "This method is valid only for "
#~ "connector section assignments."
#~ msgstr ""

#~ msgid ""
#~ "This method resumes the section "
#~ "assignment that was previously suppressed."
#~ msgstr ""

#~ msgid "This method modifies the SectionAssignment object."
#~ msgstr ""

#~ msgid "This method suppresses the section assignment."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether the section"
#~ " assignment is suppressed or not. The"
#~ " default value is OFF."
#~ msgstr ""

