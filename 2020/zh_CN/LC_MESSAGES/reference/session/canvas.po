# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, WANG Hailin
# This file is distributed under the same license as the abqpy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abqpy \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-05-13 03:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../../reference/session/canvas.md:1
msgid "Canvas"
msgstr ""

#: ../../../reference/session/canvas.md:3
msgid ""
"Canvas commands are used to create, position, and modify canvas objects. "
"The Canvas commands need only the abaqus module to be imported; no "
"additional modules need to be imported."
msgstr ""

#: ../../../reference/session/canvas.md:5
msgid "Create layers in a viewport"
msgstr ""

#: ../../../reference/session/canvas.md:7
msgid "Viewport"
msgstr ""

#: ../../../reference/session/canvas.md:18
msgid "Other Classes"
msgstr ""

#~ msgid ""
#~ "Bases: "
#~ ":py:class:`~abaqus.Annotation.AnnotationViewport.AnnotationViewport`"
#~ msgstr ""

#~ msgid ""
#~ "This method creates a Viewport object"
#~ " with the specified origin and "
#~ "dimensions."
#~ msgstr ""

#~ msgid "This function can be accessed by::"
#~ msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

#~ msgid "A String specifying the repository key."
#~ msgstr ""

#~ msgid ""
#~ "A pair of Floats specifying the "
#~ "**X**  and **Y** coordinates in "
#~ "millimeters in the canvas coordinate "
#~ "system of the lower left corner of"
#~ " the viewport. The default origin is"
#~ " (0, 0)."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the width in "
#~ "millimeters of the viewport. Possible "
#~ "values are 30 ≤ **width** ≤ "
#~ "(*maxWidth*). The default value is "
#~ "120.0. Note: The maximum value of "
#~ "width (*maxWidth*) is the width of "
#~ "the screen in millimeters."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the height in "
#~ "millimeters of the viewport. This height"
#~ " includes the title bar. Possible "
#~ "values are 30 ≤ **height** ≤ "
#~ "(*maxHeight*). The default value is "
#~ "80.0. Note: The maximum value of "
#~ "height (*maxHeight*) is the height of"
#~ " the screen in millimeters."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether the "
#~ "viewport border is visible in a "
#~ "printed image. The default value is "
#~ "ON."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether the "
#~ "viewport title should be displayed in"
#~ " a printed image. The default value"
#~ " is ON.If **border** = OFF, the "
#~ "title will not be visible, even if"
#~ " **titleBar** =ON."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying which title "
#~ "to use for the viewport title. "
#~ "Possible values are CUSTOM and SYSTEM."
#~ " The default value is SYSTEM.If "
#~ "**titleStyle** = CUSTOM, **customTitleString** "
#~ "will be used. If **titleStyle** =  "
#~ "SYSTEM, a system-generated string will"
#~ " be used."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the viewport title"
#~ " when **titleStyle** =CUSTOM. The default"
#~ " value is an empty string."
#~ msgstr ""

#~ msgid "Returns"
#~ msgstr ""

#~ msgid "A Viewport object."
#~ msgstr ""

#~ msgid "Return type"
#~ msgstr ""

#~ msgid ":class:`Viewport`"
#~ msgstr ""

#~ msgid "Raises"
#~ msgstr ""

#~ msgid ""
#~ "the current viewport may not be "
#~ "deleted, If the user attempts to "
#~ "delete the only viewport."
#~ msgstr ""

#~ msgid "If **width** is out of range."
#~ msgstr ""

#~ msgid "If **height** is out of range."
#~ msgstr ""

#~ msgid "Public Data Attributes:"
#~ msgstr ""

#~ msgid ":py:obj:`origin <abaqus.Canvas.ViewportBase.ViewportBase.origin>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A pair of Floats specifying the "
#~ "**X**  and **Y** coordinates in "
#~ "millimeters in the canvas coordinate "
#~ "system of the lower left corner of"
#~ " the viewport."
#~ msgstr ""

#~ msgid ":py:obj:`width <abaqus.Canvas.ViewportBase.ViewportBase.width>`\\"
#~ msgstr ""

#~ msgid "A Float specifying the width in millimeters of the viewport."
#~ msgstr ""

#~ msgid ":py:obj:`height <abaqus.Canvas.ViewportBase.ViewportBase.height>`\\"
#~ msgstr ""

#~ msgid "A Float specifying the height in millimeters of the viewport."
#~ msgstr ""

#~ msgid ":py:obj:`border <abaqus.Canvas.ViewportBase.ViewportBase.border>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether the "
#~ "viewport border is visible in a "
#~ "printed image."
#~ msgstr ""

#~ msgid ":py:obj:`titleBar <abaqus.Canvas.ViewportBase.ViewportBase.titleBar>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether the "
#~ "viewport title should be displayed in"
#~ " a printed image."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`titleStyle "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.titleStyle>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying which title "
#~ "to use for the viewport title."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`customTitleString "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.customTitleString>`\\"
#~ msgstr ""

#~ msgid "A String specifying the viewport title when **titleStyle** =CUSTOM."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`displayMode "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.displayMode>`\\"
#~ msgstr ""

#~ msgid "A SymbolicConstant specifying the display mode of the viewport."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`viewManipLayers "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.viewManipLayers>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying which layer "
#~ "or layers will be controlled by "
#~ "the view manipulation tools when "
#~ "**displayMode** = OVERLAY."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`layerOffset "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.layerOffset>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying a factor to be"
#~ " used in offsetting layers in the "
#~ "screen Z direction."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`windowState "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.windowState>`\\"
#~ msgstr ""

#~ msgid "A SymbolicConstant specifying the current state of a viewport."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`currentWidth "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.currentWidth>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the width in "
#~ "millimeters of the current viewport, "
#~ "regardless of the value of "
#~ "**windowState**."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`currentHeight "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.currentHeight>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the height in "
#~ "millimeters of the current viewport, "
#~ "regardless of the value of "
#~ "**windowState**, and including the title "
#~ "bar."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`applyLinkedCommands "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.applyLinkedCommands>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether the "
#~ "viewport is linked for synchronization."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`activeColorModes "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.activeColorModes>`\\"
#~ msgstr ""

#~ msgid "A SymbolicConstant specifying the currently active color mappings."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`colorMode "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.colorMode>`\\"
#~ msgstr ""

#~ msgid "A SymbolicConstant specifying the last applied color mapping."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`translucency "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.translucency>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the translucency that"
#~ " will be applied to objects colored"
#~ " using **initialColor** and it needs "
#~ "to be set along with **initialColor**."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`animationConnect "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.animationConnect>`\\"
#~ msgstr ""

#~ msgid "A Boolean specifying whether an animation is connected to the viewport."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`colorMappings "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.colorMappings>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of AttributeColorMap objects "
#~ "specifying the objects cannot be "
#~ "constructed but the following attribute "
#~ "maps are supported:"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`initialColor "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.initialColor>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the color that "
#~ "will be applied to all objects in"
#~ " the viewport at the start of "
#~ "color coding."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`currentLayer "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.currentLayer>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A String specifying which layer is "
#~ "affected by options settings when "
#~ "**displayMode** =OVERLAY."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`displayedObject "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.displayedObject>`\\"
#~ msgstr ""

#~ msgid "A Displayable object specifying the object to be displayed."
#~ msgstr ""

#~ msgid ":py:obj:`layers <abaqus.Canvas.ViewportBase.ViewportBase.layers>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A repository of Layer objects specifying"
#~ " the key to the repository is a"
#~ " String with the name of the "
#~ "layer."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`odbDisplay "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.odbDisplay>`\\"
#~ msgstr ""

#~ msgid "An OdbDisplay object specifying the display options for the Odb object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`partDisplay "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.partDisplay>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A PartDisplayOptions object specifying the "
#~ "display options for the Part object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`assemblyDisplay "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.assemblyDisplay>`\\"
#~ msgstr ""

#~ msgid ""
#~ "An AssemblyDisplayOptions object specifying "
#~ "the display options for the Assembly "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`viewportAnnotationOptions "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.viewportAnnotationOptions>`\\"
#~ msgstr ""

#~ msgid "A ViewportAnnotationOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`detailPlotOptions "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.detailPlotOptions>`\\"
#~ msgstr ""

#~ msgid "A DetailPlotOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`annotationsToPlot "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.annotationsToPlot>`\\"
#~ msgstr ""

#~ msgid "An AnnotationsToPlotArray object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`visibleLayers "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.visibleLayers>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A tuple of Strings specifying the "
#~ "names of layers that will be "
#~ "displayed in the viewport when "
#~ "**displayMode** = OVERLAY."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`currentOrigin "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.currentOrigin>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A pair of Floats specifying the "
#~ "**X**  and **Y** coordinates in "
#~ "millimeters in the canvas coordinate "
#~ "system of the lower left corner of"
#~ " the current viewport, regardless of "
#~ "the value of **windowState**."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`iconOrigin "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.iconOrigin>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A pair of Floats specifying the "
#~ "**X**  and **Y** coordinates in "
#~ "millimeters of the lower left corner "
#~ "of the current viewport from a "
#~ "coordinate system having its origin in"
#~ " the lower left corner of the "
#~ "drawing area."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`lightOptions "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.lightOptions>`\\"
#~ msgstr ""

#~ msgid "A LightOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`imageOptions "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.imageOptions>`\\"
#~ msgstr ""

#~ msgid "An ImageOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`movieOptions "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.movieOptions>`\\"
#~ msgstr ""

#~ msgid "A MovieOptions object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`animationController "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.animationController>`\\"
#~ msgstr ""

#~ msgid "An AnimationController object."
#~ msgstr ""

#~ msgid ":py:obj:`drawings <abaqus.Canvas.ViewportBase.ViewportBase.drawings>`\\"
#~ msgstr ""

#~ msgid "A tuple of Strings specifying keys to the session.drawings repository."
#~ msgstr ""

#~ msgid ":py:obj:`name <abaqus.Canvas.ViewportBase.ViewportBase.name>`\\"
#~ msgstr ""

#~ msgid ":py:obj:`view <abaqus.Canvas.ViewportBase.ViewportBase.view>`\\"
#~ msgstr ""

#~ msgid ""
#~ "A View object specifying the object "
#~ "that controls viewing of the viewport"
#~ " content."
#~ msgstr ""

#~ msgid "Public Methods:"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`Layer <abaqus.Canvas.Viewport.Viewport.Layer>`\\ "
#~ "\\(name\\[\\, copyViewName\\]\\)"
#~ msgstr ""

#~ msgid "This method creates a Layer object in the Layer repository."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`plotAnnotation "
#~ "<abaqus.Annotation.AnnotationViewport.AnnotationViewport.plotAnnotation>`\\"
#~ " \\(annotation\\[\\, index\\]\\)"
#~ msgstr ""

#~ msgid "This method plots an Annotation object in aViewport."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__init__ "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.__init__>`\\ "
#~ "\\(name\\[\\, origin\\, width\\, height\\, "
#~ "...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`bringToFront "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.bringToFront>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method moves the Viewport object to the front."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`disableMultipleColors "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.disableMultipleColors>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method disables applying multiple "
#~ "color mappings that was enabled using"
#~ " enableMultipleColors."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`disableRefresh "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.disableRefresh>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid "This method disables Viewport refresh."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`disableColorCodeUpdates "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.disableColorCodeUpdates>`\\"
#~ " \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method disables Viewport updates "
#~ "and internal computations triggered because"
#~ " of color coding."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`enableMultipleColors "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.enableMultipleColors>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method enables multiple color "
#~ "mappings to be applied at the same"
#~ " time."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`enableRefresh "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.enableRefresh>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid "This method enables Viewport refresh disabled using disableRefresh."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`enableColorCodeUpdates "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.enableColorCodeUpdates>`\\"
#~ " \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method enables Viewport color code"
#~ " updates disabled using disableColorCodeUpdates."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getActiveElementLabels "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.getActiveElementLabels>`\\"
#~ " \\(\\[useCut\\, printResults\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns the element labels"
#~ " currently active in the viewport "
#~ "based on the current display group."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getActiveNodeLabels "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.getActiveNodeLabels>`\\ "
#~ "\\(\\[useCut\\, printResults\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns the node labels "
#~ "currently active in the viewport based"
#~ " on the current display group."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`getPrimVarMinMaxLoc "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.getPrimVarMinMaxLoc>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method returns a dictionary "
#~ "containing the minimum, maximum and "
#~ "their location for the current primary"
#~ " variable."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`makeCurrent "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.makeCurrent>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method makes theViewport object the current viewport."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`maximize "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.maximize>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method maximizes the Viewport object to fill the drawing area."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`minimize "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.minimize>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method minimizes the Viewport "
#~ "object to appear as an abbreviated "
#~ "title bar."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`offset "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.offset>`\\ "
#~ "\\(\\[deltaX\\, deltaY\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method modifies the current **X**"
#~ " *Y* location of the viewport by "
#~ "the specified distance."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`restore "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.restore>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method restores a maximized or "
#~ "minimized Viewport object to its "
#~ "previous size and location."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`sendToBack "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.sendToBack>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method moves the Viewport object to the back."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`setColor "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.setColor>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`forceRefresh "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.forceRefresh>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "This method causes the Viewport to refresh immediately."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`setValues "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.setValues>`\\ "
#~ "\\(\\[displayedObject\\, displayMode\\, ...\\]\\)"
#~ msgstr ""

#~ msgid "This method modifies the Viewport object."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`addDrawings "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.addDrawings>`\\ "
#~ "\\(\\[names\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method identifies the names of "
#~ "Drawing objects to be rendered in "
#~ "the Viewport."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`removeDrawings "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.removeDrawings>`\\ "
#~ "\\(\\[names\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method identifies the names of "
#~ "Drawing objects to no longer be "
#~ "rendered in the Viewport."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`timeDisplay "
#~ "<abaqus.Canvas.ViewportBase.ViewportBase.timeDisplay>`\\ "
#~ "\\(\\[numFrames\\, numSeconds\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method refreshes the Viewport "
#~ "display **numFrames** times and then "
#~ "checks to see if **numSeconds** seconds"
#~ " have elapsed."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`get_user_attributes "
#~ "<abaqus._OptionsBase._OptionsBase.get_user_attributes>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "Returns a list of the user attributes of the class."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`setValues "
#~ "<abaqus._OptionsBase._OptionsBase.setValues>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid "This method modifies the _OptionsBase object."
#~ msgstr ""

#~ msgid "Member Details:"
#~ msgstr ""

#~ msgid ""
#~ "Check `Layer on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-layerpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "A String specifying the name of the layer to copy."
#~ msgstr ""

#~ msgid "A Layer object."
#~ msgstr ""

#~ msgid ":class:`Layer`"
#~ msgstr ""

#~ msgid "Bases: :py:class:`~abaqus._OptionsBase._OptionsBase`"
#~ msgstr ""

#~ msgid ""
#~ "The AttributeColorMap object is used to"
#~ " store values and attributes associated "
#~ "with AttributeColorMap type objects. "
#~ "AttributeColorMap objects can be modified "
#~ "using the methods described below. The"
#~ " methods accessed via the Viewport "
#~ "object cause the AttributeColorMap object "
#~ "to be updated in the "
#~ "session.viewports[name].colorMappings repository."
#~ msgstr ""

#~ msgid "This object can be accessed by::"
#~ msgstr ""

#~ msgid ""
#~ "Check `AttributeColorMap on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-attributecolormappyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Dictionary object specifying the color"
#~ " settings of each attribute as "
#~ "described in the "
#~ ":meth:`abaqus.Canvas.AttributeColorMap.updateOverrides` method."
#~ msgstr ""

#~ msgid ""
#~ "A Dictionary object specifying a custom"
#~ " color mapping similar to overrides. "
#~ "For example: `defaultOverrides = "
#~ "{'Copper':(1,''#00FF00', '#00CCFF', '#00FF00')}` The"
#~ " color mapping can contain keys that"
#~ " have not been created. When the "
#~ "key is created, it gets the "
#~ "appropriate values from this mapping."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the type "
#~ "of AttributeColorMap . Possible values "
#~ "are MATERIAL_MAP, SECTION_MAP, PART_MAP, "
#~ "ELSET_MAP, AVERAGING_REGION_MAP, and ELTYPE_MAP."
#~ msgstr ""

#~ msgid "This method resets the AttributeColorMap object to its default state."
#~ msgstr ""

#~ msgid "This method modifies the AttributeColorMap object."
#~ msgstr ""

#~ msgid ""
#~ "Check `AttributeColorMap.setValues on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-attributecolormappyc.htm?contextscope=all"
#~ "#simaker-attributecolormapsetvaluespyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Dictionary object specifying a color"
#~ " mapping. Each key is of String "
#~ "type and specifies an attribute in "
#~ "the map; the corresponding values "
#~ "specify the color definition to apply"
#~ " to that attribute in the form "
#~ "(0|1, wire color, edge color, face "
#~ "color). The 0|1 defines the active "
#~ "status for the attribute. For example:"
#~ " `overrides = {'Part-1':(1,'#00FF00', '#00CCFF',"
#~ " '#00FF00')}`"
#~ msgstr ""

#~ msgid ""
#~ "A Dictionary object specifying a custom"
#~ " color mapping similar to overrides. "
#~ "For example: `defaultOverrides = "
#~ "{'Copper':(1,''#00FF00', '#00CCFF', '#00FF00')}`. "
#~ "The color mapping can contain keys "
#~ "that have not been created. When "
#~ "the key is created, it gets the"
#~ " appropriate values from this mapping."
#~ msgstr ""

#~ msgid ""
#~ "This method specifies additional overrides "
#~ "to be added to the current object"
#~ " definition."
#~ msgstr ""

#~ msgid ""
#~ "Check `AttributeColorMap.updateOverrides on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-attributecolormappyc.htm?contextscope=all"
#~ "#simaker-attributecolormapupdateoverridespyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Dictionary object specifying a custom"
#~ " color mapping similar to overrides. "
#~ "For example: `defaultOverrides={'Copper':(1,''#00FF00',"
#~ " '#00CCFF', '#00FF00')}` The color mapping"
#~ " can contain keys that have not "
#~ "been created. When the key is "
#~ "created, it gets the appropriate values"
#~ " from this mapping."
#~ msgstr ""

#~ msgid "Bases: :py:class:`object`"
#~ msgstr ""

#~ msgid "Bases: :py:class:`~abaqus.Session.SessionBase.SessionBase`"
#~ msgstr ""

#~ msgid ""
#~ "Check `Viewport on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewportpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "The DrawingArea object specifies the "
#~ "location and size of the drawing "
#~ "area used for placement of viewports."
#~ msgstr ""

#~ msgid ""
#~ "Check `DrawingArea on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-drawingareapyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid "A Float specifying the height in millimeters."
#~ msgstr ""

#~ msgid ""
#~ "A pair of Floats specifying the "
#~ "coordinates of the bottom left hand "
#~ "corner in millimeters."
#~ msgstr ""

#~ msgid "A Float specifying the width in millimeters."
#~ msgstr ""

#~ msgid "This method highlights an object in the current viewport."
#~ msgstr ""

#~ msgid ""
#~ "Check `Highlight.highlight on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functionhighlightpyc.htm?contextscope=all"
#~ "#simaker-functionhighlighthighlightpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "An object specifying the object in "
#~ "the current viewport to be highlighted."
#~ " You can specify only a single "
#~ "object. Abaqus/CAE highlights only the "
#~ "edges of a face when highlighting "
#~ "a surface and a face together. The"
#~ " following objects are supported:  - "
#~ "**For the MDB**      - ConstrainedSketchVertex"
#~ "     - Edge     - Face     - Surface"
#~ "     - Cell     - Node     - Element"
#~ "     - Element face     - Element "
#~ "edge     - Feature     - Datum     - "
#~ "Instance     - Set     - Load     - "
#~ "Boundary condition     - Predefined field"
#~ "     - Display group - **For the "
#~ "ODB**      - Node     - Element     -"
#~ " Display group"
#~ msgstr ""

#~ msgid ""
#~ "An object specifying the object in "
#~ "the current viewport to be highlighted."
#~ " You can specify only a single "
#~ "object. Abaqus/CAE highlights only the "
#~ "edges of a face when highlighting "
#~ "a surface and a face together. The"
#~ " following objects are supported:"
#~ msgstr ""

#~ msgid "**For the MDB**"
#~ msgstr ""

#~ msgid "ConstrainedSketchVertex"
#~ msgstr ""

#~ msgid "Edge"
#~ msgstr ""

#~ msgid "Face"
#~ msgstr ""

#~ msgid "Surface"
#~ msgstr ""

#~ msgid "Cell"
#~ msgstr ""

#~ msgid "Node"
#~ msgstr ""

#~ msgid "Element"
#~ msgstr ""

#~ msgid "Element face"
#~ msgstr ""

#~ msgid "Element edge"
#~ msgstr ""

#~ msgid "Feature"
#~ msgstr ""

#~ msgid "Datum"
#~ msgstr ""

#~ msgid "Instance"
#~ msgstr ""

#~ msgid "Set"
#~ msgstr ""

#~ msgid "Load"
#~ msgstr ""

#~ msgid "Boundary condition"
#~ msgstr ""

#~ msgid "Predefined field"
#~ msgstr ""

#~ msgid "Display group"
#~ msgstr ""

#~ msgid "**For the ODB**"
#~ msgstr ""

#~ msgid ""
#~ "This method removes highlighting from an"
#~ " object in the current viewport."
#~ msgstr ""

#~ msgid ""
#~ "Check `Highlight.unhighlight on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functionhighlightpyc.htm?contextscope=all"
#~ "#simaker-functionhighlightunhighlightpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "An object specifying the object in "
#~ "the current viewport from which the "
#~ "highlighting will be removed. You can"
#~ " specify only a single object. See"
#~ " highlight for a list of supported"
#~ " objects."
#~ msgstr ""

#~ msgid "Bases: :py:class:`~abaqus._OptionsBase._CopyOptionsBase`"
#~ msgstr ""

#~ msgid ""
#~ "The ImageOptions object stores settings "
#~ "that control how an image is "
#~ "rendered in a particular viewport. "
#~ "ImageOptions objects are accessed from "
#~ "the image options associated with a "
#~ "particular viewport. The ImageOptions object"
#~ " has no constructor; Abaqus creates "
#~ "the **imageOptions** member for a "
#~ "viewport when the viewport is created"
#~ " using the values in the "
#~ "**imageOptions** member of the current "
#~ "viewport."
#~ msgstr ""

#~ msgid ""
#~ "Check `ImageOptions on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-imageoptionspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the relative "
#~ "position of the image in the "
#~ "viewport when **positionMethod** =AUTO_ALIGN. "
#~ "Possible values are:"
#~ msgstr ""

#~ msgid "BOTTOM_LEFT"
#~ msgstr ""

#~ msgid "BOTTOM_CENTER"
#~ msgstr ""

#~ msgid "BOTTOM_RIGHT"
#~ msgstr ""

#~ msgid "CENTER_LEFT"
#~ msgstr ""

#~ msgid "CENTER"
#~ msgstr ""

#~ msgid "CENTER_RIGHT"
#~ msgstr ""

#~ msgid "TOP_LEFT"
#~ msgstr ""

#~ msgid "TOP_CENTER"
#~ msgstr ""

#~ msgid "TOP_RIGHT"
#~ msgstr ""

#~ msgid "The default value is CENTER."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying which type "
#~ "of fit is performed to scale and"
#~ " position the image in the viewport."
#~ " Possible values are:"
#~ msgstr ""

#~ msgid ""
#~ "BEST_FIT, specifying a mode where the"
#~ " image is scaled to completely fit"
#~ " within the viewport."
#~ msgstr ""

#~ msgid ""
#~ "FIT_WIDTH, specifying a mode where the"
#~ " image width is scaled to match "
#~ "the viewport width."
#~ msgstr ""

#~ msgid ""
#~ "FIT_HEIGHT, specifying a mode where the"
#~ " image height is scaled to match "
#~ "the viewport height."
#~ msgstr ""

#~ msgid "The default value is BEST_FIT."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the name of "
#~ "the image. A list of valid image"
#~ " names is in the **images** "
#~ "repository in the **session** object."
#~ msgstr ""

#~ msgid ""
#~ "A pair of Floats specifying the "
#~ "**X**  and **Y** offsets in millimeters"
#~ " from the lower-left corner of "
#~ "the viewport. The **origin** argument is"
#~ " ignored unless **positionMethod** =MANUAL. "
#~ "The default value is (0, 0)."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying which "
#~ "positioning method is used to determine"
#~ " how the image will be scaled "
#~ "and positioned in the viewport. Possible"
#~ " values are:"
#~ msgstr ""

#~ msgid ""
#~ "FIT_TO_VIEWPORT, specifying a display mode "
#~ "where the image is scaled to fit"
#~ " in the viewport using the specified"
#~ " **fitMethod**."
#~ msgstr ""

#~ msgid ""
#~ "AUTO_ALIGN, specifying a display mode "
#~ "where the image is scaled as "
#~ "specified by **xScale** and **yScale** "
#~ "and then positioned in the viewport "
#~ "using the specified **alignment**."
#~ msgstr ""

#~ msgid ""
#~ "MANUAL, specifying a display mode where"
#~ " the image is scaled as specified "
#~ "by **xScale** and **yScale** and then"
#~ " positioned in the viewport using the"
#~ " specified **origin**."
#~ msgstr ""

#~ msgid "The default value is FIT_TO_VIEWPORT."
#~ msgstr ""

#~ msgid "This method modifies the ImageOptions object."
#~ msgstr ""

#~ msgid ""
#~ "Check `ImageOptions.setValues on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-imageoptionspyc.htm?contextscope=all"
#~ "#simaker-imageoptionssetvaluespyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether an image"
#~ " should be displayed in the viewport"
#~ " background. The default value is "
#~ "OFF."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying which "
#~ "positioning method is used to determine"
#~ " how the image will be scaled "
#~ "and positioned in the viewport. Possible"
#~ " values are:  - FIT_TO_VIEWPORT, specifying"
#~ " a display mode where the image "
#~ "is scaled to fit in the   viewport"
#~ " using the specified **fitMethod**. - "
#~ "AUTO_ALIGN, specifying a display mode "
#~ "where the   image is scaled as "
#~ "specified by **xScale** and **yScale** "
#~ "and then positioned in the   viewport"
#~ " using the specified **alignment**. - "
#~ "MANUAL, specifying a display mode where"
#~ " the   image is scaled as specified"
#~ " by **xScale** and **yScale** and "
#~ "then positioned in the   viewport using"
#~ " the specified **origin**.  The default "
#~ "value is FIT_TO_VIEWPORT."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying which type "
#~ "of fit is performed to scale and"
#~ " position the image in the viewport"
#~ " when **positionMethod** =FIT_TO_VIEWPORT. "
#~ "Possible values are:  - BEST_FIT, "
#~ "specifying a mode where the image "
#~ "is scaled to completely fit within "
#~ "the   viewport. - FIT_WIDTH, specifying "
#~ "a mode where the image width is"
#~ " scaled to match the   viewport "
#~ "width. - FIT_HEIGHT, specifying a mode"
#~ " where the image height is scaled "
#~ "to match   the viewport height.  The "
#~ "default value is BEST_FIT."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying which type "
#~ "of fit is performed to scale and"
#~ " position the image in the viewport"
#~ " when **positionMethod** =FIT_TO_VIEWPORT. "
#~ "Possible values are:"
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the relative "
#~ "position of the image in the "
#~ "viewport when **positionMethod** =AUTO_ALIGN. "
#~ "Possible values are:  - BOTTOM_LEFT -"
#~ " BOTTOM_CENTER - BOTTOM_RIGHT - CENTER_LEFT"
#~ " - CENTER - CENTER_RIGHT - TOP_LEFT"
#~ " - TOP_CENTER - TOP_RIGHT  The "
#~ "default value is CENTER."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the scale applied "
#~ "to the image width. The **xScale** "
#~ "argument is ignored when **positionMethod**"
#~ " =FIT_TO_VIEWPORT. The default value is "
#~ "1.0.When **xScale** is negative, the "
#~ "image is mirrored about its y-axis "
#~ "but its position is not affected."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the scale applied "
#~ "to the image height. The **yScale** "
#~ "argument is ignored when **positionMethod**"
#~ " =FIT_TO_VIEWPORT. The default value is "
#~ "1.0.When **yScale** is negative, the "
#~ "image is mirrored about its x-axis "
#~ "but its position is not affected."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the translucency "
#~ "factor to use when displaying the "
#~ "image. Possible values are 0.0 ≤ "
#~ "**translucency** ≤ 1.0 with 0.0 being"
#~ " invisible and 1.0 being opaque. The"
#~ " default value is 1.0."
#~ msgstr ""

#~ msgid ""
#~ "None or an ImageOptions object "
#~ "specifying the object from which values"
#~ " are to be copied. If other "
#~ "arguments are also supplied to "
#~ "setValues, they will override the values"
#~ " in the **options** member. The "
#~ "default value is None."
#~ msgstr ""

#~ msgid ""
#~ "Objects can be superimposed by "
#~ "displaying them in different layers of"
#~ " a viewport."
#~ msgstr ""

#~ msgid ""
#~ "A Displayable object specifying the "
#~ "object to be displayed. The Displayable"
#~ " type is an abstract generalization. "
#~ "The concrete possible types are Part,"
#~ " Assembly, ConstrainedSketch, Odb, or "
#~ "XYPlot."
#~ msgstr ""

#~ msgid ""
#~ "This method moves the layer object "
#~ "after another object in the layer "
#~ "repository."
#~ msgstr ""

#~ msgid ""
#~ "Check `Layer.moveAfter on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-layerpyc.htm?contextscope=all"
#~ "#simaker-layermoveafterpyc>`__."
#~ msgstr ""

#~ msgid "A String specifying the name of the other Layer object."
#~ msgstr ""

#~ msgid ""
#~ "This method moves the layer object "
#~ "before another object in the layer "
#~ "repository."
#~ msgstr ""

#~ msgid ""
#~ "Check `Layer.moveBefore on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-layerpyc.htm?contextscope=all"
#~ "#simaker-layermovebeforepyc>`__."
#~ msgstr ""

#~ msgid "A View object specifying the object that controls viewing of the layer."
#~ msgstr ""

#~ msgid ""
#~ "The MovieOptions object stores settings "
#~ "that control how the movie background"
#~ " for an animation is rendered in "
#~ "a particular viewport. MovieOptions objects"
#~ " are accessed from the movie options"
#~ " associated with a particular viewport. "
#~ "The MovieOptions object has no "
#~ "constructor; Abaqus creates the "
#~ "**movieOptions** member for a viewport "
#~ "when the viewport is created using "
#~ "the values in the **movieOptions** "
#~ "member of the current viewport."
#~ msgstr ""

#~ msgid ""
#~ "Check `MovieOptions on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-movieoptionspyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the name of "
#~ "the movie. A list of valid movie"
#~ " names is in the **movies** "
#~ "repository in the **session** object."
#~ msgstr ""

#~ msgid "This method modifies the MovieOptions object."
#~ msgstr ""

#~ msgid ""
#~ "Check `MovieOptions.setValues on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-movieoptionspyc.htm?contextscope=all"
#~ "#simaker-movieoptionssetvaluespyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether a movie "
#~ "should be displayed in the viewport "
#~ "during an animation. The default value"
#~ " is OFF."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the scale applied "
#~ "to the movie frame width. The "
#~ "**xScale** argument is ignored when "
#~ "**positionMethod** =FIT_TO_VIEWPORT. The default "
#~ "value is 1.0.When **xScale** is "
#~ "negative, the movie frame is mirrored"
#~ " about its y-axis but its position"
#~ " is not affected."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the scale applied "
#~ "to the movie frame height. The "
#~ "**yScale** argument is ignored when "
#~ "**positionMethod** =FIT_TO_VIEWPORT. The default "
#~ "value is 1.0.When **yScale** is "
#~ "negative, the movie frame is mirrored"
#~ " about its x-axis but its position"
#~ " is not affected."
#~ msgstr ""

#~ msgid ""
#~ "A pair of Floats specifying the*X*- "
#~ "and **Y** offsets in millimeters from"
#~ " the lower-left corner of the "
#~ "viewport. The **origin** argument is "
#~ "ignored unless **positionMethod** =MANUAL. The"
#~ " default value is (0, 0)."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the translucency "
#~ "factor to use when displaying the "
#~ "movie frame. Possible values are 0.0 "
#~ "≤ **translucency** ≤ 1.0 with 0.0 "
#~ "being invisible and 1.0 being opaque."
#~ " The default value is 1.0."
#~ msgstr ""

#~ msgid ""
#~ "None or a MovieOptions object specifying"
#~ " the object from which values are "
#~ "to be copied. If other arguments "
#~ "are also supplied to setValues, they "
#~ "will override the values in the "
#~ "**options** member. The default value is"
#~ " None."
#~ msgstr ""

#~ msgid ""
#~ "A viewport is the container for "
#~ "the graphics generated by the "
#~ "application. TheViewport object stores the "
#~ "various settings that determine how "
#~ "objects are displayed within that "
#~ "viewport."
#~ msgstr ""

#~ msgid ""
#~ "Check `ViewportBase on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewportpyc.htm?contextscope=all>`__."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the currently"
#~ " active color mappings. Possible values "
#~ "are: DEFAULT_COLORS PART_GEOM_MAP_COLORS "
#~ "ASSEMBLY_MAP_COLORS PART_MAP_COLORS INSTANCE_MAP_COLORS"
#~ " INSTANCE_TYPE_MAP_COLORS SECTION_MAP_COLORS "
#~ "MATERIAL_MAP_COLORS LOAD_MAP_COLORS BC_MAP_COLORS "
#~ "INTERACTION_MAP_COLORS CONSTRAINT_MAP_COLORS "
#~ "SET_MAP_COLORS SURFACE_MAP_COLORS INTERNAL_SET_MAP_COLORS"
#~ " INTERNAL_SURFACE_MAP_COLORS DISPLAY_GRP_MAP_COLORS "
#~ "SELECTION_GRP_MAP_COLORS ELTYPE_MAP_COLORS PLOT_MAP_COLORS"
#~ " MESH_MAP_COLORS The default value is "
#~ "DEFAULT_COLORS."
#~ msgstr ""

#~ msgid ""
#~ "Check `ViewportBase.addDrawings on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewportpyc.htm?contextscope=all"
#~ "#simaker-viewportadddrawingspyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of String values identifying"
#~ " keys in the session.drawings repository."
#~ msgstr ""

#~ msgid "The ``animationController`` attribute was added."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean specifying whether the "
#~ "viewport is linked for synchronization. "
#~ "The default value is ON."
#~ msgstr ""

#~ msgid "\"type\""
#~ msgstr ""

#~ msgid "\"Element set\""
#~ msgstr ""

#~ msgid "\"Material\""
#~ msgstr ""

#~ msgid "\"Section\""
#~ msgstr ""

#~ msgid "\"Default\""
#~ msgstr ""

#~ msgid "\"Part\""
#~ msgstr ""

#~ msgid "\"Part instance\""
#~ msgstr ""

#~ msgid "\"Element type\""
#~ msgstr ""

#~ msgid "\"Averaging region\""
#~ msgstr ""

#~ msgid "\"Assembly\""
#~ msgstr ""

#~ msgid "\"Property\""
#~ msgstr ""

#~ msgid "\"Set\""
#~ msgstr ""

#~ msgid "\"Surface\""
#~ msgstr ""

#~ msgid "\"Skin\""
#~ msgstr ""

#~ msgid "\"Profile\""
#~ msgstr ""

#~ msgid "\"Part shape\""
#~ msgstr ""

#~ msgid "\"Part status\""
#~ msgstr ""

#~ msgid "\"Part geometry\""
#~ msgstr ""

#~ msgid "\"Meshability\""
#~ msgstr ""

#~ msgid "\"Instance type\""
#~ msgstr ""

#~ msgid "\"Load\""
#~ msgstr ""

#~ msgid "\"Boundary condition\""
#~ msgstr ""

#~ msgid "\"Interaction\""
#~ msgstr ""

#~ msgid "\"Constraint\""
#~ msgstr ""

#~ msgid "\"Interaction type\""
#~ msgstr ""

#~ msgid "\"Constraint type\""
#~ msgstr ""

#~ msgid "\"Display group\""
#~ msgstr ""

#~ msgid "\"Selection group\""
#~ msgstr ""

#~ msgid "\"Interaction property\""
#~ msgstr ""

#~ msgid "\"Connector\""
#~ msgstr ""

#~ msgid "\"Connector type\""
#~ msgstr ""

#~ msgid "\"Connector property\""
#~ msgstr ""

#~ msgid "\"Internal set\""
#~ msgstr ""

#~ msgid "\"Internal surface\""
#~ msgstr ""

#~ msgid "\"mapColors\""
#~ msgstr ""

#~ msgid "\"autoColors\""
#~ msgstr ""

#~ msgid "\"overrides\""
#~ msgstr ""

#~ msgid "\"defaultAutoColors\""
#~ msgstr ""

#~ msgid "\"defaultOverrides\""
#~ msgstr ""

#~ msgid "\"objectToCopy\""
#~ msgstr ""

#~ msgid "\"colorMapping\""
#~ msgstr ""

#~ msgid "\"colorMappings\""
#~ msgstr ""

#~ msgid "\"colorMode\""
#~ msgstr ""

#~ msgid "\"attributeColors\""
#~ msgstr ""

#~ msgid "\"updateOverrides\""
#~ msgstr ""

#~ msgid "\"colorCodeOverride\""
#~ msgstr ""

#~ msgid "\"initialColor\""
#~ msgstr ""

#~ msgid "\"Layup\""
#~ msgstr ""

#~ msgid "\"Ply\""
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the last "
#~ "applied color mapping. Possible values "
#~ "are: DEFAULT_COLORS PART_GEOM_MAP_COLORS "
#~ "ASSEMBLY_MAP_COLORS PART_MAP_COLORS INSTANCE_MAP_COLORS"
#~ " INSTANCE_TYPE_MAP_COLORS SECTION_MAP_COLORS "
#~ "MATERIAL_MAP_COLORS LOAD_MAP_COLORS BC_MAP_COLORS "
#~ "INTERACTION_MAP_COLORS CONSTRAINT_MAP_COLORS "
#~ "SET_MAP_COLORS SURFACE_MAP_COLORS INTERNAL_SET_MAP_COLORS"
#~ " INTERNAL_SURFACE_MAP_COLORS DISPLAY_GRP_MAP_COLORS "
#~ "SELECTION_GRP_MAP_COLORS ELTYPE_MAP_COLORS PLOT_MAP_COLORS"
#~ " MESH_MAP_COLORS The default value is "
#~ "DEFAULT_COLORS."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying which layer is "
#~ "affected by options settings when "
#~ "**displayMode** =OVERLAY. The current layer"
#~ " is also the only layer affected "
#~ "by view manipulations when*viewManipLayers* "
#~ "=CURRENT."
#~ msgstr ""

#~ msgid ""
#~ "Performance improvement will be significant"
#~ " when color coding is ON and "
#~ "repeating operations are performed using "
#~ "a script each of which requires "
#~ "color code updates. No benefit will "
#~ "be had when color coding is OFF."
#~ msgstr ""

#~ msgid ""
#~ "Some methods that require the Viewport"
#~ " to be up-to-date will override"
#~ " this setting. It is advisable to "
#~ "use this method sparingly."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the display "
#~ "mode of the viewport. Possible values"
#~ " are:SINGLE, specifying a single "
#~ "**displayedObject**.OVERLAY, specifying one or "
#~ "more layers to be displayed "
#~ "simultaneously—each layer contains one "
#~ "**displayedObject**."
#~ msgstr ""

#~ msgid ""
#~ "A Displayable object specifying the "
#~ "object to be displayed. The Displayable"
#~ " type is an abstract generalization. "
#~ "The concrete possible types are Part,"
#~ " Assembly, ConstrainedSketch, Odb, PlyStackPlot,"
#~ " or XYPlot. If **displayedObject** = "
#~ "None, Abaqus displays an empty viewport."
#~ msgstr ""

#~ msgid ""
#~ "A tuple of Strings specifying keys "
#~ "to the session.drawings repository. The "
#~ "default value is an empty sequence."
#~ msgstr ""

#~ msgid ""
#~ "It also ensures that the Viewport "
#~ "is updated correctly when **initialColor** "
#~ "is set."
#~ msgstr ""

#~ msgid ""
#~ "It is provided to allow scripts to"
#~ " refresh the Viewport before the "
#~ "script terminates. Normally, there would "
#~ "only be a single cumulative refresh "
#~ "that takes place immediately after the"
#~ " script completes."
#~ msgstr ""

#~ msgid ""
#~ "This method returns the element labels"
#~ " currently active in the viewport "
#~ "based on the current display group. "
#~ "The element labels are printed only "
#~ "when the **displayedObject** member in "
#~ "the Viewport object is set to an"
#~ " Odb. The getActiveElementLabels method has"
#~ " the following arguments:"
#~ msgstr ""

#~ msgid ""
#~ "Check `ViewportBase.getActiveElementLabels on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewportpyc.htm?contextscope=all"
#~ "#simaker-viewportgetactiveelementlabelspyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean flag to specify if any"
#~ " active cutting plane is to be "
#~ "considered in determining active elements."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean flag to specify if the"
#~ " active element labels are to be "
#~ "printed to the replay file."
#~ msgstr ""

#~ msgid ""
#~ "A Dictionary object of element labels,"
#~ " keyed by OdbInstance name. Returns "
#~ "None if the **displayedObject** member "
#~ "is not an Odb object."
#~ msgstr ""

#~ msgid ":class:`dict`"
#~ msgstr ""

#~ msgid ""
#~ "This method returns the node labels "
#~ "currently active in the viewport based"
#~ " on the current display group. The"
#~ " node labels are printed only when"
#~ " the **displayedObject** member in the "
#~ "Viewport object is set to an Odb."
#~ " The getActiveNodeLabels method has the "
#~ "following arguments:"
#~ msgstr ""

#~ msgid ""
#~ "Check `ViewportBase.getActiveNodeLabels on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewportpyc.htm?contextscope=all"
#~ "#simaker-viewportgetactivenodelabelspyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean flag to specify if any"
#~ " active cutting plane is to be "
#~ "considered in determining active nodes."
#~ msgstr ""

#~ msgid ""
#~ "A Boolean flag to specify if the"
#~ " active node labels are to be "
#~ "printed to the replay file."
#~ msgstr ""

#~ msgid ""
#~ "A Dictionary object of node labels, "
#~ "keyed by OdbInstance name. Returns None"
#~ " if the **displayedObject** member is "
#~ "not an Odb object."
#~ msgstr ""

#~ msgid ""
#~ "This method returns a dictionary "
#~ "containing the minimum, maximum and "
#~ "their location for the current primary"
#~ " variable. A contour plot should be"
#~ " displayed in the current viewport or"
#~ " else the method will return "
#~ "**None**."
#~ msgstr ""

#~ msgid ""
#~ "A dictionary with keys 'minPartInstanceName',"
#~ " 'minElementLabel', 'minNodeLabel', 'minPosition', "
#~ "'maxPartInstanceName', 'maxElementLabel', 'maxNodeLabel',"
#~ " 'maxPosition' ."
#~ msgstr ""

#~ msgid ""
#~ "A pair of Floats specifying the "
#~ "**X**  and **Y** coordinates in "
#~ "millimeters of the lower left corner "
#~ "of the current viewport from a "
#~ "coordinate system having its origin in"
#~ " the lower left corner of the "
#~ "drawing area. This origin refers to "
#~ "the viewport location when **windowState** "
#~ "=MINIMIZED."
#~ msgstr ""

#~ msgid ""
#~ "A String specifying the color that "
#~ "will be applied to all objects in"
#~ " the viewport at the start of "
#~ "color coding. The possible values are"
#~ " 'As is', 'Default' or a string "
#~ "with a hexadecimal representation of a"
#~ " color."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying a factor to be"
#~ " used in offsetting layers in the "
#~ "screen Z direction. Possible values are"
#~ " -1 to 1. A negative value "
#~ "reverses the apparent order in which "
#~ "the layers are plotted."
#~ msgstr ""

#~ msgid ""
#~ "Check `ViewportBase.offset on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewportpyc.htm?contextscope=all"
#~ "#simaker-viewportoffsetpyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the offset in "
#~ "millimeters of the **X** component of"
#~ " the viewport origin. The default "
#~ "value is 0."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the offset in "
#~ "millimeters of the **Y** component of"
#~ " the viewport origin. The default "
#~ "value is 0."
#~ msgstr ""

#~ msgid ""
#~ "Check `ViewportBase.removeDrawings on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewportpyc.htm?contextscope=all"
#~ "#simaker-viewportremovedrawingspyc>`__."
#~ msgstr ""

#~ msgid "A sequence of String values identifying keys in the Viewport sequence."
#~ msgstr ""

#~ msgid ""
#~ "This method modifies the Viewport "
#~ "object. The arguments to setValues are"
#~ " the same as the arguments to "
#~ "the Viewport method, except for the "
#~ "**name** argument. In addition, the "
#~ "setValues method has the following "
#~ "arguments:"
#~ msgstr ""

#~ msgid ""
#~ "Check `ViewportBase.setValues on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewportpyc.htm?contextscope=all"
#~ "#simaker-viewportsetvaluespyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the display "
#~ "mode of the viewport. Possible values"
#~ " are:  * SINGLE, specifying a single"
#~ " **displayedObject**. * OVERLAY, specifying "
#~ "one or more layers to be displayed"
#~ " simultaneously—each layer contains one "
#~ "**displayedObject**."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the display "
#~ "mode of the viewport. Possible values"
#~ " are:"
#~ msgstr ""

#~ msgid "SINGLE, specifying a single **displayedObject**."
#~ msgstr ""

#~ msgid ""
#~ "OVERLAY, specifying one or more layers"
#~ " to be displayed simultaneously—each layer"
#~ " contains one **displayedObject**."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Strings specifying the "
#~ "names of layers that will be "
#~ "displayed in the viewport when "
#~ "**displayMode** = OVERLAY."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying which layer "
#~ "or layers will be controlled by "
#~ "the view manipulation tools when "
#~ "**displayMode** = OVERLAY. Possible values "
#~ "are ALL and CURRENT."
#~ msgstr ""

#~ msgid ""
#~ "This method refreshes the Viewport "
#~ "display **numFrames** times and then "
#~ "checks to see if **numSeconds** seconds"
#~ " have elapsed. If not, it will "
#~ "continue refreshing the Viewport until "
#~ "the time has elapsed. At completion, "
#~ "the actual number of refreshes (frames)"
#~ " rendered and elapsed time will be"
#~ " reported along with the calculated "
#~ "frames-per-second (fps)."
#~ msgstr ""

#~ msgid ""
#~ "Check `ViewportBase.timeDisplay on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewportpyc.htm?contextscope=all"
#~ "#simaker-viewporttimedisplaypyc>`__."
#~ msgstr ""

#~ msgid ""
#~ "An Int specifying the minimum number "
#~ "of times to refresh the Viewport. "
#~ "The default value is 0."
#~ msgstr ""

#~ msgid ""
#~ "An Int specifying the minimum number "
#~ "of seconds to spend refreshing the "
#~ "Viewport. The default value is 10."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the number of "
#~ "degrees to rotate the model view "
#~ "about its Z axis before each "
#~ "refresh. The default value is 0.0."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the translucency that"
#~ " will be applied to objects colored"
#~ " using **initialColor** and it needs "
#~ "to be set along with **initialColor**."
#~ " If **initialColor** is set to 'As"
#~ " is' then translucency will have no"
#~ " effect."
#~ msgstr ""

#~ msgid ""
#~ "A Float specifying the width in "
#~ "millimeters of the viewport. Possible "
#~ "values are 30 ≤ **width** ≤ "
#~ "(*maxWidth*). The default value is 120."
#~ " Note: The maximum value of width "
#~ "(*maxWidth*) is the width of the "
#~ "screen in millimeters."
#~ msgstr ""

#~ msgid ""
#~ "A SymbolicConstant specifying the current "
#~ "state of a viewport. Possible values "
#~ "are NORMAL, MAXIMIZED, and MINIMIZED."
#~ msgstr ""

